{"version":3,"sources":["./src/app/api/request-builder.ts","./src/app/api/services/api-clients.service.ts","./src/app/shared/forms/dynamic-control/dynamic-control.component.ts","./src/app/shared/forms/dynamic-control/dynamic-control.component.html","./src/app/shared/unauthorized/unauthorized.component.ts","./src/app/shared/unauthorized/unauthorized.component.html","./src/app/_services/base.service.ts","./src/app/api/services/roles.service.ts","./src/app/_services/modal.service.ts","./src/app/api/services/get-master-class.service.ts","./src/app/api/api.module.ts","./src/app/_services/common.services.ts","./src/app/api/services/category.service.ts","./src/app/shared/table/table.component.ts","./src/app/shared/table/table.component.html","./src/environments/environment.ts","./src/app/_services/customErrorHandler.service.ts","./src/app/api/services/trailer.service.ts","./src/app/api/services.ts","./src/app/shared/table-new/table-new.component.ts","./src/app/shared/table-new/table-new.component.html","./src/app/api/api-configuration.ts","./src/app/shared/vulnerability-stats/vulnerability-stats.component.html","./src/app/shared/vulnerability-stats/vulnerability-stats.component.ts","./src/app/shared/forms/dynamic-form/dynamic-form.component.ts","./src/app/shared/forms/dynamic-form/dynamic-form.component.html","./src/app/shared/pnf/pnf.component.ts","./src/app/shared/pnf/pnf.component.html","./src/app/shared/s-table/s-table.component.ts","./src/app/shared/s-table/s-table.component.html","./src/app/_filters/app.filter-pipe.module.ts","./src/app/shared/s-exp-table/s-exp-table.component.ts","./src/app/shared/s-exp-table/s-exp-table.component.html","./src/app/shared/suppress-vuls-days/suppress-vuls-days.component.ts","./src/app/shared/suppress-vuls-days/suppress-vuls-days.component.html","./src/app/shared/shared.module.ts","./src/app/_services/form-control.service.ts","./src/app/shared/s-t-shimmer/s-t-shimmer.component.html","./src/app/shared/s-t-shimmer/s-t-shimmer.component.ts","./src/app/shared/vulnerability-overview/vulnerability-overview.component.html","./src/app/shared/vulnerability-overview/vulnerability-overview.component.ts","./src/app/core/auth.guard.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/api/base-service.ts","./src/app/_filters/app.filter.pipe.ts","./src/app/api/services/api.service.ts","./src/app/app.module.ts","./src/app/shared/confirm-dialog/confirm-dialog.component.ts","./src/app/shared/confirm-dialog/confirm-dialog.component.html","./src/app/shared/forms/custom-calendar/custom-calendar.component.ts","./src/app/shared/forms/custom-calendar/custom-calendar.component.html","./src/app/shared/pill-card/pill-card.component.ts","./src/app/shared/pill-card/pill-card.component.html","./src/app/api/services/users.service.ts","./src/app/api/services/identity-providers.service.ts","./src/app/api/services/utilities.service.ts","./src/app/api/services/content-pricing.service.ts","./src/app/api/services/content-episodes.service.ts","./src/app/_services/loader.service.ts","./src/app/_services/toastr.service.ts","./src/app/shared/s-crud-t/s-crud-t.component.ts","./src/app/shared/s-crud-t/s-crud-t.component.html","./src/app/shared/s-shimmer/s-shimmer.component.ts","./src/app/shared/s-shimmer/s-shimmer.component.html","./src/app/core/core.module.ts","./src/app/_services/authentication.service.ts","./src/app/shared/modal.component.ts","./src/app/app-routing.module.ts","./src/app/material.module.ts","./src/app/_services/master.service.ts","./src/app/api/services/content-data.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["/* tslint:disable */\n/* eslint-disable */\nimport { HttpRequest, HttpParameterCodec, HttpParams, HttpHeaders } from '@angular/common/http';\n\n/**\n * Custom parameter codec to correctly handle the plus sign in parameter\n * values. See https://github.com/angular/angular/issues/18261\n */\nclass ParameterCodec implements HttpParameterCodec {\n  encodeKey(key: string): string {\n    return encodeURIComponent(key);\n  }\n\n  encodeValue(value: string): string {\n    return encodeURIComponent(value);\n  }\n\n  decodeKey(key: string): string {\n    return decodeURIComponent(key);\n  }\n\n  decodeValue(value: string): string {\n    return decodeURIComponent(value);\n  }\n}\nconst ParameterCodecInstance = new ParameterCodec();\n\n/**\n * Defines the options for appending a parameter\n */\ninterface ParameterOptions {\n  style?: string;\n  explode?: boolean;\n}\n\n/**\n * Base class for a parameter\n */\nabstract class Parameter {\n  constructor(public name: string, public value: any, public options: ParameterOptions, defaultStyle: string, defaultExplode: boolean) {\n    this.options = options || {};\n    if (this.options.style === null || this.options.style === undefined) {\n      this.options.style = defaultStyle;\n    }\n    if (this.options.explode === null || this.options.explode === undefined) {\n      this.options.explode = defaultExplode;\n    }\n  }\n\n  serializeValue(value: any, separator = ','): string {\n    if (value === null || value === undefined) {\n      return '';\n    } else if (value instanceof Array) {\n      return value.map(v => this.serializeValue(v).split(separator).join(encodeURIComponent(separator))).join(separator);\n    } else if (typeof value === 'object') {\n      const array: string[] = [];\n      for (const key of Object.keys(value)) {\n        let propVal = value[key];\n        if (propVal !== null && propVal !== undefined) {\n          propVal = this.serializeValue(propVal).split(separator).join(encodeURIComponent(separator));\n          if (this.options.explode) {\n            array.push(`${key}=${propVal}`);\n          } else {\n            array.push(key);\n            array.push(propVal);\n          }\n        }\n      }\n      return array.join(separator);\n    } else {\n      return String(value);\n    }\n  }\n}\n\n/**\n * A parameter in the operation path\n */\nclass PathParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'simple', false);\n  }\n\n  append(path: string): string {\n    let value = this.value;\n    if (value === null || value === undefined) {\n      value = '';\n    }\n    let prefix = this.options.style === 'label' ? '.' : '';\n    let separator = this.options.explode ? prefix === '' ? ',' : prefix : ',';\n    let alreadySerialized = false;\n    if (this.options.style === 'matrix') {\n      // The parameter name is just used as prefix, except in some cases...\n      prefix = `;${this.name}=`;\n      if (this.options.explode && typeof value === 'object') {\n        prefix = ';';\n        if (value instanceof Array) {\n          // For arrays we have to repeat the name for each element\n          value = value.map(v => `${this.name}=${this.serializeValue(v, ';')}`);\n          value = value.join(';');\n          alreadySerialized = true;\n        } else {\n          // For objects we have to put each the key / value pairs\n          value = this.serializeValue(value, ';');\n          alreadySerialized = true\n        }\n      }\n    }\n    value = prefix + (alreadySerialized ? value : this.serializeValue(value, separator));\n    // Replace both the plain variable and the corresponding variant taking in the prefix and explode into account\n    path = path.replace(`{${this.name}}`, value);\n    path = path.replace(`{${prefix}${this.name}${this.options.explode ? '*' : ''}}`, value);\n    return path;\n  }\n\n  // @ts-ignore\n  serializeValue(value: any, separator = ','): string {\n    var result = typeof value === 'string' ? encodeURIComponent(value) : super.serializeValue(value, separator);\n    result = result.replace('%3D', '=');\n    result = result.replace('%3B', ';');\n    result = result.replace('%2C', ',');\n    return result;\n  }\n}\n\n/**\n * A parameter in the query\n */\nclass QueryParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'form', true);\n  }\n\n  append(params: HttpParams): HttpParams {\n    if (this.value instanceof Array) {\n      // Array serialization\n      if (this.options.explode) {\n        for (const v of this.value) {\n          params = params.append(this.name, this.serializeValue(v));\n        }\n      } else {\n        const separator = this.options.style === 'spaceDelimited'\n          ? ' ' : this.options.style === 'pipeDelimited'\n            ? '|' : ',';\n        return params.append(this.name, this.serializeValue(this.value, separator));\n      }\n    } else if (this.value !== null && typeof this.value === 'object') {\n      // Object serialization\n      if (this.options.style === 'deepObject') {\n        // Append a parameter for each key, in the form `name[key]`\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            params = params.append(`${this.name}[${key}]`, this.serializeValue(propVal));\n          }\n        }\n      } else if (this.options.explode) {\n        // Append a parameter for each key without using the parameter name\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            params = params.append(key, this.serializeValue(propVal));\n          }\n        }\n      } else {\n        // Append a single parameter whose values are a comma-separated list of key,value,key,value...\n        const array: any[] = [];\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            array.push(key);\n            array.push(propVal);\n          }\n        }\n        params = params.append(this.name, this.serializeValue(array));\n      }\n    } else if (this.value !== null && this.value !== undefined) {\n      // Plain value\n      params = params.append(this.name, this.serializeValue(this.value));\n    }\n    return params;\n  }\n}\n\n/**\n * A parameter in the HTTP request header\n */\nclass HeaderParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'simple', false);\n  }\n\n  append(headers: HttpHeaders): HttpHeaders {\n    if (this.value !== null && this.value !== undefined) {\n      if (this.value instanceof Array) {\n        for (const v of this.value) {\n          headers = headers.append(this.name, this.serializeValue(v));\n        }\n      } else {\n        headers = headers.append(this.name, this.serializeValue(this.value));\n      }\n    }\n    return headers;\n  }\n}\n\n/**\n * Helper to build http requests from parameters\n */\nexport class RequestBuilder {\n\n  private _path = new Map<string, PathParameter>();\n  private _query = new Map<string, QueryParameter>();\n  private _header = new Map<string, HeaderParameter>();\n  _bodyContent: any | null;\n  _bodyContentType?: string;\n\n  constructor(\n    public rootUrl: string,\n    public operationPath: string,\n    public method: string) {\n  }\n\n  /**\n   * Sets a path parameter\n   */\n  path(name: string, value: any, options?: ParameterOptions): void {\n    this._path.set(name, new PathParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets a query parameter\n   */\n  query(name: string, value: any, options?: ParameterOptions): void {\n    this._query.set(name, new QueryParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets a header parameter\n   */\n  header(name: string, value: any, options?: ParameterOptions): void {\n    this._header.set(name, new HeaderParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets the body content, along with the content type\n   */\n  body(value: any, contentType = 'application/json'): void {\n    if (value instanceof Blob) {\n      this._bodyContentType = value.type;\n    } else {\n      this._bodyContentType = contentType;\n    }\n    if (this._bodyContentType === 'application/x-www-form-urlencoded' && value !== null && typeof value === 'object') {\n      // Handle URL-encoded data\n      const pairs: Array<[string, string]> = [];\n      for (const key of Object.keys(value)) {\n        let val = value[key];\n        if (!(val instanceof Array)) {\n          val = [val];\n        }\n        for (const v of val) {\n          const formValue = this.formDataValue(v);\n          if (formValue !== null) {\n            pairs.push([key, formValue]);\n          }\n        }\n      }\n      this._bodyContent = pairs.map(p => `${encodeURIComponent(p[0])}=${encodeURIComponent(p[1])}`).join('&');\n    } else if (this._bodyContentType === 'multipart/form-data') {\n      // Handle multipart form data\n      const formData = new FormData();\n      if (value !== null && value !== undefined) {\n        for (const key of Object.keys(value)) {\n          const val = value[key];\n          if (val instanceof Array) {\n            for (const v of val) {\n              const toAppend = this.formDataValue(v);\n              if (toAppend !== null) {\n                formData.append(key, toAppend);\n              }\n            }\n          } else {\n            const toAppend = this.formDataValue(val);\n            if (toAppend !== null) {\n              formData.set(key, toAppend);\n            }\n          }\n        }\n      }\n      this._bodyContent = formData;\n    } else {\n      // The body is the plain content\n      this._bodyContent = value;\n    }\n  }\n\n  private formDataValue(value: any): any {\n    if (value === null || value === undefined) {\n      return null;\n    }\n    if (value instanceof Blob) {\n      return value;\n    }\n    if (typeof value === 'object') {\n      return JSON.stringify(value);\n    }\n    return String(value);\n  }\n\n  /**\n   * Builds the request with the current set parameters\n   */\n  build<T = any>(options?: {\n    /** Which content types to accept */\n    accept?: string;\n\n    /** The expected response type */\n    responseType?: 'json' | 'text' | 'blob' | 'arraybuffer';\n\n    /** Whether to report progress on uploads / downloads */\n    reportProgress?: boolean;\n  }): HttpRequest<T> {\n\n    options = options || {};\n\n    // Path parameters\n    let path = this.operationPath;\n    for (const pathParam of this._path.values()) {\n      path = pathParam.append(path);\n    }\n    const url = this.rootUrl + path;\n\n    // Query parameters\n    let httpParams = new HttpParams({\n      encoder: ParameterCodecInstance\n    });\n    for (const queryParam of this._query.values()) {\n      httpParams = queryParam.append(httpParams);\n    }\n\n    // Header parameters\n    let httpHeaders = new HttpHeaders();\n    if (options.accept) {\n      httpHeaders = httpHeaders.append('Accept', options.accept);\n    }\n    for (const headerParam of this._header.values()) {\n      httpHeaders = headerParam.append(httpHeaders);\n    }\n\n    // Request content headers\n    if (this._bodyContentType && !(this._bodyContent instanceof FormData)) {\n      httpHeaders = httpHeaders.set('Content-Type', this._bodyContentType);\n    }\n\n    // Perform the request\n    return new HttpRequest<T>(this.method.toUpperCase(), url, this._bodyContent, {\n      params: httpParams,\n      headers: httpHeaders,\n      responseType: options.responseType,\n      reportProgress: options.reportProgress\n    });\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { BaseService } from '../base-service';\nimport { ApiConfiguration } from '../api-configuration';\nimport { StrictHttpResponse } from '../strict-http-response';\nimport { RequestBuilder } from '../request-builder';\nimport { Observable } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\n\nimport { ApiClient } from '../models/api-client';\nimport { ApiClientCreate } from '../models/api-client-create';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiClientsService extends BaseService {\n  constructor(\n    config: ApiConfiguration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * Path part for operation getApiClientsApiKapiclientsGet\n   */\n  static readonly GetApiClientsApiKapiclientsGetPath = '/api/kapiclients';\n\n  /**\n   * Get Api Clients.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getApiClientsApiKapiclientsGet()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getApiClientsApiKapiclientsGet$Response(params?: {\n    realm?: any;\n  }): Observable<StrictHttpResponse<any>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ApiClientsService.GetApiClientsApiKapiclientsGetPath, 'get');\n    if (params) {\n      rb.query('realm', params.realm, {});\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<any>;\n      })\n    );\n  }\n\n  /**\n   * Get Api Clients.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getApiClientsApiKapiclientsGet$Response()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getApiClientsApiKapiclientsGet(params?: {\n    realm?: any;\n  }): Observable<any> {\n\n    return this.getApiClientsApiKapiclientsGet$Response(params).pipe(\n      map((r: StrictHttpResponse<any>) => r.body as any)\n    );\n  }\n\n  /**\n   * Path part for operation updateApiClientApiKapiclientsPut\n   */\n  static readonly UpdateApiClientApiKapiclientsPutPath = '/api/kapiclients';\n\n  /**\n   * Update Api Client.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `updateApiClientApiKapiclientsPut()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  updateApiClientApiKapiclientsPut$Response(params: {\n    realm?: any;\n    body: ApiClient\n  }): Observable<StrictHttpResponse<any>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ApiClientsService.UpdateApiClientApiKapiclientsPutPath, 'put');\n    if (params) {\n      rb.query('realm', params.realm, {});\n      rb.body(params.body, 'application/json');\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<any>;\n      })\n    );\n  }\n\n  /**\n   * Update Api Client.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `updateApiClientApiKapiclientsPut$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  updateApiClientApiKapiclientsPut(params: {\n    realm?: any;\n    body: ApiClient\n  }): Observable<any> {\n\n    return this.updateApiClientApiKapiclientsPut$Response(params).pipe(\n      map((r: StrictHttpResponse<any>) => r.body as any)\n    );\n  }\n\n  /**\n   * Path part for operation createApiClientApiKapiclientsPost\n   */\n  static readonly CreateApiClientApiKapiclientsPostPath = '/api/kapiclients';\n\n  /**\n   * Create Api Client.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `createApiClientApiKapiclientsPost()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  createApiClientApiKapiclientsPost$Response(params: {\n    realm?: any;\n    body: ApiClientCreate\n  }): Observable<StrictHttpResponse<any>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ApiClientsService.CreateApiClientApiKapiclientsPostPath, 'post');\n    if (params) {\n      rb.query('realm', params.realm, {});\n      rb.body(params.body, 'application/json');\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<any>;\n      })\n    );\n  }\n\n  /**\n   * Create Api Client.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `createApiClientApiKapiclientsPost$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  createApiClientApiKapiclientsPost(params: {\n    realm?: any;\n    body: ApiClientCreate\n  }): Observable<any> {\n\n    return this.createApiClientApiKapiclientsPost$Response(params).pipe(\n      map((r: StrictHttpResponse<any>) => r.body as any)\n    );\n  }\n\n  /**\n   * Path part for operation getApiClientSecretApiKapiclientsClientIdGet\n   */\n  static readonly GetApiClientSecretApiKapiclientsClientIdGetPath = '/api/kapiclients/{clientId}';\n\n  /**\n   * Get Api Client Secret.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getApiClientSecretApiKapiclientsClientIdGet()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getApiClientSecretApiKapiclientsClientIdGet$Response(params: {\n    clientId: string;\n    realm?: any;\n  }): Observable<StrictHttpResponse<any>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ApiClientsService.GetApiClientSecretApiKapiclientsClientIdGetPath, 'get');\n    if (params) {\n      rb.path('clientId', params.clientId, {});\n      rb.query('realm', params.realm, {});\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<any>;\n      })\n    );\n  }\n\n  /**\n   * Get Api Client Secret.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getApiClientSecretApiKapiclientsClientIdGet$Response()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getApiClientSecretApiKapiclientsClientIdGet(params: {\n    clientId: string;\n    realm?: any;\n  }): Observable<any> {\n\n    return this.getApiClientSecretApiKapiclientsClientIdGet$Response(params).pipe(\n      map((r: StrictHttpResponse<any>) => r.body as any)\n    );\n  }\n\n  /**\n   * Path part for operation deleteApiClientApiKapiclientsClientIdDelete\n   */\n  static readonly DeleteApiClientApiKapiclientsClientIdDeletePath = '/api/kapiclients/{clientId}';\n\n  /**\n   * Delete Api Client.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `deleteApiClientApiKapiclientsClientIdDelete()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  deleteApiClientApiKapiclientsClientIdDelete$Response(params: {\n    clientId: string;\n    realm?: any;\n  }): Observable<StrictHttpResponse<any>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ApiClientsService.DeleteApiClientApiKapiclientsClientIdDeletePath, 'delete');\n    if (params) {\n      rb.path('clientId', params.clientId, {});\n      rb.query('realm', params.realm, {});\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<any>;\n      })\n    );\n  }\n\n  /**\n   * Delete Api Client.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `deleteApiClientApiKapiclientsClientIdDelete$Response()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  deleteApiClientApiKapiclientsClientIdDelete(params: {\n    clientId: string;\n    realm?: any;\n  }): Observable<any> {\n\n    return this.deleteApiClientApiKapiclientsClientIdDelete$Response(params).pipe(\n      map((r: StrictHttpResponse<any>) => r.body as any)\n    );\n  }\n\n  /**\n   * Path part for operation generateApiKeyApiKapiclientsIdGetApiKeyPost\n   */\n  static readonly GenerateApiKeyApiKapiclientsIdGetApiKeyPostPath = '/api/kapiclients/{id}/getApiKey';\n\n  /**\n   * Generate Apikey.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `generateApiKeyApiKapiclientsIdGetApiKeyPost()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  generateApiKeyApiKapiclientsIdGetApiKeyPost$Response(params: {\n    realm?: any;\n    body: ApiClientCreate\n  }): Observable<StrictHttpResponse<any>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ApiClientsService.GenerateApiKeyApiKapiclientsIdGetApiKeyPostPath, 'post');\n    if (params) {\n      rb.query('realm', params.realm, {});\n      rb.body(params.body, 'application/json');\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<any>;\n      })\n    );\n  }\n\n  /**\n   * Generate Apikey.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `generateApiKeyApiKapiclientsIdGetApiKeyPost$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  generateApiKeyApiKapiclientsIdGetApiKeyPost(params: {\n    realm?: any;\n    body: ApiClientCreate\n  }): Observable<any> {\n\n    return this.generateApiKeyApiKapiclientsIdGetApiKeyPost$Response(params).pipe(\n      map((r: StrictHttpResponse<any>) => r.body as any)\n    );\n  }\n\n  /**\n   * Path part for operation getApiClientRoleApiKapiclientsClientIdGetclientrolePost\n   */\n  static readonly GetApiClientRoleApiKapiclientsClientIdGetclientrolePostPath = '/api/kapiclients/{clientId}/getclientrole';\n\n  /**\n   * Get Api Client Role.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getApiClientRoleApiKapiclientsClientIdGetclientrolePost()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getApiClientRoleApiKapiclientsClientIdGetclientrolePost$Response(params: {\n    clientId: string;\n    realm?: any;\n  }): Observable<StrictHttpResponse<any>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ApiClientsService.GetApiClientRoleApiKapiclientsClientIdGetclientrolePostPath, 'post');\n    if (params) {\n      rb.path('clientId', params.clientId, {});\n      rb.query('realm', params.realm, {});\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<any>;\n      })\n    );\n  }\n\n  /**\n   * Get Api Client Role.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getApiClientRoleApiKapiclientsClientIdGetclientrolePost$Response()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getApiClientRoleApiKapiclientsClientIdGetclientrolePost(params: {\n    clientId: string;\n    realm?: any;\n  }): Observable<any> {\n\n    return this.getApiClientRoleApiKapiclientsClientIdGetclientrolePost$Response(params).pipe(\n      map((r: StrictHttpResponse<any>) => r.body as any)\n    );\n  }\n\n}\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport { FormGroup} from '@angular/forms';\nimport {AuthenticationService} from '../../../_services/authentication.service';\n\n@Component({\n  selector: 'app-dynamic-control',\n  templateUrl: './dynamic-control.component.html',\n  styleUrls: ['./dynamic-control.component.scss']\n})\nexport class DynamicControlComponent{\n\n  constructor(public authService: AuthenticationService) {\n  }\n  @Output() companyChange = new EventEmitter();\n  @Output() valChange = new EventEmitter();\n  @Input() outputValue: any;\n  @Input() formElement: any;\n  @Input() form!: FormGroup;\n\n  get isValid(): any {\n    // @ts-ignore\n    return this.form.controls[this.formElement.key].valid;\n  }\n\n\n\n  // tslint:disable-next-line:use-lifecycle-interface\n  /*ngOnChanges(): void {\n    if (this.form === undefined) {\n      this.form = this.formControlService.toFormControl(this.formElement);\n    }\n  }*/\n\n\n\n  onKeydownMain(e: any): void {\n    let i = 0;\n    if (e.target.value.length < 1) {\n      if (e.keyCode === 32) {\n        return;\n      }\n    } else {\n      if (e.keyCode === 32) {\n        if (i !== 0) {\n          return;\n        }\n        i++;\n      } else {\n        i = 0;\n      }\n    }\n  }\n\n  selectedFile(file: any, key: any): void {\n    this.outputValue[key] = file;\n  }\n\n  callBack($event: any, callback: boolean, formElement: any): void {\n    if (callback) {\n      this.outputValue[formElement] = $event;\n      this.valChange.emit($event);\n    }\n  }\n}\n","<div [formGroup]=\"form\">\n  <div [ngSwitch]=\"formElement.type\">\n    <!-- TextBox -->\n    <mat-form-field appearance=\"outline\" class=\"form-element\" *ngSwitchCase=\"'text'\">\n      <mat-label>{{formElement.label}}</mat-label>\n      <input matInput [placeholder]=\"formElement.label\"\n             [id]=\"formElement.key\"\n             [type]=\"formElement.type\"\n             [readonly]=\"formElement.readonly\"\n             [required]=\"formElement.required\"\n             [(ngModel)]=\"outputValue[formElement.key]\"\n             [formControlName]=\"formElement.key\"\n             (keydown)=\"onKeydownMain($event)\"\n             autocomplete=\"(formElement.label === 'username')? 'new-username' : 'OFF'\">\n      <!--<mat-hint *ngIf=\"formElement.example !== undefined\">\n        <mat-icon>info_outline</mat-icon>{{formElement.example}}</mat-hint>-->\n      <mat-error>\n        {{formElement.label}} is required. <span class=\"ml10\">{{formElement.errmsg}}</span>\n      </mat-error>\n    </mat-form-field>\n\n    <!-- TextBox -->\n\n    <!-- Static -->\n\n    <!--&lt;!&ndash; File &ndash;&gt;\n    <div *ngSwitchCase=\"'file'\">\n      <app-file-upload [chooseLabel]=\"formElement.label\"\n                       (fileCallbackEvent)=\"selectedFile($event,formElement.key)\">\n      </app-file-upload>\n    </div>-->\n\n    <!-- File -->\n    <mat-form-field appearance=\"outline\" class=\"form-element\" *ngSwitchCase=\"'number'\">\n      <mat-label>{{formElement.label}}</mat-label>\n      <input matInput\n             [placeholder]=\"formElement.label\"\n             [id]=\"formElement.key\" [type]=\"formElement.type\"\n             [readonly]=\"formElement.readonly\"\n             [required]=\"formElement.required\"\n             [min]=\"formElement.min\" [max]=\"formElement.max\"\n             [(ngModel)]=\"outputValue[formElement.key]\"\n             autocomplete=\"OFF\"\n             [formControlName]=\"formElement.key\">\n      <!--<mat-hint *ngIf=\"formElement.example !== undefined\">\n        <mat-icon>info_outline</mat-icon>{{formElement.example}}</mat-hint>-->\n      <mat-error>\n        {{formElement.label}} is required. <span class=\"ml10\">{{formElement.errmsg}}</span>\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\" class=\"form-element\" *ngSwitchCase=\"'int'\">\n      <mat-label>{{formElement.label}}</mat-label>\n      <input matInput\n             [placeholder]=\"formElement.label\"\n             [id]=\"formElement.key\" [type]=\"formElement.type\"\n             [readonly]=\"formElement.readonly\"\n             [required]=\"formElement.required\"\n             [(ngModel)]=\"outputValue[formElement.key]\"\n             autocomplete=\"OFF\"\n             [formControlName]=\"formElement.key\">\n      <!--<mat-hint *ngIf=\"formElement.example !== undefined\">\n        <mat-icon>info_outline</mat-icon> {{formElement.example}}</mat-hint>-->\n      <mat-error>\n        {{formElement.label}} is required. <span class=\"ml10\">{{formElement.errmsg}}</span>\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\" class=\"form-element\" *ngSwitchCase=\"'integer'\">\n      <mat-label>{{formElement.label}}</mat-label>\n      <input matInput\n             [placeholder]=\"formElement.label\"\n             [id]=\"formElement.key\" [type]=\"formElement.type\"\n             [readonly]=\"formElement.readonly\"\n             [required]=\"formElement.required\"\n             [(ngModel)]=\"outputValue[formElement.key]\"\n             autocomplete=\"OFF\"\n             [formControlName]=\"formElement.key\">\n      <!--<mat-hint *ngIf=\"formElement.example !== undefined\">\n        <mat-icon>info_outline</mat-icon>{{formElement.example}}</mat-hint>-->\n      <mat-error>\n        {{formElement.label}} is required. <span class=\"ml10\">{{formElement.errmsg}}</span>\n      </mat-error>\n    </mat-form-field>\n\n    <!-- HiddenTextBox -->\n    <mat-form-field appearance=\"outline\" class=\"form-element display-none\"  *ngSwitchCase=\"'hidden'\">\n      <input matInput\n             [placeholder]=\"formElement.label\"\n             [id]=\"formElement.key\"\n             [type]=\"'text'\"\n             [required]=\"formElement.required\"\n             [(ngModel)]=\"outputValue[formElement.key]\"\n             [readonly]=\"true\"\n             [formControlName]=\"formElement.key\">\n      <!--<mat-hint *ngIf=\"formElement.example !== undefined\">\n        <mat-icon>info_outline</mat-icon>{{formElement.example}}</mat-hint>-->\n      <mat-error>\n        {{formElement.label}} is required. <span class=\"ml10\">{{formElement.errmsg}}</span>\n      </mat-error>\n    </mat-form-field>\n    <!-- HiddenTextBox -->\n\n    <!-- Password -->\n    <mat-form-field appearance=\"outline\" class=\"form-element\"\n                    *ngSwitchCase=\"'password'\">\n      <mat-label>{{formElement.label}}</mat-label>\n      <input matInput\n             [placeholder]=\"formElement.label\"\n             [id]=\"formElement.key\"\n             [type]=\"formElement.type\"\n             [required]=\"formElement.required\"\n             autocomplete=\"new-password\"\n             [(ngModel)]=\"outputValue[formElement.key]\"\n             [formControlName]=\"formElement.key\">\n      <!--<mat-hint *ngIf=\"formElement.example !== undefined\">\n        <mat-icon>info_outline</mat-icon>{{formElement.example}}</mat-hint>-->\n      <mat-error>\n        {{formElement.label}} is required. <span class=\"ml10\">{{formElement.errmsg}}</span>\n      </mat-error>\n    </mat-form-field>\n    <!-- Password -->\n\n    <!-- DropDown -->\n    <mat-form-field appearance=\"outline\" class=\"form-element\" *ngSwitchCase=\"'dropdown'\">\n      <mat-label>{{formElement.label}}</mat-label>\n      <mat-select [(ngModel)]=\"outputValue[formElement.key]\" [formControlName]=\"formElement.key\"\n                  (valueChange)=\"callBack($event, formElement.callback, formElement.key)\" [id]=\"formElement.key\">\n        <!--            (selectionChange)=\"formElement.callback && callBack($event)\" (valueChange)=\"formElement.callback && callBack($event)\"-->\n        <mat-option *ngFor=\"let item of formElement.options\" [id]=\"item.key\" [value]=\"item.value\">{{item.key}}\n        </mat-option>\n      </mat-select>\n      <!--<mat-hint *ngIf=\"formElement.example !== undefined\">\n        <mat-icon>info_outline</mat-icon>{{formElement.example}}</mat-hint>-->\n      <mat-error>\n        {{formElement.label}} is required. <span class=\"ml10\">{{formElement.errmsg}}</span>\n      </mat-error>\n    </mat-form-field>\n    <!-- DropDown -->\n\n    <!-- CheckBox -->\n    <div class=\"form-element\" *ngSwitchCase=\"'checkbox'\">\n      <mat-checkbox color=\"primary\" [(ngModel)]=\"outputValue[formElement.key]\" [id]=\"formElement.key\"\n                  [value]=\"formElement.value\" [formControlName]=\"formElement.key\">\n        {{formElement.label}}\n      </mat-checkbox>\n    </div>\n    <!-- CheckBox -->\n\n    <!-- SlideToggle -->\n    <div class=\"form-element\" *ngSwitchCase=\"'slidetoggle'\">\n      <mat-slide-toggle [(ngModel)]=\"outputValue[formElement.key]\" [id]=\"formElement.key\"\n                      [formControlName]=\"formElement.key\"> {{formElement.label}}\n      </mat-slide-toggle>\n    </div>\n    <!-- SlideToggle -->\n\n    <!-- RadioButton -->\n    <div class=\"form-element\" *ngSwitchCase=\"'radiobutton'\">\n      <mat-radio-group [(ngModel)]=\"outputValue[formElement.key]\" [formControlName]=\"formElement.key\"\n                       aria-label=\"Select an option\">\n        <mat-radio-button *ngFor=\"let items of formElement.options\" [id]=\"items.key\" [value]=\"items.value\">\n          {{items.key}}\n        </mat-radio-button>\n\n      </mat-radio-group>\n    </div>\n    <!-- RadioButton -->\n\n    <!-- TextArea -->\n    <mat-form-field appearance=\"outline\" class=\"form-element\" *ngSwitchCase=\"'textarea'\">\n      <mat-label>{{formElement.label}}</mat-label>\n      <textarea matInput [(ngModel)]=\"outputValue[formElement.key]\" [placeholder]=\"formElement.label\"\n               [formControlName]=\"formElement.key\" [id]=\"formElement.key\"\n                [value]=\"formElement.value\"></textarea>\n      <mat-error>\n        {{formElement.label}} is required\n      </mat-error>\n    </mat-form-field>\n    <!-- TextArea -->\n\n    <!-- DatePicker -->\n    <mat-form-field appearance=\"outline\" class=\"form-element\" *ngSwitchCase=\"'datepicker'\">\n      <mat-label>{{formElement.label}}</mat-label>\n      <input matInput [(ngModel)]=\"outputValue[formElement.key]\" [formControlName]=\"formElement.key\"\n             [matDatepicker]=\"picker\" [placeholder]=\"formElement.label\">\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n      <mat-datepicker #picker></mat-datepicker>\n      <mat-error> {{formElement.label}} is required </mat-error>\n    </mat-form-field>\n    <!-- DatePicker -->\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {AuthenticationService} from '../../_services/authentication.service';\nimport {ModalService} from '../../_services/modal.service';\nimport {LoaderService} from '../../_services/loader.service';\n\n@Component({\n  selector: 'app-unauthorized',\n  templateUrl: './unauthorized.component.html',\n  styleUrls: ['./unauthorized.component.scss']\n})\nexport class UnauthorizedComponent implements OnInit {\n\n  constructor(private authService: AuthenticationService, public modalService: ModalService,\n              private loaderService: LoaderService) { }\n\n  ngOnInit(): void {\n    this.loaderService.display(true);\n    setTimeout(() => {\n      this.modalService.open('unauthorized');\n    });\n  }\n\n  logout(): void {\n    this.authService.logout();\n  }\n}\n","<s-modal id=\"unauthorized\">\n  <form #uauthorized=\"ngForm\">\n    <mat-card class=\"d-flex flex-row is-align-items-flex-start py-0\">\n      <div class=\"d-flex flex-row align-items-center list-right list-right\">\n        <div class=\"col-lg-12 text-center\">\n          <img src=\"/assets/images/unauthorized.png\" alt=\"Release Notes\" width=\"200px\">\n          <p class=\"mat-body-1\"></p>\n        </div>\n      </div>\n      <mat-card class=\"modal mat-elevation-z0 pr-0 w-100\">\n        <div class=\"mat-title\">Unauthorized</div>\n        <mat-card-content class=\"\">\n          <h1>You are not authorized to access this page. Please contact administrator.</h1>\n        </mat-card-content>\n        <mat-card-footer class=\"mat-card-footer text-right pt-3 pb-3 pr-3 toolbar-top\">\n          <button mat-raised-button class=\"mat-warn\" (click)=\"logout()\"\n                  id=\"cancel11\">LOGOUT\n          </button>\n        </mat-card-footer>\n      </mat-card>\n    </mat-card>\n  </form>\n</s-modal>\n","import {HttpClient, HttpHeaders, HttpParams, HttpErrorResponse, HttpEventType} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport {map} from 'rxjs/operators';\nimport {throwError} from 'rxjs';\nimport { ngxCsv } from 'ngx-csv/ngx-csv';\n\ninterface NetaResponse {\n  status: string;\n  msg: any;\n}\n\n@Injectable({providedIn: 'root'})\nexport class BaseRequestService {\n  cyberLabel: any;\n  isAssessment = false;\n  showCompany = true;\n  showAssessment = false;\n  scoreCompanyHash: any = {};\n  verifyWindow: any;\n  o365window: any;\n  authHeader = new HttpHeaders({'Content-Type': 'application/json', Authorization: btoa(window.location.host)});\n  currentSite: any; currentCompany: any;\n  resources: any = {};\n  companyId: any;\n  helpLinks: any;\n  enckey: any;\n  vendorLogo = ['2n.svg', 'camio.png', '3com.png', '4rf.png', 'a10.png', 'accedian.png', 'adtran.png', 'adva.svg', 'aerohive.svg', 'akcp.png', 'alcatellucent.svg', 'alcoma-almp.png', 'alliedtelesis.svg', 'allworx.svg', 'alpha.png', 'alpine.png', 'alvarion.png', 'amazon.svg', 'apc.svg', 'apple.svg', 'arbor.png', 'arch.svg', 'areca.png', 'arista.svg', 'arraynetworks.png', 'arris.svg', 'aruba.svg', 'asuswrt-merlin.png', 'atal.png', 'audiocodes.png', 'avaya.svg', 'avocent.svg', 'avtech.svg', 'axis.svg', 'barracuda.svg', 'bdcom.svg', 'benuos.png', 'bintec.png', 'bluecoat.png', 'bnt.png', 'broadcom.svg', 'brocade.svg', 'brother.svg', 'buffalo.svg', 'ca.png', 'calix.svg', 'cambium.svg', 'camio.png', 'canon.svg', 'carel.png', 'ccpower.png', 'centos.svg', 'ceragon.png', 'chatsworth.png', 'checkpoint.png', 'ciena.svg', 'cisco-old.png', 'cisco.svg', 'citrix.svg', 'comet.png', 'comtrol.png', 'conexant.png', 'coreos.svg', 'corero.png', 'coriant.svg', 'cradlepoint.png', 'ctcu.svg', 'ctm.png', 'cumulus.png', 'cxr-networks.png', 'cyberoam.png', 'cyberpower.svg', 'dahua.png', 'dasan.png', 'datacom.png', 'dcn.png', 'dd-wrt.png', 'ddn.png', 'debian.svg', 'deliberant.png', 'dell.svg', 'delta.png', 'develop.png', 'devuan.svg', 'digipower.png', 'dlink.png', 'dlink.svg', 'dpstelecom.png', 'dragonfly.svg', 'dragonwave.png', 'draytek.svg', 'eaton.svg', 'edge-core.png', 'edgecore.png', 'edgeos.svg', 'eip.png', 'eltek.png', 'eltex.png', 'emc.svg', 'emerson.svg', 'endian.png', 'engenius.png', 'enlogic.png', 'enterasys.svg', 'epson.svg', 'ericsson.svg', 'etherwan.png', 'exalt.png', 'exinda.png', 'exterity.svg', 'extrahop.png', 'extreme.svg', 'extremeboss.svg', 'extremevoss.svg', 'f5.svg', 'fedora.svg', 'fiberhome.svg', 'firebrick.svg', 'force10.svg', 'fortinet.svg', 'foundry.png', 'freebsd.svg', 'fujitsu.svg', 'gamatronicups.png', 'gandi.png', 'ge.svg', 'geist.png', 'generex-ups.svg', 'generic.svg', 'gentoo.svg', 'glassway.svg', 'gude.png', 'halon.svg', 'hanwhatechwin.svg', 'hds.svg', 'hikvision.png', 'hillstone.svg', 'himoinsa.svg', 'hirschmann.svg', 'hp.svg', 'hpe.svg', 'huawei.svg', 'hwg-poseidon.png', 'hwg.svg', 'hytera.png', 'ibmos.svg', 'ict.png', 'ignitenet.png', 'infoblox.svg', 'ingrasys.png', 'junos.png', 'kemp.png', 'konica.svg', 'kti.svg', 'kyocera.svg', 'lancom.png', 'lanier.png', 'lantronix.svg', 'lenovo.svg', 'lexmark.svg', 'ligowave.png', 'linksys.png', 'linux.svg', 'logmaster.png', 'maipu.png', 'mandrake.png', 'marathonups.png', 'mcafee.png', 'meinberg.svg', 'mellanox.png', 'meraki.png', 'mge.png', 'microsemi.png', 'mikrotik.svg', 'mimosa.svg', 'minkelsrms.png', 'mirth.png', 'mitsubishi.svg', 'monowall.png', 'moxa.svg', 'mrv.png', 'msl.svg', 'nec.svg', 'netapp.svg', 'netbotz.png', 'netbsd.svg', 'netgear.svg', 'netmanplus.png', 'netmodule.png', 'netonix.svg', 'netopia.png', 'netping.svg', 'netvision.png', 'nimble.svg', 'nokia.svg', 'novell.svg', 'nrg.png', 'oki.svg', 'omnitron.png', 'open-e.svg', 'openaccess.png', 'openbsd.svg', 'opengear.svg', 'openindiana.png', 'opensolaris.png', 'opensuse.svg', 'openwrt.svg', 'opnsense.png', 'oracle.svg', 'packetflux.png', 'panos.svg', 'papouch-tme.png', 'pbi.png', 'pbn.png', 'perle.png', 'pfsense.svg', 'phybridge.svg', 'ping.svg', 'planet.png', 'powercode.png', 'powerwalker.png', 'procera.png', 'proxim.png', 'proxmox.svg', 'pulse.png', 'qnap.svg', 'quanta.svg', 'radlan.png', 'radware.svg', 'radwin.svg', 'raisecom.png', 'raritan.svg', 'raspbian.svg', 'ray.png', 'redhat.svg', 'ricoh.svg', 'rittal.svg', 'riverbed.png', 'rockstor.svg', 'ruckus.svg', 'saf.png', 'samsungprinter.svg', 'savin.svg', 'schneider.svg', 'screenos.png', 'servertech.png', 'sharp.png', 'siae.png', 'siemens.svg', 'siklu.png', 'siteboss.png', 'sixnet.png', 'slackware.png', 'smartoptics.png', 'snom.svg', 'solaris.svg', 'sonicwall.svg', 'sonus.png', 'sophos.png', 'speedtouch.png', 'stormshield.svg', 'sub10.png', 'supermicro.png', 'suse.png', 'symbol.png', 'synology.svg', 'tandberg.svg', 'technicolor.svg', 'tegile.svg', 'telco-systems.png', 'teleste.png', 'teradici.png', 'terra.svg', 'tomato.png', 'toshiba.svg', 'tplink.svg', 'trango.png', 'tranzeo.png', 'tripplite.svg', 'tsc.png', 'tyconsystems.png', 'ubiquiti.svg', 'ubuntu.svg', 'uniflair.png', 'vanguard.png', 'vertiv.png', 'viprinux.png', 'vivotek.svg', 'vmware.svg', 'voswall.png', 'vubiq.png', 'vyatta.png', 'vyos.png', 'watchguard.svg', 'waystream.svg', 'windows.svg', 'wti.svg', 'wxgoos.png', 'xerox.svg', 'xirrus.png', 'zebra.svg', 'zhone.png', 'zte.svg', 'zyxel.svg'];\n  overlayLoadingTemplate =\n    '<span class=\"\">' +\n    '<i class=\"fa fa-spinner fa-spin\"></i> Please wait while your rows are loading</span>';\n  companyList: any = [];\n  constructor(readonly httpClient: HttpClient, private titleService: Title) {\n    this.getWhiteLabelSettings();\n    // this.getEncryptKey();\n    // this.getResourcesData();\n    this.getHelpLinks();\n  }\n\n  public downloadCSV(data: {}[], title: string, options?: any): void {\n    if (options) {\n      // tslint:disable-next-line:no-unused-expression\n      new ngxCsv(data, title, options);\n    } else {\n      // tslint:disable-next-line:no-unused-expression\n      new ngxCsv(data, title, { headers: Object.keys(data[0])});\n    }\n  }\n\n  public upload(url: string, data: any): any {\n    return this.httpClient.post<any>(url, data, {\n      reportProgress: true,\n      observe: 'events'\n    }).pipe(map((event) => {\n      switch (event.type) {\n        case HttpEventType.UploadProgress:\n          // @ts-ignore\n          const progress = Math.round(100 * event.loaded / event.total);\n          return { status: 'progress', message: progress };\n        case HttpEventType.Response:\n          return event.body;\n        default:\n          return `Unhandled event: ${event.type}`;\n      }\n    }));\n  }\n  public getClientData(): any {\n    return this.httpClient.get('https://extreme-ip-lookup.com/json/');\n  }\n  private getEncryptKey(): void {\n    this.doRequest('/api/cyberutils/dummy/getEncryptionKey', 'post',\n      {}, null, this.authHeader).subscribe((data: any) => {\n      this.enckey = atob(data.msg);\n    });\n  }\n  public getHelpLinks(): void {\n    if (!this.helpLinks && localStorage.getItem('helpLinks') && localStorage.getItem('helpLinks') !== null) {\n      this.helpLinks = JSON.parse(localStorage.getItem('helpLinks') || '{}');\n    } else {\n      this.doRequest('/assets/text/help/links.json', 'get').subscribe((data: any) => {\n        this.helpLinks = data;\n        localStorage.setItem('helpLinks', JSON.stringify(data));\n      });\n    }\n  }\n  public getWhiteLabelSettings(): void {\n    this.cyberLabel = {};\n    this.cyberLabel.productName = 'Socialswag'; this.cyberLabel.eulaLink = '';\n    this.cyberLabel.agentLink = 'https://netalyticsvulnerabilitydownload.s3-ap-southeast-1.amazonaws.com/CyberCNSScanner.exe';\n    this.doRequest('/assets/json/wlb.json', 'get').subscribe((data: {}) => {\n      this.cyberLabel = data;\n      this.titleService.setTitle( this.cyberLabel.productName );\n    });\n  }\n  public getResourcesData(): void {\n    this.doRequest('/assets/text/en-US/strings.json', 'get').subscribe((data: {}) => {\n      this.resources = data;\n    });\n  }\n  public setCurrentCompany(companyId: any): void {\n    this.companyId = companyId;\n  }\n  public nonce(): number | string {\n      let val = '';\n      const hex = 'abcdefghijklmnopqrstuvwxyz0123456789';\n      for (let i = 0; i < 16; i++) { val += hex.charAt(Math.floor(Math.random() * hex.length)); }\n      return val;\n  }\n\n  public unsafePublish(topic: string, message: string): void {\n    // this._mqttService.unsafePublish(topic, message, {qos: 0, retain: false});\n  }\n\n  toHHMMSS = (secs: any) => {\n    const sec_num = parseInt(secs, 10)\n    const hours   = Math.floor(sec_num / 3600)\n    const minutes = Math.floor(sec_num / 60) % 60\n    const seconds = sec_num % 60\n\n    return [hours,minutes,seconds]\n    .map(v => v < 10 ? \"0\" + v : v)\n    .filter((v,i) => v !== \"00\" || i > 0)\n    .join(\":\")\n  } \n  \n  toHttpParams(obj: any): any {\n    const params = {};\n    for (const key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        const val = obj[key];\n        if (val !== null && val !== undefined) {\n          if (typeof val === 'object') {\n            // @ts-ignore\n            params[key] = JSON.stringify(val);\n          } else {\n            // @ts-ignore\n            params[key] = val.toString();\n          }\n        }\n      }\n    }\n    return params;\n  }\n\n  deleteRequest(endPointUrl: string): any {\n    return this.httpClient.delete<NetaResponse>(`${endPointUrl}`).pipe(map(response => this.handleResponse(response)));\n  }\n\n  doRequest(endPointUrl: string,\n            method: string,\n            data?: any,\n            params?: any,\n            headers?: HttpHeaders, hashOptions?: any): any {\n    const httpOptions = {\n      headers: headers\n        ? headers\n        : new HttpHeaders({\n          'Content-Type': 'application/json',\n        }),\n      body: JSON.stringify(data),\n      params,\n    };\n    if (params) {\n      httpOptions.params = new HttpParams({\n          fromObject: this.toHttpParams(params)\n        }\n      );\n    }\n    // @ts-ignore\n    httpOptions.headers.hashOptions = hashOptions ? hashOptions : {isLoading: false};\n    return this.httpClient\n      .request<NetaResponse>(method, `${endPointUrl}`, httpOptions)\n      .pipe(\n        map(response => this.handleResponse(response))\n      );\n  }\n  getSnakeCaseName(camelCase: string): string {\n      return camelCase.replace( /([A-Z])/g, '_$1').toLowerCase().replace(/^_(.*)/g, '$1');\n  }\n\n  private handleResponse(response: NetaResponse): NetaResponse {\n    return response;\n  }\n\n  private handleError(error: HttpErrorResponse): any {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError('Something bad happened; please try again later.');\n  }\n\n  async getDescription(content_id: any, language?:any): Promise<any> {\n    const lang = language.toLowerCase();\n    const url = `https://content-socialswag.s3.ap-south-1.amazonaws.com/content/masterclass_${lang}.json`;\n    const description = await this.httpClient.get<any>(url).toPromise();\n    if(description[content_id]) return description[content_id];\n    else return [];\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { BaseService } from '../base-service';\nimport { ApiConfiguration } from '../api-configuration';\nimport { StrictHttpResponse } from '../strict-http-response';\nimport { RequestBuilder } from '../request-builder';\nimport { Observable } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\n\nimport { RoleCreate } from '../models/role-create';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RolesService extends BaseService {\n  constructor(\n    config: ApiConfiguration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * Path part for operation getRolesApiKrolesGet\n   */\n  static readonly GetRolesApiKrolesGetPath = '/api/kroles';\n\n  /**\n   * Get Roles.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getRolesApiKrolesGet()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getRolesApiKrolesGet$Response(params?: {\n    realm?: any;\n  }): Observable<StrictHttpResponse<any>> {\n\n    const rb = new RequestBuilder(this.rootUrl, RolesService.GetRolesApiKrolesGetPath, 'get');\n    if (params) {\n      rb.query('realm', params.realm, {});\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<any>;\n      })\n    );\n  }\n\n  /**\n   * Get Roles.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getRolesApiKrolesGet$Response()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getRolesApiKrolesGet(params?: {\n    realm?: any;\n  }): Observable<any> {\n\n    return this.getRolesApiKrolesGet$Response(params).pipe(\n      map((r: StrictHttpResponse<any>) => r.body as any)\n    );\n  }\n\n  /**\n   * Path part for operation updateRoleApiKrolesPut\n   */\n  static readonly UpdateRoleApiKrolesPutPath = '/api/kroles';\n\n  /**\n   * Update Role.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `updateRoleApiKrolesPut()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  updateRoleApiKrolesPut$Response(params: {\n    realm?: any;\n    body: RoleCreate\n  }): Observable<StrictHttpResponse<any>> {\n\n    const rb = new RequestBuilder(this.rootUrl, RolesService.UpdateRoleApiKrolesPutPath, 'put');\n    if (params) {\n      rb.query('realm', params.realm, {});\n      rb.body(params.body, 'application/json');\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<any>;\n      })\n    );\n  }\n\n  /**\n   * Update Role.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `updateRoleApiKrolesPut$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  updateRoleApiKrolesPut(params: {\n    realm?: any;\n    body: RoleCreate\n  }): Observable<any> {\n\n    return this.updateRoleApiKrolesPut$Response(params).pipe(\n      map((r: StrictHttpResponse<any>) => r.body as any)\n    );\n  }\n\n  /**\n   * Path part for operation createRoleApiKrolesPost\n   */\n  static readonly CreateRoleApiKrolesPostPath = '/api/kroles';\n\n  /**\n   * Create Role.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `createRoleApiKrolesPost()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  createRoleApiKrolesPost$Response(params: {\n    realm?: any;\n    body: RoleCreate\n  }): Observable<StrictHttpResponse<any>> {\n\n    const rb = new RequestBuilder(this.rootUrl, RolesService.CreateRoleApiKrolesPostPath, 'post');\n    if (params) {\n      rb.query('realm', params.realm, {});\n      rb.body(params.body, 'application/json');\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<any>;\n      })\n    );\n  }\n\n  /**\n   * Create Role.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `createRoleApiKrolesPost$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  createRoleApiKrolesPost(params: {\n    realm?: any;\n    body: RoleCreate\n  }): Observable<any> {\n\n    return this.createRoleApiKrolesPost$Response(params).pipe(\n      map((r: StrictHttpResponse<any>) => r.body as any)\n    );\n  }\n\n  /**\n   * Path part for operation getRoleDetailsApiKrolesRoleGet\n   */\n  static readonly GetRoleDetailsApiKrolesRoleGetPath = '/api/kroles/{role}';\n\n  /**\n   * Get Role Details.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getRoleDetailsApiKrolesRoleGet()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getRoleDetailsApiKrolesRoleGet$Response(params: {\n    role: string;\n    realm?: any;\n  }): Observable<StrictHttpResponse<any>> {\n\n    const rb = new RequestBuilder(this.rootUrl, RolesService.GetRoleDetailsApiKrolesRoleGetPath, 'get');\n    if (params) {\n      rb.path('role', params.role, {});\n      rb.query('realm', params.realm, {});\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<any>;\n      })\n    );\n  }\n\n  /**\n   * Get Role Details.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getRoleDetailsApiKrolesRoleGet$Response()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getRoleDetailsApiKrolesRoleGet(params: {\n    role: string;\n    realm?: any;\n  }): Observable<any> {\n\n    return this.getRoleDetailsApiKrolesRoleGet$Response(params).pipe(\n      map((r: StrictHttpResponse<any>) => r.body as any)\n    );\n  }\n\n  /**\n   * Path part for operation deleteRoleApiKrolesRoleDelete\n   */\n  static readonly DeleteRoleApiKrolesRoleDeletePath = '/api/kroles/{role}';\n\n  /**\n   * Delete Role.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `deleteRoleApiKrolesRoleDelete()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  deleteRoleApiKrolesRoleDelete$Response(params: {\n    role: string;\n    realm?: any;\n  }): Observable<StrictHttpResponse<any>> {\n\n    const rb = new RequestBuilder(this.rootUrl, RolesService.DeleteRoleApiKrolesRoleDeletePath, 'delete');\n    if (params) {\n      rb.path('role', params.role, {});\n      rb.query('realm', params.realm, {});\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<any>;\n      })\n    );\n  }\n\n  /**\n   * Delete Role.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `deleteRoleApiKrolesRoleDelete$Response()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  deleteRoleApiKrolesRoleDelete(params: {\n    role: string;\n    realm?: any;\n  }): Observable<any> {\n\n    return this.deleteRoleApiKrolesRoleDelete$Response(params).pipe(\n      map((r: StrictHttpResponse<any>) => r.body as any)\n    );\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {CommonService} from './common.services';\n\n@Injectable({providedIn: 'root'})\nexport class ModalService {\n\n  constructor(private snackBar: MatSnackBar, private cs: CommonService) {\n  }\n\n  private modals: any[] = [];\n\n  openSnackBar(message: string, action: string, config?: any): void {\n    this.snackBar.open(message, action, {\n      duration: 2000,\n    });\n  }\n\n  add(modal: any): void {\n    // add modal to array of active modals\n    this.modals.push(modal);\n  }\n\n  remove(id: string): void {\n    // remove modal from array of active modals\n    this.modals = this.modals.filter(x => x.id !== id);\n  }\n\n  open(id: string): void {\n    // open modal specified by id\n    if (this.cs.modalHolder.indexOf(id) > -1) { return; }\n    const modal: any = this.modals.filter(x => x.id === id)[0];\n    modal.open();\n    this.cs.modalHolder.push(id);\n  }\n\n  close(id: string): void {\n    // close modal specified by id\n    const modal: any = this.modals.filter(x => x.id === id)[0];\n    if ( this.cs.modalHolder.indexOf(id) > -1 ) { this.cs.modalHolder.splice(this.cs.modalHolder.indexOf(id), 1); }\n    modal.close();\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { BaseService } from '../base-service';\nimport { ApiConfiguration } from '../api-configuration';\nimport { StrictHttpResponse } from '../strict-http-response';\nimport { RequestBuilder } from '../request-builder';\nimport { Observable } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\n\nimport { GetMasterClass } from '../models/get-master-class';\nimport { GetMasterClassGetResp } from '../models/get-master-class-get-resp';\nimport { GetMasterClassesParams } from '../models/get-master-classes-params';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GetMasterClassService extends BaseService {\n  constructor(\n    config: ApiConfiguration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * Path part for operation getMasterClassgetMasterClassesApiGetmasterclassGetMasterClassesPost\n   */\n  static readonly GetMasterClassgetMasterClassesApiGetmasterclassGetMasterClassesPostPath = '/api/getmasterclass/getMasterClasses';\n\n  /**\n   * Getmasterclassgetmasterclasses.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getMasterClassgetMasterClassesApiGetmasterclassGetMasterClassesPost()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  getMasterClassgetMasterClassesApiGetmasterclassGetMasterClassesPost$Response(params: {\n    body: GetMasterClassesParams\n  }): Observable<StrictHttpResponse<any>> {\n\n    const rb = new RequestBuilder(this.rootUrl, GetMasterClassService.GetMasterClassgetMasterClassesApiGetmasterclassGetMasterClassesPostPath, 'post');\n    if (params) {\n      rb.body(params.body, 'application/json');\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<any>;\n      })\n    );\n  }\n\n  /**\n   * Getmasterclassgetmasterclasses.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getMasterClassgetMasterClassesApiGetmasterclassGetMasterClassesPost$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  getMasterClassgetMasterClassesApiGetmasterclassGetMasterClassesPost(params: {\n    body: GetMasterClassesParams\n  }): Observable<any> {\n\n    return this.getMasterClassgetMasterClassesApiGetmasterclassGetMasterClassesPost$Response(params).pipe(\n      map((r: StrictHttpResponse<any>) => r.body as any)\n    );\n  }\n\n  /**\n   * Path part for operation getApiGetmasterclassIdGet\n   */\n  static readonly GetApiGetmasterclassIdGetPath = '/api/getmasterclass/{id}';\n\n  /**\n   * Get.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getApiGetmasterclassIdGet()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getApiGetmasterclassIdGet$Response(params: {\n    id: string;\n  }): Observable<StrictHttpResponse<GetMasterClass>> {\n\n    const rb = new RequestBuilder(this.rootUrl, GetMasterClassService.GetApiGetmasterclassIdGetPath, 'get');\n    if (params) {\n      rb.path('id', params.id, {});\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<GetMasterClass>;\n      })\n    );\n  }\n\n  /**\n   * Get.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getApiGetmasterclassIdGet$Response()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getApiGetmasterclassIdGet(params: {\n    id: string;\n  }): Observable<GetMasterClass> {\n\n    return this.getApiGetmasterclassIdGet$Response(params).pipe(\n      map((r: StrictHttpResponse<GetMasterClass>) => r.body as GetMasterClass)\n    );\n  }\n\n  /**\n   * Path part for operation getAllApiGetmasterclassGet\n   */\n  static readonly GetAllApiGetmasterclassGetPath = '/api/getmasterclass';\n\n  /**\n   * Get All.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getAllApiGetmasterclassGet()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getAllApiGetmasterclassGet$Response(params?: {\n\n    /**\n     * Filter query to be executed against database.\n     */\n    'q'?: string;\n    skip?: number;\n    limit?: number;\n    sort?: string;\n\n    /**\n     * Comma seperated list of fields to return.\n     */\n    fields?: string;\n  }): Observable<StrictHttpResponse<GetMasterClassGetResp>> {\n\n    const rb = new RequestBuilder(this.rootUrl, GetMasterClassService.GetAllApiGetmasterclassGetPath, 'get');\n    if (params) {\n      rb.query('q', params['q'], {});\n      rb.query('skip', params.skip, {});\n      rb.query('limit', params.limit, {});\n      rb.query('sort', params.sort, {});\n      rb.query('fields', params.fields, {});\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<GetMasterClassGetResp>;\n      })\n    );\n  }\n\n  /**\n   * Get All.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getAllApiGetmasterclassGet$Response()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getAllApiGetmasterclassGet(params?: {\n\n    /**\n     * Filter query to be executed against database.\n     */\n    'q'?: string;\n    skip?: number;\n    limit?: number;\n    sort?: string;\n\n    /**\n     * Comma seperated list of fields to return.\n     */\n    fields?: string;\n  }): Observable<GetMasterClassGetResp> {\n\n    return this.getAllApiGetmasterclassGet$Response(params).pipe(\n      map((r: StrictHttpResponse<GetMasterClassGetResp>) => r.body as GetMasterClassGetResp)\n    );\n  }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ApiConfiguration, ApiConfigurationParams } from './api-configuration';\n\nimport { ApiService } from './services/api.service';\nimport { ContentEpisodesService } from './services/content-episodes.service';\nimport { GetMasterClassService } from './services/get-master-class.service';\nimport { ContentPricingService } from './services/content-pricing.service';\nimport { CategoryService } from './services/category.service';\nimport { ContentDataService } from './services/content-data.service';\nimport { TrailerService } from './services/trailer.service';\nimport { UtilitiesService } from './services/utilities.service';\nimport { IdentityProvidersService } from './services/identity-providers.service';\nimport { UsersService } from './services/users.service';\nimport { RolesService } from './services/roles.service';\nimport { ApiClientsService } from './services/api-clients.service';\n\n/**\n * Module that provides all services and configuration.\n */\n@NgModule({\n  imports: [],\n  exports: [],\n  declarations: [],\n  providers: [\n    ApiService,\n    ContentEpisodesService,\n    GetMasterClassService,\n    ContentPricingService,\n    CategoryService,\n    ContentDataService,\n    TrailerService,\n    UtilitiesService,\n    IdentityProvidersService,\n    UsersService,\n    RolesService,\n    ApiClientsService,\n    ApiConfiguration\n  ],\n})\nexport class ApiModule {\n  static forRoot(params: ApiConfigurationParams): ModuleWithProviders<ApiModule> {\n    return {\n      ngModule: ApiModule,\n      providers: [\n        {\n          provide: ApiConfiguration,\n          useValue: params\n        }\n      ]\n    }\n  }\n\n  constructor( \n    @Optional() @SkipSelf() parentModule: ApiModule,\n    @Optional() http: HttpClient\n  ) {\n    if (parentModule) {\n      throw new Error('ApiModule is already loaded. Import in your base AppModule only.');\n    }\n    if (!http) {\n      throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n      'See also https://github.com/angular/angular/issues/20575');\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {BaseRequestService} from './base.service';\nimport {MyToastrService} from './toastr.service';\n\n@Injectable({providedIn: 'root'})\nexport class CommonService {\n  previousLink = '';\n  cHash: any;\n  companiesList: any = [];\n  modifiedDiscoverItems: any;\n  Objectkeys = Object.keys;\n  complianceMaster: any = {};\n  complianceList: any = [];\n  securityMatrix: any = {};\n  complianceMatrix: any = {};\n  angularEditorChange: Subject<object> = new Subject<object>();\n  bwListChange: Subject<object> = new Subject<object>();\n  captureScreenChange: Subject<object> = new Subject<object>();\n  initCaptureChange: Subject<object> = new Subject<object>();\n  openSideNavChange: Subject<object> = new Subject<object>();\n  selectedSiteChange: Subject<any> = new Subject<any>();\n  rmRefreshEvent: Subject<any> = new Subject<any>();\n  selectedNode = {};\n  networkDeviceReloadChange: Subject<any> = new Subject<any>();\n  addCompanyChange: Subject<any> = new Subject<any>();\n  addSiteChange: Subject<any> = new Subject<any>();\n  checkNode = {};\n  timeZoneList: any;\n  currentTimezone: any;\n  unauth: any;\n  currentCompany: any;\n  ccId: any;\n  modalHolder: string[] = [];\n  currentAssessment: any;\n  currentCompanyView: string;\n  eulaContent = 'IMPORTANT!\\n' +\n    'PLEASE READ THE TERMS AND CONDITIONS OF THIS LICENSE AGREEMENT CAREFULLY BEFORE CONTINUING WITH THIS PROGRAM INSTALL.\\n' +\n    '\\n' +\n    'In plain English: CyberCNS Patch Management Solution is available as a \"Beta\" software feature that is provided free of cost on a \"As-is\" and \"As available\" basis for use in conjunction with a CyberCNS Subscription or made available for evaluation during a free trial period. You may install and use updates provided by CyberCNS during these periods; however, when your subscription or trial period terminates you must remove and destroy the software. Please contact CyberCNS to obtain or renew your subscription.\\n' +\n    '\\n' +\n    'CyberCNS \"PATCHING FEATURE\" UPDATE END-USER LICENSE AGREEMENT 2.0\\n' +\n    'This CyberCNS Update End-User License Agreement (\"EULA\") constitutes a legal agreement between you, the \"End User\" (either an individual or a single entity) and CyberCNS (Netalytics Security Inc.) for the CyberCNS software updates you download and install (the Update). By installing, copying, or otherwise using this Update you agree to be bound by these terms. If you do not agree to the terms of this EULA, do not install or use the Update. The Update is protected by copyright laws and international copyright treaties, as well as other intellectual property laws and treaties. The Update is licensed, not sold.\\n' +\n    '\\n' +\n    'Definitions\\n' +\n    'A \"Product\" is a software package made available by CyberCNS and subject to the terms thereof.\\n' +\n    'A \"Licensed Product\" is a Product that is covered by an authorized commercial agreement between the End User and CyberCNS, or between the End User and a third party (Partner/OEM/MSP/MSSP) that has an authorized commercial agreement with CyberCNS.\\n' +\n    '\"Term\" means the term as defined in a license agreement for a Licensed Product, or the duration of any trial period extended to the End User.\\n' +\n    'An \"Update\" is a software component made available by CyberCNS that augments the capability or addresses an issue with an installed software.\\n' +\n    'Grant of License\\n' +\n    'Subject to the terms and conditions contained herein and any applicable Subscription Agreement, including the usage limits described therein, CyberCNS grants the End User a non-exclusive, non-transferrable, renewable license to use the Update as follows:\\n' +\n    '\\n' +\n    'Installation and Use: CyberCNS grants you the right to install and use copies of the Update in a Licensed Product during the Term. You shall not exceed the number of licenses, tiers, nodes, or other use restrictions or authorizations agreed to and paid for in the commercial agreement.\\n' +\n    'Backup Copies: You may make copies of the Update as may be necessary for backup and archival purposes.\\n' +\n    'Other Limitations\\n' +\n    'Maintenance of Copyright Notices: You shall not remove or alter any copyright or license notices that appear in or on the Update.\\n' +\n    'Modification: You shall not modify, alter, decompile, decrypt, disassemble, translate, or reverse engineer the Update.\\n' +\n    'Distribution: You shall not distribute copies of the Update to third parties.\\n' +\n    'Rental: You shall not rent, lease, or lend the Update, including renting, leasing, or lending a Product that includes the Update.\\n' +\n    'SaaS: You shall not make the Update or Product that includes the Update available as commercial Software-as-a-Service.\\n' +\n    'Compliance with Applicable Laws: You shall comply with all applicable laws regarding the use of the Update.\\n' +\n    'Termination\\n' +\n    'These terms, including the Software License, shall expire at the end of the Term, unless Licensee and CyberCNS agrees to renew such License. Without prejudice to any other rights, CyberCNS may terminate this EULA if you fail to comply with the terms and conditions of this EULA.\\n' +\n    '\\n' +\n    'Upon expiration or termination of these terms, you shall uninstall and destroy all copies of the CyberCNS Software in your possession. Termination or expiration of this EULA shall not affect End Users\\' rights to use any Product in accordance with the terms and conditions of the applicable EULA, or to receive services in accordance with a support agreement, or other agreement as may be applicable.\\n' +\n    '\\n' +\n    'Copyright\\n' +\n    'All right, title and interest, including but not limited to intellectual property rights such as copyrights, in and to the Update and any copies thereof, are owned by CyberCNS or its suppliers. All right, title and interest, including but not limited to intellectual property rights such as copyrights, in and to the content which may be accessed through use of the Update is the property of the respective content owner and may be protected by applicable copyright or other intellectual property laws and treaties. This EULA grants you no rights to use such content. All rights not expressly granted are reserved by CyberCNS.\\n' +\n    '\\n' +\n    'No Warranties\\n' +\n    'UNLESS EXPRESSLY PROVIDED HEREIN TO THE CONTRARY, AND TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, AND ANY AND ALL SERVICES AND SOFTWARE INCLUDING PATCHES AND SERVICE PACKS PROVIDED BY CyberCNS HEREUNDER ARE PROVIDED \"AS IS\" WITHOUT ANY WARRANTIES OR CONDITIONS OF ANY KIND, INCLUDING IMPLIED WARRANTIES AND CONDITIONS OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. NO WARRANTY, WRITTEN OR ORAL, IS EXPRESSED OR IMPLIED BY CyberCNS OR MAY BE INFERRED FROM A COURSE OF DEALING OR USAGE OF TRADE. NOTHING STATED IN THIS AGREEMENT WILL IMPLY THAT THE OPERATION OF ANY SOFTWARE WILL BE UNINTERRUPTED OR ERROR-FREE, OR THAT ERRORS WILL BE CORRECTED.\\n' +\n    '\\n' +\n    'Limitation of Liability\\n' +\n    'IN NO EVENT WILL CyberCNS BE LIABLE FOR ANY INCIDENTAL INDIRECT, SPECIAL, OR CONSEQUENTIAL COSTS OR DAMAGES INCLUDING, WITHOUT LIMITATION, DOWNTIME COSTS; LOST BUSINESS, REVENUES, OR PROFITS; FAILURE TO REALIZE EXPECTED SAVINGS; LOSS OF OR DAMAGE TO DATA; OR SOFTWARE RESTORATION, REGARDLESS OF WHETHER ANY OF THE FOREGOING ARE FORESEEABLE, AND REGARDLESS OF WHETHER CyberCNS HAS BEEN NOTIFIED OF THE POSSIBILITY OF ANY OF THE FOREGOING. THESE LIMITATIONS WILL APPLY REGARDLESS OF THE BASIS OF LIABILITY; INCLUDING NEGLIGENCE; MISREPRESENTATION; BREACH; LIBEL; INFRINGEMENT OF PUBLICITY, PRIVACY, OR INTELLECTUAL PROPERTY RIGHTS; OR ANY OTHER CONTRACT OR TORT CLAIM.\\n' +\n    '\\n' +\n    'Disclaimer of Warranty. YOU ACKNOWLEDGE THAT THE PATCHING FEATURE  is \"Beta\" Software AND ANY AND ALL PARTS THEREOF ARE PROVIDED “AS IS” and \"AS AVAILABLE\". CyberCNS (Netalytics) MAKES NO REPRESENTATIONS OR WARRANTIES WITH RESPECT TO THE LICENSED MATERIALS AND OR PARTS THEREOF WHETHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. YOU ACKNOWLEDGE THAT YOU HAVE RELIED ON NO WARRANTIES AND THAT NO WARRANTIES ARE MADE BY CYBERCNS (Netalytcis) OR GRANTED BY LAW WHENEVER IT IS PERMITTED BY LAW.\\n' +\n    'BY CLICKING “I ACCEPT”, YOU ACKNOWLEDGE THAT YOU HAVE READ AND UNDERSTAND THIS\\n' +\n    'AGREEMENT AND ACCEPT THE PRODUCT’S FUNCTIONS. DO NOT CLICK THE “I ACCEPT”\\n' +\n    'BUTTON IF YOU DO NOT ACCEPT THIS AGREEMENT AND THE PRODUCT’S FUNCTIONS.';\n  constructor(public baseRequestService: BaseRequestService,\n              private toast: MyToastrService) {\n  }\n\n  isPrivateIP(ip: string): boolean {\n    const parts = ip.split('.');\n    return parts[0] === '10' ||\n      (parts[0] === '172' && (parseInt(parts[1], 10) >= 16 && parseInt(parts[1], 10) <= 31)) ||\n      (parts[0] === '192' && parts[1] === '168');\n  }\n\n  isUuid(uuid: string): boolean {\n    if (uuid) {\n      // @ts-ignore\n      return ( uuid.match(/^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$/) ?.length > 0 );\n    } else {\n      return false;\n    }\n  }\n\n  nl2br(str: string): string{\n   return str.replace(/(?:\\r\\n|\\r|\\n)/g, '<br>');\n  }\n\n  compare(a: number | string, b: number | string, isAsc: boolean): any {\n    return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n  }\n  buildQuery(data: { [x: string]: any; }): any {\n    const baseQuery = {query: {bool: {must: []}}};\n    this.Objectkeys(data).forEach(obj => {\n      const tmpObj = {match: {}};\n      // @ts-ignore\n      tmpObj.match[obj] = data[obj];\n      // @ts-ignore\n      baseQuery.query.bool.must.push(tmpObj);\n    });\n    return baseQuery;\n  }\n  onlyUnique(value: any, index: any, self: string | any[]): boolean {\n      return self.indexOf(value) === index;\n  }\n  reloadDevice(deviceId: any): void {\n    this.networkDeviceReloadChange.next(deviceId);\n  }\n\n  percentCalculator(x: number, y: number): number {\n    return Math.floor((y / x) * 100);\n  }\n\n  copyClip(cmd: string): void {\n    const el = document.createElement('textarea');\n    el.value = cmd;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n    this.toast.sToast('success', 'Copied to clipboard');\n  }\n\n  getTimeZone(): void {\n    const offset = (new Date()).getTimezoneOffset();\n    const timezones = {\n    '-12': 'Pacific/Kwajalein',\n    '-11': 'Pacific/Samoa',\n    '-10': 'Pacific/Honolulu',\n    '-9': 'America/Juneau',\n    '-8': 'America/Los_Angeles',\n    '-7': 'America/Denver',\n    '-6': 'America/Mexico_City',\n    '-5': 'America/New_York',\n    '-4': 'America/Caracas',\n    '-3.5': 'America/St_Johns',\n    '-3': 'America/Argentina/Buenos_Aires',\n    '-2': 'Atlantic/Azores',\n    '-1': 'Atlantic/Azores',\n    0: 'Europe/London',\n    1: 'Europe/Paris',\n    2: 'Europe/Helsinki',\n    3: 'Europe/Moscow',\n    3.5: 'Asia/Tehran',\n    4: 'Asia/Baku',\n    4.5: 'Asia/Kabul',\n    5: 'Asia/Karachi',\n    5.5: 'Asia/Calcutta',\n    6: 'Asia/Colombo',\n    7: 'Asia/Bangkok',\n    8: 'Asia/Singapore',\n    9: 'Asia/Tokyo',\n    9.5: 'Australia/Darwin',\n    10: 'Pacific/Guam',\n    11: 'Asia/Magadan',\n    12: 'Asia/Kamchatka'\n  };\n    // @ts-ignore\n    this.currentTimezone = timezones[-offset / 60];\n    const timeZone = localStorage.getItem('_timeZones');\n    if (timeZone && timeZone.length > 0 ) {\n      this.timeZoneList = JSON.parse(timeZone);\n    } else {\n      this.baseRequestService.doRequest(`/api/cyberutils/dummy/getSupportedTimeZones`, 'post', {})\n        .subscribe((result: any) => {\n        this.timeZoneList = result;\n      });\n    }\n  }\n  addCompany(name: any): void {\n    this.addCompanyChange.next(name);\n  }\n  addSite(ele: any, name: any): void {\n    ele.action = name.action;\n    this.addSiteChange.next(ele);\n  }\n\n  async getAgents(cId?: string): Promise<any> {\n    const query = (cId)\n      ? { query: { bool: { must: [ {match: {'companyRef.id.keyword': cId + ''}},\n              {match: {agent_type: 1}}, {exists: {field: 'agent_type'}}] } } }\n      : { query: { bool: { must: [ {match: {agent_type: 4}}, {exists: {field: 'agent_type'}}],\n            must_not: [{exists: {field: 'companyRef.id.keyword'}}] } } };\n    const q = JSON.stringify(query); const skip = 0; const limit = 1000;\n    return true;\n  }\n  async sortFn(arr: any, key?: string): Promise<any> {\n    if (key) {\n      return await arr.sort((a: any, b: any) => {\n        const c = a[key]; const d = b[key];\n        if (c < d) { return -1; } else if (c > d) { return 1; } else { return 0; }\n      });\n    }\n    return await arr.sort((c: any, d: any) => {\n      if (c < d) { return -1; } else if (c > d) { return 1; } else { return 0; }\n    });\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { BaseService } from '../base-service';\nimport { ApiConfiguration } from '../api-configuration';\nimport { StrictHttpResponse } from '../strict-http-response';\nimport { RequestBuilder } from '../request-builder';\nimport { Observable } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\n\nimport { Category } from '../models/category';\nimport { CategoryBulkDelete } from '../models/category-bulk-delete';\nimport { CategoryCreate } from '../models/category-create';\nimport { CategoryGetResp } from '../models/category-get-resp';\nimport { ContentDataGetResp } from '../models/content-data-get-resp';\nimport { CouponsGetResp } from '../models/coupons-get-resp';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoryService extends BaseService {\n  constructor(\n    config: ApiConfiguration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * Path part for operation getAllApiCategoryGet\n   */\n  static readonly GetAllApiCategoryGetPath = '/api/category';\n\n  /**\n   * Get All.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getAllApiCategoryGet()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getAllApiCategoryGet$Response(params?: {\n\n    /**\n     * Filter query to be executed against database.\n     */\n    'q'?: string;\n    skip?: number;\n    limit?: number;\n    sort?: string;\n\n    /**\n     * Comma seperated list of fields to return.\n     */\n    fields?: string;\n  }): Observable<StrictHttpResponse<CategoryGetResp>> {\n\n    const rb = new RequestBuilder(this.rootUrl, CategoryService.GetAllApiCategoryGetPath, 'get');\n    if (params) {\n      rb.query('q', params['q'], {});\n      rb.query('skip', params.skip, {});\n      rb.query('limit', params.limit, {});\n      rb.query('sort', params.sort, {});\n      rb.query('fields', params.fields, {});\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<CategoryGetResp>;\n      })\n    );\n  }\n\n  /**\n   * Get All.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getAllApiCategoryGet$Response()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getAllApiCategoryGet(params?: {\n\n    /**\n     * Filter query to be executed against database.\n     */\n    'q'?: string;\n    skip?: number;\n    limit?: number;\n    sort?: string;\n\n    /**\n     * Comma seperated list of fields to return.\n     */\n    fields?: string;\n  }): Observable<CategoryGetResp> {\n\n    return this.getAllApiCategoryGet$Response(params).pipe(\n      map((r: StrictHttpResponse<CategoryGetResp>) => r.body as CategoryGetResp)\n    );\n  }\n\n  /**\n   * Path part for operation updateApiCategoryPut\n   */\n  static readonly UpdateApiCategoryPutPath = '/api/category';\n\n  /**\n   * Update.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `updateApiCategoryPut()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  updateApiCategoryPut$Response(params: {\n    body: Category\n  }): Observable<StrictHttpResponse<Category>> {\n\n    const rb = new RequestBuilder(this.rootUrl, CategoryService.UpdateApiCategoryPutPath, 'put');\n    if (params) {\n      rb.body(params.body, 'application/json');\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<Category>;\n      })\n    );\n  }\n\n  /**\n   * Update.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `updateApiCategoryPut$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  updateApiCategoryPut(params: {\n    body: Category\n  }): Observable<Category> {\n\n    return this.updateApiCategoryPut$Response(params).pipe(\n      map((r: StrictHttpResponse<Category>) => r.body as Category)\n    );\n  }\n\n  /**\n   * Path part for operation createApiCategoryPost\n   */\n  static readonly CreateApiCategoryPostPath = '/api/category';\n\n  /**\n   * Create.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `createApiCategoryPost()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  createApiCategoryPost$Response(params: {\n    body: CategoryCreate\n  }): Observable<StrictHttpResponse<Category>> {\n\n    const rb = new RequestBuilder(this.rootUrl, CategoryService.CreateApiCategoryPostPath, 'post');\n    if (params) {\n      rb.body(params.body, 'application/json');\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<Category>;\n      })\n    );\n  }\n\n  /**\n   * Create.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `createApiCategoryPost$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  createApiCategoryPost(params: {\n    body: CategoryCreate\n  }): Observable<Category> {\n\n    return this.createApiCategoryPost$Response(params).pipe(\n      map((r: StrictHttpResponse<Category>) => r.body as Category)\n    );\n  }\n\n  /**\n   * Path part for operation getApiCategoryIdGet\n   */\n  static readonly GetApiCategoryIdGetPath = '/api/category/{id}';\n\n  /**\n   * Get.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getApiCategoryIdGet()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getApiCategoryIdGet$Response(params: {\n    id: string;\n  }): Observable<StrictHttpResponse<Category>> {\n\n    const rb = new RequestBuilder(this.rootUrl, CategoryService.GetApiCategoryIdGetPath, 'get');\n    if (params) {\n      rb.path('id', params.id, {});\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<Category>;\n      })\n    );\n  }\n\n  /**\n   * Get.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getApiCategoryIdGet$Response()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getApiCategoryIdGet(params: {\n    id: string;\n  }): Observable<Category> {\n\n    return this.getApiCategoryIdGet$Response(params).pipe(\n      map((r: StrictHttpResponse<Category>) => r.body as Category)\n    );\n  }\n\n  /**\n   * Path part for operation deleteApiCategoryIdDelete\n   */\n  static readonly DeleteApiCategoryIdDeletePath = '/api/category/{id}';\n\n  /**\n   * Delete.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `deleteApiCategoryIdDelete()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  deleteApiCategoryIdDelete$Response(params: {\n    id: string;\n  }): Observable<StrictHttpResponse<any>> {\n\n    const rb = new RequestBuilder(this.rootUrl, CategoryService.DeleteApiCategoryIdDeletePath, 'delete');\n    if (params) {\n      rb.path('id', params.id, {});\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<any>;\n      })\n    );\n  }\n\n  /**\n   * Delete.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `deleteApiCategoryIdDelete$Response()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  deleteApiCategoryIdDelete(params: {\n    id: string;\n  }): Observable<any> {\n\n    return this.deleteApiCategoryIdDelete$Response(params).pipe(\n      map((r: StrictHttpResponse<any>) => r.body as any)\n    );\n  }\n\n  /**\n   * Path part for operation bulkdeleteApiCategoryIdBulkdeleteDelete\n   */\n  static readonly BulkdeleteApiCategoryIdBulkdeleteDeletePath = '/api/category/{id}/bulkdelete';\n\n  /**\n   * Bulkdelete.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `bulkdeleteApiCategoryIdBulkdeleteDelete()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  bulkdeleteApiCategoryIdBulkdeleteDelete$Response(params: {\n    id: string;\n    body: CategoryBulkDelete\n  }): Observable<StrictHttpResponse<any>> {\n\n    const rb = new RequestBuilder(this.rootUrl, CategoryService.BulkdeleteApiCategoryIdBulkdeleteDeletePath, 'delete');\n    if (params) {\n      rb.path('id', params.id, {});\n      rb.body(params.body, 'application/json');\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<any>;\n      })\n    );\n  }\n\n  /**\n   * Bulkdelete.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `bulkdeleteApiCategoryIdBulkdeleteDelete$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  bulkdeleteApiCategoryIdBulkdeleteDelete(params: {\n    id: string;\n    body: CategoryBulkDelete\n  }): Observable<any> {\n\n    return this.bulkdeleteApiCategoryIdBulkdeleteDelete$Response(params).pipe(\n      map((r: StrictHttpResponse<any>) => r.body as any)\n    );\n  }\n\n  /**\n   * Path part for operation getcontentdataApiCategoryIdContentdataGet\n   */\n  static readonly GetcontentdataApiCategoryIdContentdataGetPath = '/api/category/{id}/contentdata';\n\n  /**\n   * Get ContentData objects associated with Category.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getcontentdataApiCategoryIdContentdataGet()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getcontentdataApiCategoryIdContentdataGet$Response(params: {\n    id: string;\n  }): Observable<StrictHttpResponse<ContentDataGetResp>> {\n\n    const rb = new RequestBuilder(this.rootUrl, CategoryService.GetcontentdataApiCategoryIdContentdataGetPath, 'get');\n    if (params) {\n      rb.path('id', params.id, {});\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<ContentDataGetResp>;\n      })\n    );\n  }\n\n  /**\n   * Get ContentData objects associated with Category.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getcontentdataApiCategoryIdContentdataGet$Response()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getcontentdataApiCategoryIdContentdataGet(params: {\n    id: string;\n  }): Observable<ContentDataGetResp> {\n\n    return this.getcontentdataApiCategoryIdContentdataGet$Response(params).pipe(\n      map((r: StrictHttpResponse<ContentDataGetResp>) => r.body as ContentDataGetResp)\n    );\n  }\n\n  /**\n   * Path part for operation getcouponsApiCategoryIdCouponsGet\n   */\n  static readonly GetcouponsApiCategoryIdCouponsGetPath = '/api/category/{id}/coupons';\n\n  /**\n   * Get Coupons objects associated with Category.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getcouponsApiCategoryIdCouponsGet()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getcouponsApiCategoryIdCouponsGet$Response(params: {\n    id: string;\n  }): Observable<StrictHttpResponse<CouponsGetResp>> {\n\n    const rb = new RequestBuilder(this.rootUrl, CategoryService.GetcouponsApiCategoryIdCouponsGetPath, 'get');\n    if (params) {\n      rb.path('id', params.id, {});\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<CouponsGetResp>;\n      })\n    );\n  }\n\n  /**\n   * Get Coupons objects associated with Category.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getcouponsApiCategoryIdCouponsGet$Response()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getcouponsApiCategoryIdCouponsGet(params: {\n    id: string;\n  }): Observable<CouponsGetResp> {\n\n    return this.getcouponsApiCategoryIdCouponsGet$Response(params).pipe(\n      map((r: StrictHttpResponse<CouponsGetResp>) => r.body as CouponsGetResp)\n    );\n  }\n\n}\n","import {SelectionModel} from '@angular/cdk/collections';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport {MatSort} from '@angular/material/sort';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatMenuTrigger} from '@angular/material/menu';\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\nimport {ReplaySubject, Subject} from 'rxjs';\nimport {debounceTime, distinctUntilChanged} from 'rxjs/operators';\nimport {Router} from '@angular/router';\nimport {BaseRequestService} from 'src/app/_services/base.service';\nimport {AuthenticationService} from 'src/app/_services/authentication.service';\nimport {LoaderService} from '../../_services/loader.service';\nimport {FormControl} from '@angular/forms';\nimport {MyToastrService} from '../../_services/toastr.service';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { MasterService } from 'src/app/_services/master.service';\n\n\n@Component({\n  selector: 'app-s-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\nexport class TableComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy {\n  @ViewChild(MatSort, { static: false })\n  set sort(value: MatSort) {\n    this.dataSource.sort = value;\n  }\n  constructor(private activeRoute: Router, private loaderService: LoaderService, public masterService: MasterService,\n              private authenticationService: AuthenticationService, public baseService: BaseRequestService,\n              private eRef: ElementRef, public toast: MyToastrService) {\n    this.loaderService.selectedSiteChanged.subscribe(() => {\n      localStorage.removeItem(this.tableOptions.id); this.filterText = '';\n    });\n    this.loaderService.tableProgressOff.subscribe(() => {\n      this.tableOptions.loading = false;\n    });\n    // Debounce search.\n    this.filterUpdate.pipe(\n      debounceTime(1500),\n      distinctUntilChanged())\n      .subscribe(value => {\n        this.isActionChanged = true;\n        this.doFilter(value);\n      });\n\n    this.colfilterUpdate.pipe(\n      debounceTime(1500),\n      distinctUntilChanged())\n      .subscribe(value => {\n        this.doColumFilter(value.value, value.col);\n      });\n  }\n  public assetDrpCtrl: FormControl = new FormControl();\n  public assetDrpFilterCtrl: FormControl = new FormControl();\n  public filterDrpLstFilteredList: ReplaySubject<any> = new ReplaySubject<any>(1);\n  @ViewChild('filterMenuTrigger', {static: false})\n  filterMenuTrigger!: MatMenuTrigger;\n  @ViewChild('listMenuTrigger', {static: false})\n  listMenuTrigger!: MatMenuTrigger;\n  @ViewChild('exportMenuTrigger', {static: false})\n  exportMenuTrigger!: MatMenuTrigger;\n  filterText!: string;\n  currentPageIndex: any;\n  isExport = false;\n  tableId: any;\n  // @ts-ignore\n  @ViewChild(MatPaginator, {static: false}) paginator: MatPaginator;\n  // tslint:disable-next-line:variable-name\n  _sTableOptions: any;\n  isLoading = true;\n  dataSource = new MatTableDataSource<any>();\n  hiddenDataSource = new MatTableDataSource<any>();\n\n  @ViewChild('MAINTABLEDIV', {static: false})\n  tableDiv!: ElementRef;\n\n  @Input() sTableOptions: any;\n  @Input() hideDownload: any;\n  @Output() filterCallback = new EventEmitter();\n  @Output() colFilterCallback = new EventEmitter();\n  @Output() publishCallback = new EventEmitter();\n  @Output() sortCallback = new EventEmitter();\n  @Output() actionCallback = new EventEmitter();\n  @Output() globalActionCallback = new EventEmitter();\n  @Output() pageCallback = new EventEmitter();\n  @Output() refreshCallback = new EventEmitter();\n  @Output() hyperlinkCallback = new EventEmitter();\n  @Output() addCallback = new EventEmitter();\n  @Output() compareCallback = new EventEmitter();\n  @Output() timerCallback = new EventEmitter();\n  @Output() checkBoxCallback = new EventEmitter();\n  @Output() selectionchangeCallback = new EventEmitter();\n  @Output() parentCallback = new EventEmitter();\n  @Output() totalCallback = new EventEmitter();\n  colFilters: any = [];\n  filterValues!: string;\n  filterArray: any = [];\n  selectedTimer = '0';\n  intervalId: any;\n  called = false;\n  cFilter: any = {};\n  colHash: any = {};\n  cFields: any = [];\n  colFilterQuery: any;\n  filterQuery: any;\n  private tmpOption: any;\n  columnsList: string[] = [];\n  cpIndex = 0;\n  tableOptions: any = {\n    id: 'imaws',\n    title: '',\n    isServerSide: true,\n    selectText: 'item(s)',\n    floatingFilter: true,\n    rowSelection: true,\n    loading: true,\n    showAction: false,\n    actionMenuItems: [{ text: 'Details', icon: 'info', callback: 'editFunction', hideLocal: false, isGlobal: false }],\n    pagination: true,\n    pageOptions: [5, 10, 20, 30, 50, 100, 200],\n    pageSize: 5,\n    pageTotal: 0,\n    search: true,\n    showhideList: true,\n    refreshData: true,\n    dropdwn: false,\n    add: false,\n    showColFilter: false,\n    exportExcel: true,\n    compareData: false,\n    publish: false,\n    parentCalls: [],\n    saveData: false,\n    nomsg: 'No data available!',\n    filterDownload: true\n  };\n\n  isMUltiple = true; initSelectedValues = [];\n  selection = new SelectionModel<any>(this.isMUltiple, this.initSelectedValues);\n  numSelected!: number;\n\n  isCompMUltiple = true; initCompSelectedValues = [];\n  compSelection = new SelectionModel<any>(this.isMUltiple, this.initCompSelectedValues);\n  compNumSelected!: number;\n\n  columns = [\n    {\n      columnDef: 'name',\n      header: 'Name',\n      cell: (element: any) => `${element.name}`\n    },\n    {\n      columnDef: 'dateOfBirth',\n      header: 'Date of Birth',\n      filter: 'date', cell: (element: any) => `${element.dateOfBirth}`\n    },\n    {\n      columnDef: 'address',\n      header: 'Address',\n      cell: (element: any) => `${element.address}`\n    }];\n\n  public displayedColumns!: Array<any>;\n  public showhideList!: Array<any>;\n  orderlist!: Array<any>;\n\n  filterUpdate = new Subject<string>();\n  colfilterUpdate = new Subject<any>();\n  settingsObj = [];\n  sessionData: any;\n  searchedColName = ''; colfilter: any = {};\n  pastIndex: any;\n  isPageLoad = true;\n\n  isActionChanged = false;\n  isTablePadding = false;\n  columnsCnt = 0;\n  exportCnt = 0;\n  isExportClick = false;\n\n  hasSelect = false;\n  @HostListener('document:click', ['$event'])\n  clickout(event: any): void {\n    if (this.eRef.nativeElement.contains(event.target)) {\n      if (this.isExportClick) {\n        if (this.exportCnt > 1) {\n          if (this.exportMenuTrigger !== undefined) {\n            this.exportMenuTrigger.closeMenu();\n          }\n          this.exportCnt = 1;\n          this.isExportClick = false;\n        } else {\n          if (this.listMenuTrigger !== undefined) {\n            this.listMenuTrigger.closeMenu();\n          }\n          this.exportCnt++;\n        }\n      } else {\n        if (this.columnsCnt > 1) {\n          if (this.listMenuTrigger !== undefined) {\n            this.listMenuTrigger.closeMenu();\n          }\n          this.columnsCnt = 1;\n        } else {\n          if (this.exportMenuTrigger !== undefined) {\n            this.exportMenuTrigger.closeMenu();\n          }\n          this.columnsCnt++;\n        }\n      }\n    } else {\n      this.columnsCnt = 0;\n      if (this.listMenuTrigger !== undefined) {\n        this.listMenuTrigger.closeMenu();\n      }\n    }\n  }\n  columnFilterxlsx(col: any): void{\n    this.searchedColName = col.columnDef;\n    this.colFilters = [];\n    if(col.columnDef === 'c' || col.columnDef === 'u' || col.released_on){\n      const start = col.dateCol.start.getFullYear() + \"-\" + (col.dateCol.start.getMonth() + 1) + \"-\" + col.dateCol.start.getDate();\n      const end = col.dateCol.end.getFullYear() + \"-\" + (col.dateCol.end.getMonth() + 1) + \"-\" + col.dateCol.end.getDate();\n      this.colFilters.push({key: col.columnDef, name: col.header, value: `form ${start} - to ${end} `, hKey: col.colFilters.hKey, list: col?.list});\n    } else {\n      this.colFilters.push({key: col.columnDef, name: col.header, value: col.val, hKey: col.colFilters.hKey, list: col?.list});\n    }\n    this.processColFilterQuery();\n  }\n  removeFilterxlsx(rFilter: any): void {\n    if (this.sTableOptions.gFilter) {\n      delete this.sTableOptions.gFilter;\n      this.colFilters = [];\n      this.colFilterQuery = [];\n      this.filterQuery = {};\n      this.getCollectionData();\n      return;\n    }\n    this.colFilters.forEach((obj: { key: string | number; }, index: any) => {\n      if (rFilter.key === obj.key) {\n        this.colfilter[obj.key] = '';\n        this.colFilters.splice(index, 1);\n      }\n    });\n    this.processColFilterQuery();\n  }\n  processColFilterQuery(): void {\n    this.colFilterQuery = [];\n    for (const cl of this.colFilters) {\n      const tmpObj1: any = {bool: {should: [{match: {}}]}};\n      let tmpObj: any = {};\n      if (cl.hKey) {\n        if(cl.key === 'c' || cl.key === 'u' || cl.key === 'released_on'){\n          var column: any = cl.key;\n          let from = this.colHash[cl.key].dateCol.start;\n          const fromDate = from.getFullYear() + \"-\" + ('0'+ (from.getMonth() + 1)).slice(-2) + \"-\" + ('0'+ from.getDate()).slice(-2);\n          let end = this.colHash[cl.key].dateCol.end;\n          const endDate = end.getFullYear() + \"-\" + ('0'+ (end.getMonth() + 1)).slice(-2) + \"-\" + ('0'+ end.getDate()).slice(-2);\n          tmpObj = {range: {}};\n          tmpObj.range[column]= {gte: fromDate, lte: endDate};\n        } else {\n          cl.key = (cl.key === 'category') ? 'category_ref.name' : cl.key;\n          if (cl.list) tmpObj = {must: [{multi_match: {query: `*${cl.value}*`,type: 'phrase_prefix', 'fields':[cl.key]}}]};\n          else tmpObj = {bool: {should: [{query_string: {fields: [cl.key], query: `*${cl.value}*`}}]}};\n        }\n      } else {\n        tmpObj1.bool.should[0].match[cl.key] = cl.value;\n        tmpObj = tmpObj1;\n      }\n      this.colFilterQuery.push(tmpObj);\n    }\n    this.getCollectionData();\n  }\n  downloadAsXls(type: string): void {\n    this.tmpOption = {...this.sTableOptions};\n    if (!this.sTableOptions.faClass) {\n      this.toast.sToast('error', 'Class name not added.');\n      return;\n    }\n    const dateStr = new Date().toLocaleDateString().replace(/\\//g, '_') + '_'\n      + new Date().toLocaleTimeString().replace(/\\:/g, '_');\n    // const xlsxParam: CompanygetxlsxreportParams = {\n    //   query: '', classname: this.sTableOptions.faClass, fieldmap: [],\n    //   filename: this.sTableOptions.faClass + '_' + dateStr\n    // };\n    for (const col of this.sTableOptions.columns) {\n      // @ts-ignore\n      xlsxParam.fieldmap.push({field: col.columnDef, renameas: col.header});\n    }\n    this.loaderService.display(true, 'Preparing xlsx file...');\n    // tslint:disable-next-line:no-shadowed-variable\n    let query: any = {};\n    delete this.sTableOptions.serverSide.q.query.bool.filter;\n    this.sTableOptions.serverSide.q.query.bool.must.forEach((obj: any, index: number) => {\n      if (obj.bool && obj.bool.should && obj.bool.should[0].match) {\n        this.tmpOption.serverSide.q.query.bool.must.splice(index, 1);\n      } else if (obj.multi_match) {\n        this.tmpOption.serverSide.q.query.bool.must.splice(index, 1);\n      }\n    });\n    query = {...this.tmpOption.serverSide.q};\n    if (this.filterQuery && this.filterQuery.multi_match) { // Global filter\n      query.query.bool.must.push(this.filterQuery);\n    }\n    if (this.colFilterQuery && this.colFilterQuery.length && type !== 'full') { // Multi Column filter\n      query.query.bool.filter = [];\n      this.colFilterQuery.forEach((obj: any) => {\n        if (obj.bool.should[0].match) {\n          query.query.bool.must.push(obj);\n        } else {\n          query.query.bool.filter.push(obj);\n        }\n      });\n    }\n    // xlsxParam.query = JSON.stringify(query);\n    // this.companyService.companygetxlsxreportApiCompanyIdGetxlsxreportPost(\n    //   {id: this.commonService.currentCompany._id, body: xlsxParam}).subscribe((result: any) => {\n    //   this.loaderService.display(false);\n    //   if (result && result.length && result[0]) {\n    //     window.open(result[1], '_blank');\n    //   } else {\n    //     this.toast.sToast('error', result[1]);\n    //   }\n    // });\n  }\n  columnFilter(val: any, col: any): void {\n    this.searchedColName = col;\n    this.colfilterUpdate.next({value: val, col});\n  }\n  removeFilter(filter: any): void {\n    this.colFilters.forEach((obj: { key: string | number; }, index: any) => {\n      if (filter.key === obj.key) { \n        // if(filter.key === 'c' || filter.key === 'u') {\n        //   this.colFilters = this.colFilters.filter((obj: any) => obj.key !== filter.key);\n        //   console.log(this._sTableOptions.columns[filter.key].selectRange);\n        //   this._sTableOptions.columns[filter.key].selectRange = { start: '', end: ''}\n        // } else {\n          this.colfilter[obj.key] = '';\n          this.colFilters.splice(index, 1);\n        // }\n      }\n    });\n    this.colFilterCallback.emit({value: '', col: filter.key});\n  }\n\n  getListProperty(object: any, propertyName: any ): any {\n    let parts: any[]; let property: any;\n    parts = propertyName.split('.'); const length = parts.length;\n    let i: number;\n    property = object[parts[0]];\n    return (property) ? property.map((x: any) => x[parts[1]]) : '';\n  }\n  getProperty(object: any, propertyName: any ): any {\n    let parts: any[]; let property: string;\n    parts = propertyName.split('.'); const length = parts.length;\n    let i: number;\n    property = object;\n    for ( i = 0; i < length; i++ ) {\n      // @ts-ignore\n      property = (property[parts[i]]) ? property[parts[i]] : '';\n    }\n    return property;\n  }\n\n  rowClick(row: any, index: any): void {\n    if (row._id) {\n      this.dataSource.data.forEach(obj => {\n        obj.highlighted = (obj._id === row._id);\n      });\n    } else {\n      if (this.pastIndex !== undefined) {\n        this.dataSource.data[this.pastIndex].highlighted = false;\n      }\n      this.pastIndex = index;\n      this.dataSource.data[index].highlighted = !this.dataSource.data[index].highlighted;\n    }\n  }\n\n  /*getProperty = (obj, path) => (\n    path.split('.').reduce((o, p) => o && o[p], obj)\n  )*/\n\n  getCustomText(obj: any): any {\n    // @ts-ignore\n    const customText = this.sTableOptions.customText.filter(x => x.status === obj);\n    if (customText.length > 0) {\n      return customText[0].DisplayText;\n    }\n  }\n  // getCustomColor(obj) {\n  //   const customText = this.sTableOptions.customText.filter(x => x.status == obj);\n  //   if (customText.length > 0) {\n  //     return { 'background-color': customText[0].color };\n  //   }\n  //   return { 'background-color': '#ffffff' };\n  // }\n\n  getCustomColor(obj: any): any {\n    const customText = this.sTableOptions.customText.filter((x: any) => x.status === obj);\n    if (customText.length > 0) {\n      return (customText[0]['text-color'])\n        ? {'background-color': customText[0].color, color: customText[0]['text-color']}\n        : {'background-color': customText[0].color};\n    }\n    return { 'background-color': '#ffffff' };\n  }\n\n  getIconPath(obj: any, path: any): any {\n    if (this.getProperty(obj, path.columnDef) === path.success) {\n      return path.successIconPath !== undefined ? path.successIconPath : 'assets/images/devices/online.svg';\n    } else {\n      return path.failureIconPath !== undefined ? path.failureIconPath : 'assets/images/devices/offline.svg';\n    }\n  }\n\n  getIconTooltip(obj: any, path: any): any {\n    if (this.getProperty(obj, path.columnDef) === path.success) {\n      return path.successToolTip !== undefined ? path.successToolTip : 'Online';\n    } else {\n      return path.failureToolTip !== undefined ? path.failureToolTip : 'Offline';\n    }\n  }\n\n  drop(event: CdkDragDrop<string[]>): any {\n    this.isActionChanged = true;\n    moveItemInArray(this.showhideList, event.previousIndex, event.currentIndex);\n\n    for (let idx = event.previousIndex; idx >= event.currentIndex; idx--) {\n      this.showhideList[idx].order = idx;\n    }\n    // this.showhideList[event.previousIndex].order = event.previousIndex;\n    // this.showhideList[event.currentIndex].order = event.currentIndex;\n    this.initUpdateData();\n  }\n\n  actionCall(row: any, action: any): void {\n    delete row.highlighted; delete row.hovered;\n    const resp = { row, action };\n    if (this.tableOptions.showAction && this.tableOptions.actionMenuItems.length > 0) {\n      this.actionCallback.emit(resp);\n    }\n  }\n\n  globalActionCall(row: any, action: any): void {\n    delete row.highlighted; delete row.hovered;\n    const resp = { row, action };\n    if (this.tableOptions.showAction && this.tableOptions.actionMenuItems.length > 0) {\n      this.globalActionCallback.emit(resp);\n    }\n  }\n\n  hyperLinkCall(row: any, col?: any): any {\n    delete row.highlighted; delete row.hovered;\n    const event = { row, col };\n    this.hyperlinkCallback.emit(event);\n  }\n\n  ngOnChanges(changes: SimpleChanges): any {\n    const sTableOptions: SimpleChange = changes.sTableOptions;\n    this._sTableOptions = sTableOptions.currentValue;\n    // if (!sTableOptions.firstChange) {\n    this.initUpdateData();\n    // }\n  }\n\n  ngOnInit(): void {\n    this.tmpOption = {...this.sTableOptions};\n    this.colHash = {};\n    for (const c of this.tmpOption.columns) {\n      this.columnsList.push(c.columnDef);\n      this.colHash[c.columnDef] = c;\n      if (c.colFilters && c.colFilters.hKey) {\n        this.cFields.push(c.columnDef);\n      }\n    }\n  }\n  ngOnDestroy(): void {\n    this.isPageLoad = false;\n\n    if (this.intervalId !== undefined && this.intervalId !== null) {\n      clearInterval(this.intervalId);\n    }\n  }\n\n  initUpdateData(): void {\n    this.tableOptions = Object.assign(this.tableOptions, this._sTableOptions.tableOptions);\n    this.isPageLoad = (this.sTableOptions.overridePageLoad) ? false : this.isPageLoad;\n    const filterK = localStorage.getItem(this.tableOptions.id);\n    if ( filterK && filterK !== '') {\n      this.filterText = filterK;\n      if (!this.called) { setTimeout(() => { localStorage.removeItem(this.tableOptions.id);\n                                             this.doFilter(this.filterText); this.called = true; }, 2000); }\n    }\n    if (this.isPageLoad && !this.tableOptions.pageTotal ) {\n      // this.loaderService.display(true, 'Getting TableSettings data');\n      const query = {query: {bool: {must: [ {exists: {field: 'tableId'}}, {exists: {field: 'columnRepr'}},\n            {match: {'tableId.keyword': this.tableOptions.id}},\n              {match: {'userId.keyword': this.authenticationService.currentUser?.email}}]}}};\n      const q = JSON.stringify(query);\n      const skip = 0;\n      const limit = 1;\n      // this.tableSettingsService.getAllApiTablesettingsGet({q, skip, limit}).subscribe((result: any) => {\n      //     this.loaderService.display(false);\n      //     if (result && result.data && result.data.length) {\n      //       this.sessionData = result.data[0];\n      //       try {\n      //         const savedCols = JSON.parse(result.data[0].columnRepr);\n      //         if (result.data[0].columnRepr && savedCols.length === this._sTableOptions.columns.length) {\n      //           this._sTableOptions.columns = savedCols;\n      //         }\n      //       } catch (e) {\n      //         e = null;\n      //       }\n      //       this.selectedTimer = result.data[0].refreshInterval + '';\n      //       this._sTableOptions.sortOptions.direction = (result.data[0].settings.sortOptions.direction === '')\n      //         ? 'asc' : result.data[0].settings.sortOptions.direction;\n      //       this._sTableOptions.tableOptions.pageSize =  result.data[0].settings.pageSize;\n      //       if (result.data[0].settings.pageSize !== this.tableOptions.pageSize) {\n      //         setTimeout(() => this.RefreshTableData(), 2000);\n      //       }\n      //       this.tableOptions.pageSize = result.data[0].settings.pageSize;\n      //       this.setTableOptions(this._sTableOptions.tableOptions);\n      //     }\n      // });\n    } else {\n      this.clearSelection();\n      this.setTableOptions(this.tableOptions);\n    }\n    if (this.isPageLoad) {\n      this.isPageLoad = false;\n    }\n  }\n\n  setTableOptions(tblOptions: any): any {\n    this.displayedColumns = [];\n    this.orderlist = [];\n    this.showhideList = this._sTableOptions.columns;\n\n    this._sTableOptions.columns.map((c: any) => {\n      if (c.visible) {\n        this.displayedColumns.push(c.columnDef);\n        this.orderlist.push(c);\n      }\n    });\n\n    if (tblOptions.compareData) {\n      this.displayedColumns.push('compare');\n    }\n\n    if (tblOptions.showAction) {\n      this.displayedColumns.push('action');\n    }\n\n    if (tblOptions.rowSelection) {\n      this.displayedColumns.unshift('select');\n    }\n\n    this.dataSource.data = this._sTableOptions.pageData;\n    if (this.sort) {\n      this.dataSource.sort = this.sort;\n    }\n\n    this.dataSource.sortingDataAccessor = (data: any, sortHeaderId: string): string => {\n      if (typeof data[sortHeaderId] === 'string') {\n        return data[sortHeaderId].toLocaleLowerCase();\n      }\n      return data[sortHeaderId];\n    };\n\n    if (!tblOptions.isServerSide) {\n      this.dataSource.paginator = this.paginator;\n    }\n    this.filterArray = this.dataSource.filteredData;\n  }\n\n  // GetFinalColumns(savedColumns, definedColumns) {\n  //   const finalcols = [];\n  //   if (savedColumns.length >= definedColumns.length) {\n  //     savedColumns.forEach(sCol => {\n  //       try {\n  //         for (let dCol = 0; dCol < definedColumns.length; dCol++) {\n  //           if (sCol.columnDef == definedColumns[dCol].columnDef) {\n  //             finalcols.push(sCol);\n  //             break;\n  //           }\n  //           if (dCol == definedColumns.length - 1) {\n  //             finalcols.push(definedColumns[dCol]);\n  //           }\n  //         }\n  //       } catch (e) {\n  //         e = null;\n  //       }\n  //     });\n  //   } else if (definedColumns.length > savedColumns.length) {\n  //     definedColumns.forEach(dCol => {\n  //       for (let sCol = 0; sCol < savedColumns.length; sCol++) {\n  //         try {\n  //           if (dCol.columnDef == savedColumns[sCol].columnDef) {\n  //             finalcols.push(savedColumns[sCol]);\n  //             break;\n  //           }\n  //           if (sCol == savedColumns.length - 1) {\n  //             finalcols.push(dCol);\n  //           }\n  //         } catch (e) {\n  //           e = null;\n  //         }\n  //       }\n  //     });\n  //   }\n  //   return finalcols;\n  // }\n\n  GetFinalColumns(savedColumns: any, definedColumns: any): any {\n    // @ts-ignore\n    definedColumns.forEach(obj => {\n      // @ts-ignore\n      return savedColumns.forEach(obj1 => {\n        if (obj1.columnDef === obj.columnDef) {\n          obj.visible = obj1.visible;\n          obj.order = obj1.order;\n        }\n      });\n    });\n    try {\n      // @ts-ignore\n      definedColumns = definedColumns.sort((a, b) => (a.order > b.order) ? 1 : -1);\n    } catch (e) {\n      e = null;\n    }\n    return definedColumns;\n  }\n\n\n  showHideColumn(i: any, val: any): void {\n    val.visible = !val.visible;\n    const index = this.orderlist.findIndex(x => x.columnDef === val.columnDef);\n    if (index >= 0) {\n      this.orderlist.splice(index, 1);\n    } else {\n      this.orderlist.push(val);\n    }\n    this.displayedColumns = [];\n    this.orderlist = this.orderlist.sort((a, b) => a.order - b.order);\n\n    if (this.tableOptions.compareData) {\n      this.displayedColumns.push('compare');\n    }\n\n    if (this.tableOptions.rowSelection) {\n      this.displayedColumns.push('select');\n    }\n\n    this.orderlist.forEach(element => {\n      this.displayedColumns.push(element.columnDef);\n    });\n    if (this.tableOptions.showAction) {\n      this.displayedColumns.push('action');\n    }\n    this.isActionChanged = true;\n    this.initUpdateData();\n  }\n\n  ngAfterViewInit(): void {\n    this.isLoading = false;\n    setTimeout( () => { this.initUpdateData(); });\n  }\n\n  pageChanged(event: any): void {\n    this.isActionChanged = true;\n    this.currentPageIndex = event.pageIndex;\n    this.cpIndex = event.pageIndex;\n    this.tableOptions.pageSize = event.pageSize;\n    if (this.tableOptions.isServerSide) {\n      this.pageCallback.emit(event);\n    }\n  }\n\n  RefreshTableData(): void {\n    this.refreshCallback.emit();\n  }\n  getCollectionData(): void {\n    this.sTableOptions.dataList = [];\n    this.loaderService.display(true, this.sTableOptions.lMsg);\n    // tslint:disable-next-line:no-shadowed-variable\n    let query: any = {};\n    delete this.tmpOption.serverSide.q.query.bool.filter;\n    this.tmpOption.serverSide.q.query.bool.must.forEach((obj: any, index: number) => {\n      if (obj.bool && obj.bool.should && obj.bool.should[0].match) {\n        this.tmpOption.serverSide.q.query.bool.must.splice(index, 1);\n      } else if (obj.multi_match) {\n        this.tmpOption.serverSide.q.query.bool.must.splice(index, 1);\n      }\n    });\n    query = {...this.tmpOption.serverSide.q};\n    \n    if (this.filterQuery && this.filterQuery.multi_match) { // Global filter\n      query.query.bool.must.push(this.filterQuery);\n    }\n    if (this.colFilterQuery && this.colFilterQuery.length) { // Multi Column filter\n      this.colFilterQuery.forEach((obj: any) => {\n        if (obj.bool && obj.bool.should[0].match) {\n          query.query.bool.must.push(obj);\n        } else if(obj.must){\n          query.query.bool.must.push(obj.must[0])\n        } else if(!(obj.bool && obj.bool.should[0].match) && !obj.must) {\n          query.query.bool.filter = [];\n          query.query.bool.filter.push(obj);\n        }\n      });\n    }\n    const q = JSON.stringify(query);\n    const skip = this.cpIndex;\n    const limit = this.sTableOptions.pSize;\n    const sort = JSON.stringify(this.sTableOptions.serverSide.sort);\n    this.sTableOptions.loading = true; // @ts-ignore\n    this.masterService[this.tmpOption.serverSide.service][this.tmpOption.serverSide.fn]({q, skip, limit, sort})\n      .subscribe((result: any) => {\n        this.sTableOptions.loading = false;\n        this.loaderService.display(false);\n        this.sTableOptions.dataList = result.data;\n        this.sTableOptions.pTotal = result.total;\n        this.initiateTable(result.data);\n      });\n  }\n\n  initiateTable(dataList: any): void {\n    const cols = dataList\n      // tslint:disable-next-line:no-shadowed-variable\n      .reduce((cols: any, row: {}) => {\n        return [...cols, ...Object.keys(row)];\n      }, [])\n      // tslint:disable-next-line:no-shadowed-variable\n      .reduce((cols: string | any[], column: any) => {\n        return cols.includes(column)\n          ? cols\n          : [...cols, column];\n      }, []);\n    // Describe the columns for <mat-table>.\n    /*this.columns = cols.map((column: string | number) => {\n      return {\n        columnDef: column,\n        header: (this.colHash[column]) ? this.colHash[column].header : column,\n        cell: (element: any) => `${element[column] ? element[column] : ``}`,\n        ...this.colHash[column]\n      };\n    });*/\n    this.displayedColumns = this.columnsList.slice();\n    this.dataSource = new MatTableDataSource<any>(dataList);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.totalCallback.emit({value: this.sTableOptions.pTotal, id: this.sTableOptions.id});\n  }\n  openListColumns(): void {\n    this.isExportClick = false;\n    this.columnsCnt++;\n    if (this.columnsCnt > 1) {\n      this.columnsCnt = 1;\n    }\n  }\n\n  timerCallData(): void  {\n    // this.listMenuTrigger.closeMenu();\n    clearInterval(this.intervalId);\n    this.intervalId = undefined;\n\n    if (this.selectedTimer !== undefined && Number(this.selectedTimer) !== 0) {\n      clearInterval(this.intervalId);\n      this.intervalId = setInterval(() => {\n        this.timerCallback.emit(this.selectedTimer);\n      }, Number(this.selectedTimer) * 1000);\n    }\n\n  }\n  filterDrpLstChange(data: any): void {\n    console.log(data);\n    this.selectionchangeCallback.emit(data);\n  }\n\n  ParentCalls(id: any): void {\n    this.parentCallback.emit(id);\n  }\n\n  AddTableRecord(): void {\n    // this.listMenuTrigger.closeMenu();\n    this.addCallback.emit();\n  }\n  publish(): void {\n    this.publishCallback.emit();\n  }\n  CompareData(row: any): any {\n    if (row.length <= 1) {\n      this.toast.sToast('info', 'Two files requires to compare');\n      return false;\n    }\n    if (row.length > 2) {\n      this.toast.sToast('info', 'It not allow to compare more than 2 records');\n      return false;\n    }\n    const resp = { row };\n    this.compareCallback.emit(resp);\n  }\n\n  clearSelection(): void {\n    this.selection.clear();\n    // @ts-ignore\n    this.numSelected = undefined;\n  }\n  clearCompCompareSelection(): void {\n    this.compSelection.clear();\n    // @ts-ignore\n    this.compNumSelected = undefined;\n  }\n\n  isAllSelected(): any {\n    this.numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    if (this.sTableOptions.tableOptions.isCheckboxSelection) {\n      this.checkBoxCallback.emit(this.selection.selected);\n    }\n    return this.numSelected === numRows;\n  }\n\n  isAllCompSelected(): any {\n    this.compNumSelected = this.compSelection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return this.compNumSelected === numRows;\n  }\n\n  masterToggle(): void {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n    if (this.sTableOptions.tableOptions.isCheckboxSelection) {\n      this.checkBoxCallback.emit(this.selection.selected);\n    }\n  }\n\n  rowToggle(row: any): void {\n    this.selection.toggle(row);\n    if (this.sTableOptions.tableOptions.isCheckboxSelection) {\n      this.checkBoxCallback.emit(this.selection.selected);\n    }\n  }\n\n  masterCompToggle(): void {\n    this.isAllCompSelected() ?\n      this.compSelection.clear() :\n      this.dataSource.data.forEach(row => this.compSelection.select(row));\n  }\n\n  customSort(event: any): void {\n    // console.log(this._sTableOptions.sortOptions);\n    // {active: 'name', direction: 'asc'}\n    this._sTableOptions.sortOptions = event;\n    if (this.tableOptions.isServerSide && event.direction !== '') {\n      this.sortCallback.emit(event);\n    }\n  }\n  exportAllData(): void {\n    const keymap = {};\n    // @ts-ignore\n    this._sTableOptions.columns.forEach(obj => {\n      // @ts-ignore\n      keymap[obj.columnDef] = obj.header;\n    });\n    // @ts-ignore\n    keymap._id = (keymap._id) ? keymap._id : '_id';\n    this.loaderService.display(true);\n    const name =  (this.tableOptions.title !== '' ) ? this.tableOptions.title.replace(/[^A-Z0-9]/ig, '_') : 'Report';\n    this.baseService.doRequest('/api/standardreports/generateReport', 'post',\n      { query: this._sTableOptions.query, keyMap: keymap, name }).subscribe((result: any) => {\n        this.loaderService.display(false);\n        if (result) {\n          window.open(result.msg, '_blank');\n        } else {\n          this.toast.sToast('error', result.msg);\n        }\n      }, () => {\n        this.loaderService.display(false);\n      });\n  }\n\n  SaveSettings(): void {\n    let item: any; item = {\n      tableId: this._sTableOptions.tableOptions.id,\n      userId: this.authenticationService.currentUser?.email,\n      columnRepr: JSON.stringify(this._sTableOptions.columns),\n      refreshInterval: +this.selectedTimer,\n      settings: {\n        filterText: this.filterText,\n        gFilter: this._sTableOptions.gFilter ? this._sTableOptions.gFilter : [],\n        sortOptions: this._sTableOptions.sortOptions,\n        pageSize: this._sTableOptions.tableOptions.pageSize\n      }\n    };\n    item.settings.sortOptions.direction = (this._sTableOptions.sortOptions.direction === '')\n      ? 'asc' : this._sTableOptions.sortOptions.direction;\n    const method = (this.sessionData && this.sessionData._id) ? 'put' : 'post';\n    if (this.sessionData && this.sessionData._id) { item._id = this.sessionData._id; }\n    this.baseService.doRequest(`/api/tablesettings/`, method, item).subscribe((res: any) => {\n      if (res && res._id && res.c !== null && res.u !== null) {\n        this.toast.sToast('success', 'Successfully updated!');\n      } else {\n        this.toast.sToast('error', res._id);\n      }\n    });\n\n    /*const method = this.tableId ? 'put' : 'post';\n    const url = this.tableId ? `/api/user_settings/${this.tableId}` : `/api/user_settings`;\n    this.baseService.doRequest(url, method, {\n      tablename: this.tableOptions.id.toLowerCase(),\n      // @ts-ignore\n      username: this.authenticationService.currentUser._id,\n      userdata: JSON.stringify(_settings)\n    }).subscribe((result: any) => {\n      if (result) {\n        this.sessionData = [];\n        this.toast.sToast('success', 'Settings updated');\n        this.sessionData = JSON.parse(result.msg[0].userdata);\n      } else {\n        this.toast.sToast('error', result.msg);\n      }\n    });*/\n  }\n  doFilter = (value: string) => {\n    // this.isActionChanged = true;\n    localStorage.setItem(this.tableOptions.id, value);\n    if (this.tableOptions.isServerSide) {\n      this.filterCallback.emit(value);\n    } else {\n      this.dataSource.filter = value.trim().toLocaleLowerCase();\n    }\n  }\n  \n  doColumFilter = (value: any, col: string): any => {\n    if (this.tableOptions.isServerSide) {\n      // @ts-ignore\n      if (this.colFilters.filter(x => x.key === col).length > 0) {\n        // @ts-ignore\n        this.colFilters.forEach((obj, index) => {\n          if (col === obj.key && value === '') {\n            this.colFilters.splice(index, 1);\n          } else {\n            obj.value = value;\n          }\n        });\n      } else {\n        if (value === '') { return false; }\n        const colName = this._sTableOptions.columns.filter((x: any) => x.columnDef === col)[0].header;\n        if(typeof value === \"object\" ){\n          const start = new Date(value.start);\n          const end = new Date(value.end);\n          this.colFilters.push({key: col, name: colName, value: start.getFullYear() + \"-\" + (\"0\"+(start.getMonth()+1)).slice(-2) + \"-\" + (\"0\"+start.getDate()).slice(-2)});\n          this.colFilters.push({key: col, name: colName, value: end.getFullYear() + \"-\" + (\"0\"+(end.getMonth()+1)).slice(-2) + \"-\" + (\"0\"+end.getDate()).slice(-2)});\n        }else{\n          this.colFilters.push({key: col, name: colName, value});\n        }\n      }\n      this.colFilterCallback.emit({value, col});\n    } else {\n      this.filterValues = value.toLowerCase();\n      this.dataSource.data = this.filterArray.filter((row: any) => row[this.searchedColName].toLowerCase().includes(this.filterValues));\n    }\n  }\n}\n","<!--suppress TypeScriptUnresolvedVariable -->\n<mat-card *ngIf=\"isLoading\">\n  <mat-card-content>\n    <p> <i class=\"fa fa-spin fa-spinner fa-lg\"></i> Loading...</p>\n  </mat-card-content>\n</mat-card>\n<mat-card class=\"table-card ibtn\" *ngIf=\"!isLoading\">\n  <mat-toolbar class=\"table-tools\" role=\"heading\" *ngIf=\"selection.selected.length === 0\">\n    <span class=\"mat-title mb0f\"> {{tableOptions.title}} <span class=\"fw300\" *ngIf=\"tableOptions.pageTotal !== 0 && tableOptions.title !== '' \">\n      ({{tableOptions.pageTotal}}) </span></span>\n    <button class=\"px-1 lh-25\" mat-stroked-button *ngIf=\"tableOptions.add\" type=\"button\"  matTooltip=\"Add New Record\"  color=\"primary\"\n          (click)=\"AddTableRecord()\" id =\"addbtn{{tableOptions.title}}\">\n      <mat-icon class=\"mat-18 mb-1\">add</mat-icon> Add\n    </button>\n    <div fxFlex fxLayout fxLayoutAlign=\"end\" *ngIf=\"tableOptions.floatingFilter\">\n      <div fxLayout fxLayoutGap=\"15px\" class=\"navigation-items\">\n        <form fxLayout=\"row\" fxLayoutAlign=\"center center\">\n            <mat-form-field class=\"pl20\" style=\"padding: 10px;font-size: 15px;\" *ngIf= \"tableOptions.dropdwn\">\n                <mat-select [multiple]=\"false\"\n                  placeholder=\"Asset\"\n                  (selectionChange)=\"filterDrpLstChange($event.value)\" [formControl]=\"assetDrpCtrl\">\n                  <mat-option *ngFor=\"let item of tableOptions.filterDrpLstFilteredList\"\n                    [value]=\"item._id\">\n                    {{item.ip}}\n                  </mat-option>\n                </mat-select>\n              </mat-form-field>\n          <!--<div fxFlex fxLayout fxLayoutAlign=\"end\" *ngIf=\"tableOptions.add\"></div>-->\n          <mat-form-field floatLabel=\"never\" class=\"search-tool\" *ngIf=\"tableOptions.search\">\n            <input matInput class=\"form-control mat-small\" [(ngModel)]=\"filterText\" type=\"text\" trim=\"blur\" name=\"filterText\"\n              [id]=\"tableOptions.id\" (ngModelChange)=\"filterUpdate.next($event)\" placeholder=\"Search\">\n            <button class=\"gray\" matSuffix mat-icon-button *ngIf=\"filterText === ''\" color=\"primary\" >\n              <mat-icon>search</mat-icon>\n            </button>\n            <button class=\"gray\" matSuffix mat-icon-button *ngIf=\"filterText && filterText !== ''\"\n              (click)=\"filterText = ''; doFilter(filterText);\" color=\"primary\" >\n              <mat-icon>close</mat-icon>\n            </button>\n          </mat-form-field>\n          <div fxFlex fxLayout fxLayoutAlign=\"end\" *ngIf=\"tableOptions.refreshData\">\n            <button class=\"gray\" matSuffix mat-icon-button matTooltip=\"Reload Table Data\" (click)=\"RefreshTableData();\"\n                    color=\"primary\" >\n              <mat-icon id=\"rfrbtn{{tableOptions.title}}\">refresh</mat-icon>\n            </button>\n          </div>\n          <div *ngIf=\"tableOptions.refreshData\">\n            <mat-form-field style=\"font-size: 14px;width: 61px\">\n              <mat-label>Every</mat-label>\n              <mat-select [(value)]=\"selectedTimer\" (selectionChange)=\"timerCallData()\"\n                matTooltip=\"Refresh Interval\">\n                <mat-option value=\"0\" selected></mat-option>\n                <mat-option value=\"60\" id=\"RefreshOnemin\">1 Min</mat-option>\n                <mat-option value=\"300\" id=\"RefreshFivemin\">5 Min</mat-option>\n                <mat-option value=\"1800\" id=\"RefreshThirtymin\">30 Min</mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n          <button mat-icon-button menuOpen=\"false\" matTooltip=\"Filter List\"\n                  *ngIf=\"tableOptions.showColFilter && _sTableOptions.columns && _sTableOptions.columns.length\"\n                  [matMenuTriggerFor]=\"filterMenu\" #filterMenuTrigger=\"matMenuTrigger\">\n            <mat-icon>filter_list</mat-icon></button>\n          <!-- <mat-menu #filterMenu=\"matMenu\" class=\"col-filters\">\n            <mat-card class=\"filter-card\" (click)=\"$event.stopPropagation();\">\n              <mat-card-header>\n                <mat-card-title>Filter</mat-card-title>\n              </mat-card-header>\n              <mat-card-content>\n                <form>\n                  <ng-container *ngFor=\"let column of _sTableOptions.columns\">\n                    <mat-form-field *ngIf=\"column.iscolumnSearch\" class=\"\" appearance=\"outline\">\n                      <input matInput type=\"text\" trim=\"blur\" [id]=\"column.id\" placeholder=\"Search {{column.header}}\"\n                             *ngIf=\"!column.selectFilter && !column.israngeSearch\" name=\"{{column.columnDef}}\" [(ngModel)]=\"colfilter[column.columnDef]\"\n                        (input)='columnFilter($any($event.target).value,column.columnDef)'\n                        [disabled]=\"(column.iscolumnSearch === undefined || column.iscolumnSearch===null) ? 'false' : !column.iscolumnSearch \" />\n                      <mat-select placeholder=\"Choose {{column.header}} value\" name=\"{{column.columnDef}}\"\n                                  *ngIf=\"column.selectFilter\" [(ngModel)]=\"colfilter[column.columnDef]\"\n                                  [disabled]=\"(column.iscolumnSearch === undefined || column.iscolumnSearch===null) ? 'false' : !column.iscolumnSearch \"\n                      (selectionChange)= \"columnFilter($event.value, column.columnDef)\">\n                        <mat-option value=\"\">All</mat-option>\n                        <mat-option *ngFor=\"let val of column.selectFilterArr\" [value]=\"val.value\" [id]=\"val.id\">{{val.name}}</mat-option>\n                      </mat-select>\n                      <ng-container *ngIf=\"column.israngeSearch\">\n                        <mat-label>Choose {{column.header}} start to end date </mat-label>\n                        <mat-date-range-input [rangePicker]=\"rangePicker\">\n                          <input matStartDate name=\"start\" placeholder=\"Start date\" [(ngModel)]=\"column.selectRange.start\"/>\n                          <input matEndDate name=\"end\" placeholder=\"End date\" [(ngModel)]=\"column.selectRange.end\"/>\n                        </mat-date-range-input>\n                        <mat-datepicker-toggle matSuffix [for]=\"rangePicker\"></mat-datepicker-toggle>\n                        <mat-date-range-picker #rangePicker>\n                          <mat-date-range-picker-actions>\n                            <button mat-button matDateRangePickerCancel (click)= \"column.selectRange.start=column.selectRange.end='' \">Cancel</button>\n                            <button mat-raised-button color=\"primary\" matDateRangePickerApply (click)=\"columnFilter(column.selectRange, column.columnDef)\">Apply</button>\n                          </mat-date-range-picker-actions>\n                        </mat-date-range-picker>\n                      </ng-container>\n                    </mat-form-field>\n                  </ng-container>\n                </form>\n              </mat-card-content>\n            </mat-card>\n          </mat-menu> -->\n          <mat-menu #filterMenu=\"matMenu\" class=\"col-filters\">\n            <mat-card class=\"filter-card\" (click)=\"$event.stopPropagation();\">\n              <mat-card-header>\n                <mat-card-title>Filter</mat-card-title>\n              </mat-card-header>\n              <mat-card-content>\n                <form #filterForm=\"ngForm\" role=\"form\">\n                  <mat-form-field *ngIf=\"sTableOptions.columns && sTableOptions.columns.length\" class=\"w-100\" appearance=\"outline\">\n                    <mat-label>Choose filter column</mat-label>\n                    <mat-select placeholder=\"Choose filter column\" name=\"chooseFilter\" required [(ngModel)]=\"cFilter.selectedCol\">\n                      <mat-option value=\"\">Choose filter column</mat-option>\n                      <ng-container *ngFor=\"let val of _sTableOptions.columns\">\n                        <mat-option *ngIf=\"val.iscolumnSearch\" [value]=\"val.columnDef\" [id]=\"val.header\">{{val.header}}</mat-option>\n                      </ng-container>\n                    </mat-select>\n                  </mat-form-field>\n                  <mat-form-field *ngIf=\"cFilter.selectedCol\" class=\"w-100\" appearance=\"outline\">\n                    <mat-label>Search {{colHash[cFilter.selectedCol].header}}</mat-label>\n                    <input matInput type=\"text\" trim=\"blur\" *ngIf=\"colHash[cFilter.selectedCol].colFilters.type === 'text'\"\n                           placeholder=\"Search {{colHash[cFilter.selectedCol].header}}\" required\n                            name=\"{{colHash[cFilter.selectedCol].col}}s\" [(ngModel)]=\"colHash[cFilter.selectedCol].val\" >\n                    <mat-select placeholder=\"Search {{colHash[cFilter.selectedCol].header}}\" name=\"{{colHash[cFilter.selectedCol].col}}s\"\n                                *ngIf=\"colHash[cFilter.selectedCol].colFilters.type === 'select'\" required\n                                [(ngModel)]=\"colHash[cFilter.selectedCol].val\">\n                      <mat-option *ngFor=\"let val of colHash[cFilter.selectedCol].colFilters.options\" [value]=\"val.value\">{{val.name}}</mat-option>\n                    </mat-select>\n                    <ng-container *ngIf=\"colHash[cFilter.selectedCol].colFilters.type === 'range'\">\n                     <!-- <mat-date-range-input [rangePicker]=\"picker\">\n                        <input matStartDate name=\"startDate\" [(ngModel)]=\"colHash[cFilter.selectedCol].start\"\n                               placeholder=\"Start date\">\n                        <input matEndDate name=\"startDate\" [(ngModel)]=\"colHash[cFilter.selectedCol].end\"\n                               placeholder=\"End date\">\n                      </mat-date-range-input>\n\n                      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                      <mat-date-range-picker #picker></mat-date-range-picker> -->\n                      <!-- (dateChange)=\"changeEvent($event)\" -->\n                      <mat-form-field>\n                        <input matInput [matDatepicker]=\"picker1\" required [(ngModel)]=\"colHash[cFilter.selectedCol].dateCol.start\" placeholder=\"From Date\" name=\"dtInpt1\">\n                        <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n                        <mat-datepicker #picker1></mat-datepicker>\n                      </mat-form-field>\n                      <mat-form-field>\n                        <input matInput [matDatepicker]=\"picker2\" required [(ngModel)]=\"colHash[cFilter.selectedCol].dateCol.end\" placeholder=\"To Date\" name=\"dtInpt\">\n                        <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\n                        <mat-datepicker #picker2></mat-datepicker>\n                      </mat-form-field>\n                    </ng-container>\n                  </mat-form-field>\n                  <button (click)=\"columnFilterxlsx(colHash[cFilter.selectedCol])\" [disabled]=\"!filterForm.form.valid\"\n                          color=\"primary\" mat-raised-button=\"\">Add Filter</button>\n                   <button class=\"ml-2\" (click)=\"cFilter.selectedCol = ''\"  mat-stroked-button=\"\">Clear</button>\n                </form>\n              </mat-card-content>\n            </mat-card>\n          </mat-menu>\n          <button mat-icon-button menuOpen=\"false\" (click)=\"openListColumns()\" #listMenuTrigger=\"matMenuTrigger\"\n            [matMenuTriggerFor]=\"belowMenu\" color=\"primary\" id=\"view{{tableOptions.id}}\" matTooltip=\"View Column, Reorder Columns\"  *ngIf=\"tableOptions.showhideList\">\n            <mat-icon>view_column</mat-icon>\n          </button>\n          <mat-menu #belowMenu=\"matMenu\" [hasBackdrop]=\"false\" yPosition=\"below\">\n            <!-- <div *ngFor=\"let item of showhideList; let i = index\"\n                  style=\"padding: 5px;overflow: hidden;font-family: Arial, Helvetica, sans-serif\">\n                  <mat-checkbox color=\"primary\" [checked]=\"item.visible==true?item:''\" (click)=\"$event.stopPropagation()\"\n                    (change)=\"showHideColumn(i, item)\">\n                  </mat-checkbox>\n                  {{item.header}}\n                </div> -->\n            <div cdkDropList (cdkDropListDropped)=\"drop($event)\">\n              <div class=\"dhandle\"\n                *ngFor=\"let item of showhideList; let i = index\" cdkDrag>\n                <i class=\"material-icons color_icon\"> drag_handle </i>\n                <mat-checkbox color=\"primary\" [checked]=\"item.visible==true?item:''\" (click)=\"$event.stopPropagation()\"\n                  (change)=\"showHideColumn(i, item)\" class=\"left-align\" [id]=\"item.header\"> {{item.header}} </mat-checkbox>\n              </div>\n            </div>\n          </mat-menu>\n          <button mat-icon-button menuOpen=\"false\" matTooltip=\"Filter List\"\n                  *ngIf=\"sTableOptions.cFilter\" color=\"primary\"\n                  [matMenuTriggerFor]=\"filterMenu\" #filterMenuTrigger=\"matMenuTrigger\">\n            <mat-icon class=\"\">filter_list</mat-icon></button>\n            <mat-menu #filterMenu=\"matMenu\" class=\"col-filters\">\n              <mat-card class=\"filter-card\" (click)=\"$event.stopPropagation();\">\n                <mat-card-header>\n                  <mat-card-title>Filter</mat-card-title>\n                </mat-card-header>\n                <mat-card-content>\n                  <form #filterForm=\"ngForm\" role=\"form\">\n                    <mat-form-field *ngIf=\"sTableOptions.columns && sTableOptions.columns.length\" class=\"w-100\" appearance=\"outline\">\n                      <mat-label>Choose filter column</mat-label>\n                      <mat-select placeholder=\"Choose filter column\" name=\"chooseFilter\" required [(ngModel)]=\"cFilter.selectedCol\">\n                        <mat-option value=\"\">Choose filter column</mat-option>\n                        <mat-option *ngFor=\"let val of sTableOptions.columns\" [value]=\"val.col\" [id]=\"val.id\">{{val.header}}</mat-option>\n                      </mat-select>\n                    </mat-form-field>\n                    <mat-form-field *ngIf=\"cFilter.selectedCol\" class=\"w-100\" appearance=\"outline\">\n                      <mat-label>Search {{colHash[cFilter.selectedCol].header}}</mat-label>\n                      <input matInput type=\"text\" trim=\"blur\" *ngIf=\"colHash[cFilter.selectedCol].colFilters.type === 'text'\"\n                             placeholder=\"Search {{colHash[cFilter.selectedCol].header}}\" required\n                              name=\"{{colHash[cFilter.selectedCol].col}}s\" [(ngModel)]=\"colHash[cFilter.selectedCol].val\" >\n                      <mat-select placeholder=\"Search {{colHash[cFilter.selectedCol].header}}\" name=\"{{colHash[cFilter.selectedCol].col}}s\"\n                                  *ngIf=\"colHash[cFilter.selectedCol].colFilters.type === 'select'\" required\n                                  [(ngModel)]=\"colHash[cFilter.selectedCol].val\">\n                        <mat-option *ngFor=\"let val of colHash[cFilter.selectedCol].colFilters.options\" [value]=\"val.value\">{{val.name}}</mat-option>\n                      </mat-select>\n                      <ng-container *ngIf=\"colHash[cFilter.selectedCol].colFilters.type === 'range'\">\n                        <mat-date-range-input [rangePicker]=\"picker\">\n                          <input matStartDate name=\"startDate\" [(ngModel)]=\"colHash[cFilter.selectedCol].start\"\n                                 placeholder=\"Start date\">\n                          <input matEndDate name=\"startDate\" [(ngModel)]=\"colHash[cFilter.selectedCol].end\"\n                                 placeholder=\"End date\">\n                        </mat-date-range-input>\n                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                        <mat-date-range-picker #picker></mat-date-range-picker>\n                      </ng-container>\n                    </mat-form-field>\n                    <button (click)=\"columnFilterxlsx(colHash[cFilter.selectedCol])\" [disabled]=\"!filterForm.form.valid\"\n                            color=\"primary\" mat-raised-button=\"\">Add Filter</button>\n                     <button class=\"ml-2\" (click)=\"cFilter.selectedCol = ''\"  mat-stroked-button=\"\">Clear</button>\n                  </form>\n                </mat-card-content>\n              </mat-card>\n            </mat-menu>\n            <button id=\"gbtn{{sTableOptions.title}}\" color=\"primary\" matSuffix mat-icon-button *ngIf=\"!tableOptions.hideDownload\"\n            matTooltip=\"Download as XLSx\" [matMenuTriggerFor]=\"xlsMenu\"\n        aria-label=\"download xlsx menu\">\n      <mat-icon class=\"mat-24\">file_download</mat-icon>\n      </button>\n      <mat-menu #xlsMenu=\"matMenu\">\n        <button mat-menu-item id=\"currentSelection\" *ngIf=\"tableOptions.filterDownload\" (click)=\"downloadAsXls('filtered')\">\n          <mat-icon class=\"mat-24\">filter_list</mat-icon>\n          <span>Filtered Data</span>\n        </button>\n        <button mat-menu-item id=\"fullData\" (click)=\"downloadAsXls('full')\">\n          <mat-icon class=\"mat-24\">file_download</mat-icon>\n          <span>Full Data</span>\n        </button>\n      </mat-menu>\n          <button mat-icon-button *ngIf=\"tableOptions.compareData\" matTooltip=\"Compare Data\" color=\"primary\"\n            (click)=\"CompareData(compSelection.selected)\">\n            <mat-icon>compare</mat-icon>\n          </button>\n          <button mat-icon-button matTooltip=\"Save Settings\" id=\"save{{tableOptions.id}}\" (click)=\"SaveSettings()\" color=\"primary\"  *ngIf=\"tableOptions.saveData\">\n            <mat-icon>save</mat-icon>\n          </button>\n          <button mat-raised-button color=\"primary\" (click)=\"publish()\" *ngIf=\"tableOptions.publish\">\n            Publish\n          </button>\n          <a mat-icon-button matTooltip=\"Help Link\" [href]=\"baseService.helpLinks[tableOptions.id]\" target=\"_blank\" color=\"primary\"\n             *ngIf=\"baseService.helpLinks && baseService.helpLinks[tableOptions.id] && baseService.helpLinks[tableOptions.id] !== ''\">\n            <mat-icon>help</mat-icon>\n          </a>\n          <!--<button mat-icon-button menuOpen=\"false\" (click)=\"openListExport()\" matTooltip=\"Download\"\n            #exportMenuTrigger=\"matMenuTrigger\" [matMenuTriggerFor]=\"exportMenu\" *ngIf=\"tableOptions.exportExcel\">\n            <mat-icon>cloud_download</mat-icon>\n          </button>-->\n          <button *ngFor=\"let pbtn of tableOptions.parentCalls\" mat-icon-button [matTooltip]=\"pbtn.tooltip\" [color]=\"pbtn.color\"\n                  (click)=\"ParentCalls(pbtn.id)\">\n            <mat-icon>{{pbtn.icon}}</mat-icon>\n          </button>\n\n          <mat-menu #exportMenu=\"matMenu\" [hasBackdrop]=\"false\" yPosition=\"below\">\n            <!--<div>\n              <button mat-button (click)=\"ExportToExcel()\">\n                Export to Excel\n              </button></div>\n            <div>\n              <button mat-button (click)=\"exportAs('pdf', 'l','current')\">\n                Export Current Page to PDF\n              </button>\n            </div>\n            <div>\n              <button mat-button (click)=\"exportAs('pdf', 'l','whole')\">\n                Export Whole Data to PDF\n              </button>\n            </div>-->\n            <div>\n              <button mat-button (click)=\"exportAllData()\">\n                Export All Data\n              </button>\n            </div>\n          </mat-menu>\n        </form>\n      </div>\n    </div>\n  </mat-toolbar>\n  <mat-toolbar class=\"select-tools\" *ngIf=\"selection.selected.length > 0\">\n    <span>{{selection.selected.length}} {{tableOptions.selectText}} selected.</span>\n    <div fxFlex fxLayout fxLayoutAlign=\"end\">\n      <ng-container *ngIf=\"!tableOptions.isHideGlobal\">\n        <button mat-flat-button color=\"primary\" id=\"gbtnSelction{{tableOptions.title}}\" mat-raised-button\n                [matMenuTriggerFor]=\"gactionSMenu\" [disabled]=\"selection.selected.length === 0\"\n                aria-label=\"global action with a menu\"> Global Actions\n        </button>\n        <mat-menu #gactionSMenu=\"matMenu\">\n          <ng-container *ngFor=\"let item of tableOptions.actionMenuItems\">\n            <a id=\"ganchsel{{item.text}}\" class=\"mat-primary\"\n               *ngIf=\"item.isGlobal\" mat-menu-item (click)=\"globalActionCall(selection.selected, item)\">\n              <mat-icon *ngIf=item.icon>{{item.icon}}</mat-icon>\n              <mat-icon *ngIf=!item.icon>arrow_forward_ios</mat-icon>\n              <span>{{ item.text }}</span>\n            </a>\n          </ng-container>\n        </mat-menu>\n      </ng-container>\n      <button class=\"gray\" matSuffix mat-icon-button (click)=\"clearSelection();\">\n        <mat-icon>close</mat-icon>\n      </button>\n    </div>\n  </mat-toolbar>\n  <!--<mat-chip-list aria-label=\"Column Filters\" class=\"mb-2\">\n    <mat-chip class=\"ml-2 my-2\" *ngFor=\"let filter of colFilters\" (removed)=\"removeFilterxlsx(filter)\">\n      {{filter.name}} = *{{filter.value}}* <mat-icon matChipRemove>cancel</mat-icon>\n    </mat-chip>\n  </mat-chip-list>-->\n  <mat-chip-list aria-label=\"Column Filters\" class=\"mb10\">\n    <mat-chip *ngFor=\"let filter of colFilters\" (removed)=\"removeFilter(filter)\">\n      {{filter.name}} = *{{filter.value}}* <mat-icon matChipRemove>cancel</mat-icon>\n    </mat-chip>\n  </mat-chip-list>\n  <mat-card-content [ngClass]=\"{'mt-2': colFilters.length}\">\n    <mat-progress-bar mode=\"indeterminate\" *ngIf=\"tableOptions.loading\"></mat-progress-bar>\n    <div #MAINTABLEDIV class=\"overflow-auto\">\n      <table id=\"mytable\" class=\"ibtn crud-table\" [ngClass]=\"{'tablePadding': isTablePadding===true}\" mat-table [dataSource]=\"dataSource\"\n        *ngIf=\"dataSource\" matSort #MainTable [matSortActive]=\"_sTableOptions['sortOptions']['active']\"\n        [matSortDirection]=\"_sTableOptions['sortOptions']['direction']\" (matSortChange)=\"customSort($event)\">\n        <ng-container matColumnDef=\"select\" *ngIf=\"tableOptions.rowSelection\" sticky>\n          <th mat-header-cell *matHeaderCellDef class=\"ww-break\">\n            <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\" id=\"_selectDeselectAll\"\n              [checked]=\"selection.hasValue() && isAllSelected()\"\n              [indeterminate]=\"selection.hasValue() && !isAllSelected()\"></mat-checkbox>\n          </th>\n          <td mat-cell *matCellDef=\"let row\" class=\"ww-break\">\n            <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\" [id]=\"row._id\"\n              (change)=\"$event ? rowToggle(row) : null\" [checked]=\"selection.isSelected(row)\"></mat-checkbox>\n          </td>\n        </ng-container>\n        <ng-container matColumnDef=\"compare\" *ngIf=\"tableOptions.compareData\">\n          <th mat-header-cell *matHeaderCellDef class=\"ww-break\">Compare\n            <!-- <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                [checked]=\"selection.hasValue() && isAllSelected()\"\n                [indeterminate]=\"selection.hasValue() && !isAllSelected()\"></mat-checkbox> -->\n          </th>\n          <td mat-cell *matCellDef=\"let row\" class=\"ww-break\">\n            <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n              (change)=\"$event ? compSelection.toggle(row) : null\" [checked]=\"compSelection.isSelected(row)\">\n            </mat-checkbox>\n          </td>\n        </ng-container>\n        <ng-container *ngFor=\"let column of _sTableOptions.columns\" [matColumnDef]=\"column.columnDef\">\n          <th mat-header-cell *matHeaderCellDef [width]=\"column.width\">\n            <mat-label mat-sort-header\n              [disabled]=\"(column.isSort === undefined || column.isSort === null) ? 'false' : !column.isSort \">\n              <span>{{ column.header }}</span> </mat-label>\n            <!--Column Search Code in the Table header section-->\n            <!--<div *ngIf=\"tableOptions.columnSearch && dontShow\">\n              <mat-form-field>\n                <input matInput type=\"text\" trim=\"blur\" placeholder=\"Search {{column.header}}\"\n                       *ngIf=\"!column.selectFilter\"\n                  (input)='columnFilter($any($event.target).value,column.columnDef)'\n                  [disabled]=\"(column.iscolumnSearch === undefined || column.iscolumnSearch===null) ? 'false' : !column.iscolumnSearch \">\n                <mat-select placeholder=\"Choose filter value\" name=\"{{column.columnDef}}\"\n                            *ngIf=\"column.selectFilter\" [(ngModel)]=\"colfilter[column.columnDef]\"\n                            [disabled]=\"(column.iscolumnSearch === undefined || column.iscolumnSearch===null) ? 'false' : !column.iscolumnSearch \"\n                (selectionChange)= \"columnFilter($event.value, column.columnDef)\">\n                  <mat-option value=\"\">All</mat-option>\n                  <mat-option *ngFor=\"let val of column.selectFilterArr\" [value]=\"val.value\">{{val.name}}</mat-option>\n                </mat-select>\n              </mat-form-field>\n            </div>-->\n          </th>\n          <td mat-cell *matCellDef=\"let row\"\n            [ngClass]=\"{'text-center': column.align === 'center',\n              'text-left': !column.align || column.align === 'left', 'text-right': column.align === 'right'}\" class=\"wwbreak\">\n            <span *ngIf=\"column.filter\">\n              <span *ngIf=\"column.isHyperlink && !column.isToolTip\">\n                <ng-container *ngIf=\"column.isTarget; then thenTemplate; else elseTemplate\"></ng-container>\n                <ng-template #thenTemplate>\n                  <div innerHTML=\"{{getProperty(row, column.columnDef) | formatCell:column.filter}}\"></div>\n                </ng-template>\n                <ng-template #elseTemplate>\n                  <a class=\"pointer\" (click)=\"hyperLinkCall(row, column.columnDef)\" [id]=\"getProperty(row, column.columnDef)\">\n                    <span>{{ getProperty(row, column.columnDef) | formatCell:column.filter}}</span>\n                  </a>\n                </ng-template>\n              </span>\n              <ng-container *ngIf=\"!column.isHyperlink && !column.isHtml\">\n                <span *ngIf=\"column.isToolTip\" matTooltipClass=\"example-tooltip-red\"\n                  matTooltip=\"{{ getProperty(row, column.isToolTipCol) }}\">\n                  {{getProperty(row, column.columnDef) | formatCell:column.filter}}</span>\n                <span *ngIf=\"!column.isToolTip\">{{getProperty(row, column.columnDef) | formatCell:column.filter}}</span>\n              </ng-container>\n              <span *ngIf=\"!column.isHyperlink && column.isHtml\">\n                <div [innerHTML]=\"getProperty(row, column.columnDef) | safeHTML\"></div>\n                <!--{{getProperty(row, column.columnDef) | formatCell:column.filter}}-->\n              </span>\n            </span>\n\n            <ng-container *ngIf=\"column.hasMultiData\">\n              <div *ngFor=\"let col of column.colList\">\n                <span *ngIf=\"col.isHyperlink && !col.isToolTip\">\n                  <a class=\"pointer\" (click)=\"hyperLinkCall(row, col.col)\" [id]=\"getProperty(row, column.columnDef)\">\n                    <span>{{ getProperty(row, col.col)}}</span>\n                  </a>\n                </span>\n                <span *ngIf=\"col.isToolTip && !col.isHyperlink\" matTooltipClass=\"example-tooltip-red\"\n                  matTooltip=\"{{ getProperty(row, col.isToolTipCol) }}\">{{ getProperty(row, col.col) }}</span>\n                <span *ngIf=\"col.isHyperlink && col.isToolTip\" matTooltipClass=\"example-tooltip-red\"\n                  matTooltip=\"{{ getProperty(row, col.isToolTipCol) }}\">\n                  <a class=\"pointer\" [id]=\"getProperty(row, column.columnDef)\" (click)=\"hyperLinkCall(row, col.col)\">\n                    <span>{{ getProperty(row, col.col)}}</span>\n                  </a>\n                </span>\n                <span *ngIf=\"col.isProgressCntrl\">\n                  <div class=\"mat-elevation-z2\" [ngClass]=\"{'progress-s': getProperty(row, 'warn') > getProperty(row, col.col),\n                            'progress-d':getProperty(row, 'warn') <= getProperty(row, col.col) }\">\n                    <span class=\"percent-b\">{{getProperty(row, col.col)}}%</span>\n                    <div class=\"p-bar\" [style.width]=\"getProperty(row, col.col)+'%'\"></div>\n                  </div>\n                </span>\n                <span *ngIf=\"col.isColoredCntrl\">\n                  <span *ngIf=\"getProperty(row, col.col) == '-'\">{{getProperty(row, col.col)}}</span>\n                  <span class=\"label\" *ngIf=\"getProperty(row, col.col) != '-'\"\n                    [ngStyle]=\"{'background-color':col.color}\">{{getProperty(row, col.col)}}</span>\n                </span>\n\n                <span *ngIf=\"col.isfaicon\">\n                  <i class=\"{{col.class }}\" [ngStyle]=\"{color: col.color}\"></i>\n                </span>\n\n                <span *ngIf=\"col.filter\">\n                  {{getProperty(row, col.col) | formatCell:col.filter}}\n                </span>\n\n                <span *ngIf=\"col.isAddingText\">\n                  {{col.addingText }}{{ getProperty(row, col.col)}}\n                </span>\n\n                <span *ngIf=\"col.img && col.imgPath\">\n                  <img [src]=\"col.imgPath+'generic.svg'\" *ngIf=\"getProperty(row, col.col) === null\" alt=\"generic\"\n                    class=\"{{col.class}}\">\n                  <img [src]=\"col.imgPath+getProperty(row, col.col)\" *ngIf=\"getProperty(row, col.col) !== null\" alt=\"logo\"\n                    class=\"{{col.class}}\">\n                </span>\n\n                <span *ngIf=\"!col.isHyperlink && !col.isProgressCntrl && !col.isColoredCntrl && !col.isToolTip\n                    && !col.filter && !col.isfaicon && !col.isAddingText && !col.img\">\n                  {{ getProperty(row, col.col) }}\n                </span>\n              </div>\n            </ng-container>\n\n            <ng-container *ngIf=\"column.isProgressCntrl\">\n              <div class=\"mat-elevation-z2\" [ngClass]=\"{'progress-s': getProperty(row, 'warn') > getProperty(row, column.columnDef),\n                      'progress-d':getProperty(row, 'warn') <= getProperty(row, column.columnDef) }\">\n                <span class=\"percent-b\">{{getProperty(row, column.columnDef)}}%</span>\n                <div class=\"p-bar\" [style.width]=\"getProperty(row, column.columnDef)+'%'\"></div>\n              </div>\n              \n            </ng-container>\n\n            <!-- <ng-container *ngIf=\"column.isDynamicCntrl\">\n                  <div [innerHTML]=\"getProperty(row, column.columnDef)\"></div>\n                </ng-container> -->\n\n            <ng-container *ngIf=\"column.isColoredCntrl\">\n              <ng-container *ngIf=\"column.isCustomText; then thenTemplate; else elseTemplate\"></ng-container>\n              <ng-template #thenTemplate>\n                <!-- <span *ngIf=\"getProperty(row, column.columnDef) == '-'\">{{getCustomText(getProperty(row, column.columnDef))}}</span> -->\n                <span class=\"label\" *ngIf=\"getProperty(row, column.columnDef) != '-'\"\n                  [ngStyle]=\"getCustomColor(getProperty(row, column.columnDef))\">{{getCustomText(getProperty(row, column.columnDef)) }}</span>\n              </ng-template>\n              <ng-template #elseTemplate>\n                <span *ngIf=\"getProperty(row, column.columnDef) == '-'\">{{getProperty(row, column.columnDef)}}</span>\n                <span class=\"label\" *ngIf=\"getProperty(row, column.columnDef) != '-'\"\n                  [ngStyle]=\"{'background-color':column.color}\">{{getProperty(row, column.columnDef)}}</span>\n              </ng-template>\n            </ng-container>\n\n            <ng-container *ngIf=\"column.statusicon\">\n              <img class=\"vendor-logo\" [src]='getIconPath(row, column)' [matTooltip]='getIconTooltip(row, column)'\n                [alt]='getIconTooltip(row, column)'>\n              <div>\n                <span hidden [innerHTML]=\"getIconTooltip(row, column) | safeHTML\"></span>\n              </div>\n            </ng-container>\n\n            <ng-container *ngIf=\"!column.filter\">\n              <ng-container *ngIf=\"column.icon\">\n                <ng-container>\n                  <span>\n                    <ng-container *ngFor=\"let icon of column.iconList\">\n                      <mat-icon [ngClass]=\"[icon.class]\" *ngIf=\"getProperty(row, column.columnDef) === icon.value\">\n                        {{icon._icon}}\n                      </mat-icon>\n                    </ng-container>\n                  </span>\n                </ng-container>\n              </ng-container>\n              \n              <ng-container *ngIf=\"column.listView\">\n                <ng-container>\n                  <span *ngIf=\"column.listView && !column.dictView\">\n                    <ng-container *ngFor=\"let list of getProperty(row, column.columnDef)\">\n                      <span class=\"bor-1 px-2 mr-1\">{{list}}</span>\n                    </ng-container>\n                  </span>\n                </ng-container>\n                <ng-container *ngIf=\"column.listView && column.dictView\">\n                  {{ getListProperty(row, column.columnDef)}}\n                </ng-container>\n              </ng-container>\n              \n\n              <ng-container *ngFor=\"let img of column.conditionList\">\n                <img class=\"{{img.class}}\" [src]=\"img._img\" [alt]=\"img.value\" *ngIf=\"getProperty(row, column.columnDef) === img.value\"\n                [matTooltip]=\"img.displaytext\">\n                <div>\n                  <span hidden *ngIf=\"getProperty(row, column.columnDef) === img.value\"\n                    [innerHTML]=\"getProperty(row, column.columnDef)\"></span>\n                </div>\n              </ng-container>\n\n              <ng-container *ngIf=\"column.img && column.imgPath\">\n                <img [src]=\"column.imgPath+'generic.svg'\" alt=\"generic\"\n                  *ngIf=\"getProperty(row, column.columnDef) === null || getProperty(row, column.columnDef) === undefined\"\n                  class=\"{{column.class}}\">\n\n\n                <img [src]=\"column.imgPath+getProperty(row, column.columnDef)\" [alt]=\"getProperty(row, column.columnDef)\"\n                  title=\"{{column.isToolTipCol === undefined? '': getProperty(row, column.isToolTipCol)}}\" *ngIf=\"getProperty(row, column.columnDef) !== null &&\n                     getProperty(row, column.columnDef) !== undefined \" class=\"{{column.class}}\">\n                <div>\n                  <span hidden [innerHTML]=\"getProperty(row, column.columnDef)\"></span>\n                </div>\n\n              </ng-container>\n\n              <!-- <ng-container *ngIf=\"column.isAddingText\">\n                    {{ tableOptions.addingText}}\n                  </ng-container> -->\n\n              <ng-container *ngIf=\"column.isAddingText\">\n                {{ column.addingText }} {{ getProperty(row, column.columnDef) }}\n              </ng-container>\n\n              <span *ngIf=\"column.isHyperlink && !column.isToolTip\">\n\n                <ng-container *ngIf=\"column.isTarget; then thenTemplate; else elseTemplate\"></ng-container>\n                <ng-template #thenTemplate>\n                  <div [innerHTML]=\"getProperty(row, column.columnDef)\"></div>\n                </ng-template>\n                <ng-template #elseTemplate>\n                  <a class=\"pointer\" (click)=\"hyperLinkCall(row, column.columnDef)\" [id]=\"getProperty(row, column.columnDef)\">\n                    <span>{{ getProperty(row, column.columnDef)}}</span>\n                  </a>\n                </ng-template>\n              </span>\n              <span *ngIf=\"column.isToolTip && !column.isHyperlink\" matTooltipClass=\"example-tooltip-red\"\n                matTooltip=\"{{ getProperty(row, column.isToolTipCol) }}\">\n                {{ getProperty(row, column.columnDef) }}\n              </span>\n              <span *ngIf=\"column.isHyperlink && column.isToolTip\" matTooltipClass=\"example-tooltip-red\"\n                matTooltip=\"{{ getProperty(row, column.isToolTipCol) }}\">\n                <a class=\"pointer\" (click)=\"hyperLinkCall(row, column.columnDef)\" [id]=\"getProperty(row, column.columnDef)\">\n                  <span>{{ getProperty(row, column.columnDef)}}</span>\n                </a>\n              </span>\n              <span *ngIf=\"column.isfaicon\">\n                <i class=\"{{column.class }}\"\n                  [ngStyle]=\"{color: column.color}\"></i>{{ getProperty(row, column.columnDef) }}\n              </span>\n              <ng-container *ngIf=\"!column.icon && !column.img && !column.isHyperlink &&\n                   !column.isProgressCntrl && !column.isColoredCntrl && !column.hasMultiData && !column.statusicon && !column.isfaicon\n                   && !column.isAddingText  && !column.isToolTip && !column.listView\">\n                {{ getProperty(row, column.columnDef) }}\n              </ng-container>\n            </ng-container>\n          </td>\n        </ng-container>\n        <ng-container matColumnDef=\"action\" *ngIf=\"tableOptions.showAction\" stickyEnd>\n          <th mat-header-cell *matHeaderCellDef class=\"wwbreak\"\n            [ngClass]=\"tableOptions.showAction === true? 'color1' : 'color2' \">\n            <!--<button id=\"gbtn{{tableOptions.title}}\" mat-icon-button [matMenuTriggerFor]=\"gactionMenu\" [disabled]=\"selection.selected.length === 0\"\n              aria-label=\"global action with a menu\">\n              <mat-icon>more_vert</mat-icon>\n            </button>-->Action\n            <mat-menu #gactionMenu=\"matMenu\">\n              <ng-container *ngFor=\"let item of tableOptions.actionMenuItems\">\n                <a id=\"ganch{{item.text}}\" *ngIf=item.isGlobal mat-menu-item (click)=\"globalActionCall(selection.selected, item)\">\n                  <mat-icon *ngIf=item.icon>{{item.icon}}</mat-icon>\n                  <mat-icon *ngIf=!item.icon>arrow_forward_ios</mat-icon>\n                  <span [id]=\"item.text\">{{ item.text }}</span>\n                </a>\n              </ng-container>\n            </mat-menu>\n          </th>\n          <td mat-cell *matCellDef=\"let element\" class=\"wwbreak\"\n            [ngClass]=\"tableOptions.showAction == true? 'color1' : 'color2' \">\n            <button id=\"btn{{tableOptions.id}}\" mat-icon-button  color=\"primary\" [matMenuTriggerFor]=\"actionMenu\" aria-label=\"row action with a menu\"\n              [disabled]=\"selection.selected.length > 0\">\n              <mat-icon>more_vert</mat-icon>\n            </button>\n            <mat-menu #actionMenu=\"matMenu\">\n              <ng-container *ngFor=\"let item of tableOptions.actionMenuItems\">\n                <a id=\"anch{{item.text}}\" *ngIf=\"item.callback && !item.hideLocal\" mat-menu-item (click)=\"actionCall(element, item)\">\n                  <mat-icon *ngIf=item.icon>{{item.icon}}</mat-icon>\n                  <mat-icon *ngIf=!item.icon>arrow_forward_ios</mat-icon>\n                  <span [id]=\"item.text\">{{ item.text }}</span>\n                </a>\n              </ng-container>\n            </mat-menu>\n          </td>\n        </ng-container>\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns; let i = index;\" [ngClass]=\"{hovered: row.hovered, highlighted: row.highlighted}\"\n            (click)=\"rowClick(row, i)\" (mouseover)=\"row.hovered = true\" (mouseout)=\"row.hovered = false\"></tr>\n      </table>\n      <p class=\"ml-2\" *ngIf=\"!dataSource.data || dataSource.data.length === 0\">\n        <span *ngIf=\"tableOptions.loading\">Please wait!</span>\n        <span *ngIf=\"!tableOptions.loading && tableOptions.pageTotal === 0 && !tableOptions.nomsg\">\n          No data available!\n        </span>\n        <span *ngIf=\"!tableOptions.loading && tableOptions.pageTotal === 0 && tableOptions.nomsg\">\n         {{tableOptions.nomsg}}\n        </span>\n      </p>\n    </div>\n    <mat-progress-bar mode=\"indeterminate\" *ngIf=\"tableOptions.loading && dataSource &&  dataSource.data && dataSource.data.length > 25\">\n    </mat-progress-bar>\n    <mat-paginator class=\"mr20 t-paginator\" *ngIf=\"tableOptions.pagination && tableOptions.pageTotal < 10000\"\n    [pageSize]=\"tableOptions.pageSize\" showFirstLastButtons\n      [length]=\"tableOptions.pageTotal\" #paginator [pageSizeOptions]=\"tableOptions.pageOptions\"\n      (page)=\"pageChanged($event)\"></mat-paginator>\n    <mat-paginator class=\"mr20 t-paginator\" *ngIf=\"tableOptions.pagination && tableOptions.pageTotal > 9999\"\n                   [pageSize]=\"tableOptions.pageSize\"\n      [length]=\"tableOptions.pageTotal\" #paginator [pageSizeOptions]=\"tableOptions.pageOptions\"\n      (page)=\"pageChanged($event)\"></mat-paginator>\n  </mat-card-content>\n</mat-card>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {ErrorHandler, Injectable, NgZone} from '@angular/core';\nimport {Injector} from '@angular/core';\nimport {HttpErrorResponse} from '@angular/common/http';\nimport {AuthenticationService} from './authentication.service';\nimport {LoaderService} from './loader.service';\nimport {BaseRequestService} from './base.service';\nimport {CommonService} from './common.services';\nimport {Router} from '@angular/router';\nimport {MyToastrService} from './toastr.service';\n\n@Injectable()\nexport class CustomErrorHandlerService implements ErrorHandler {\n  omitDomains = [];\n  constructor(private injector: Injector, private auth: AuthenticationService, private ngZone: NgZone,\n              private commonService: CommonService, private router: Router,\n              private baseService: BaseRequestService, private toast: MyToastrService,\n              private loaderService: LoaderService) {\n  }\n  handleError(error: any): any {\n    if (error instanceof HttpErrorResponse) {\n      this.loaderService.display(false);\n      this.loaderService.Modeldisplay(false);\n      // Backend returns unsuccessful response codes such as 404, 500 etc.\n      if (error.status === 401) {\n        error = null;\n        localStorage.removeItem('isLoggedin');\n        const path = window.location.pathname;\n        this.auth.isAuthenticated = false;\n        if (path !== '/login') {\n          this.router.navigateByUrl('/login');\n        }\n      } else if (error.status === 403) {\n        this.loaderService.display(false);\n        setTimeout(() => { this.loaderService.display(false); }, 1500);\n        // this.commonService.unauth = 'Unauthorized: Access is denied.';\n        /*console.log('You are not authorized to perform this operation. Please check your role assignments.');*/\n        this.loaderService.tableProgress(false);\n      } else if (error.status === 422) {\n        setTimeout(() => {\n        this.loaderService.display(false); this.loaderService.Modeldisplay(false); }, 1500);\n        error.error.detail.forEach((obj: any) => {\n          this.toast.sToast('error', obj.loc[1] + ' - ' + obj.msg, 'Validation Error');\n        });\n        this.loaderService.tableProgress(false);\n      }  else if (error.status === 500) {\n        setTimeout(() => { this.loaderService.display(false); }, 1000);\n        /*this.updateErrLogs(error);*/\n        this.toast.sToast('error', error.url + '\\r\\n' + error.error, '500 Error');\n        const getCircularReplacer = () => {\n          const seen = new WeakSet();\n          return (key: any, value: object | null) => {\n            if (typeof value === 'object' && value !== null) {\n              if (seen.has(value)) {\n                return;\n              }\n              seen.add(value);\n            }\n            return value;\n          };\n        };\n        let errorLogsData;\n        if (localStorage.getItem('errorLogs') && localStorage.getItem('errorLogs') !== null) {\n          errorLogsData = JSON.parse(localStorage.getItem('errorLogs') || '{}');\n        } else {\n          errorLogsData = [];\n        }\n        const err = JSON.stringify(error, getCircularReplacer());\n        const domain = (typeof error.url === 'string') ? new URL(error.url) : {hostname: ''};\n        let msgSend = true;\n        this.omitDomains.forEach(obj => {\n          if (domain.hostname.indexOf(obj) > -1 ) {\n            msgSend = false;\n          }\n        });\n        if (msgSend) {\n          this.sendSlackMessage(domain.hostname + '\\n```' + err + '```');\n        }\n        errorLogsData.push(err);\n        localStorage.setItem('errorLogs', JSON.stringify(errorLogsData));\n        error = null;\n      }\n    } else {\n      if (error.message.indexOf(':500') > -1) {\n        this.loaderService.display(false);\n        this.loaderService.Modeldisplay(false);\n        this.toast.sToast('error', error.message, '500 Error');\n      }\n      console.log(error);\n      // this.updateErrLogs(error);\n    }\n  }\n  sendSlackMessage(msg: string): void {\n    // this.baseService.doRequest('/api/cyberutils/dummy/sendSlackMsg',\n    //   'post', {message: msg})\n    //   .subscribe((result: any) => {\n    //     console.log('500 error captured!');\n    //   });\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { BaseService } from '../base-service';\nimport { ApiConfiguration } from '../api-configuration';\nimport { StrictHttpResponse } from '../strict-http-response';\nimport { RequestBuilder } from '../request-builder';\nimport { Observable } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\n\nimport { Trailer } from '../models/trailer';\nimport { TrailerGetResp } from '../models/trailer-get-resp';\nimport { AddTrailerParams } from '../models/add-trailer-params';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TrailerService extends BaseService {\n  constructor(\n    config: ApiConfiguration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * Path part for operation getApiTrailerIdGet\n   */\n  static readonly GetApiTrailerIdGetPath = '/api/trailer/{id}';\n\n  /**\n   * Get.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getApiTrailerIdGet()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getApiTrailerIdGet$Response(params: {\n    id: string;\n  }): Observable<StrictHttpResponse<Trailer>> {\n\n    const rb = new RequestBuilder(this.rootUrl, TrailerService.GetApiTrailerIdGetPath, 'get');\n    if (params) {\n      rb.path('id', params.id, {});\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<Trailer>;\n      })\n    );\n  }\n\n  /**\n   * Get.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getApiTrailerIdGet$Response()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getApiTrailerIdGet(params: {\n    id: string;\n  }): Observable<Trailer> {\n\n    return this.getApiTrailerIdGet$Response(params).pipe(\n      map((r: StrictHttpResponse<Trailer>) => r.body as Trailer)\n    );\n  }\n\n  /**\n   * Path part for operation getAllApiTrailerGet\n   */\n  static readonly GetAllApiTrailerGetPath = '/api/trailer';\n\n  /**\n   * Get All.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getAllApiTrailerGet()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getAllApiTrailerGet$Response(params?: {\n\n    /**\n     * Filter query to be executed against database.\n     */\n    'q'?: string;\n    skip?: number;\n    limit?: number;\n    sort?: string;\n\n    /**\n     * Comma seperated list of fields to return.\n     */\n    fields?: string;\n  }): Observable<StrictHttpResponse<TrailerGetResp>> {\n\n    const rb = new RequestBuilder(this.rootUrl, TrailerService.GetAllApiTrailerGetPath, 'get');\n    if (params) {\n      rb.query('q', params['q'], {});\n      rb.query('skip', params.skip, {});\n      rb.query('limit', params.limit, {});\n      rb.query('sort', params.sort, {});\n      rb.query('fields', params.fields, {});\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<TrailerGetResp>;\n      })\n    );\n  }\n\n  /**\n   * Get All.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getAllApiTrailerGet$Response()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getAllApiTrailerGet(params?: {\n\n    /**\n     * Filter query to be executed against database.\n     */\n    'q'?: string;\n    skip?: number;\n    limit?: number;\n    sort?: string;\n\n    /**\n     * Comma seperated list of fields to return.\n     */\n    fields?: string;\n  }): Observable<TrailerGetResp> {\n\n    return this.getAllApiTrailerGet$Response(params).pipe(\n      map((r: StrictHttpResponse<TrailerGetResp>) => r.body as TrailerGetResp)\n    );\n  }\n\n  /**\n   * Path part for operation traileraddTrailerApiTrailerAddTrailerPost\n   */\n  static readonly TraileraddTrailerApiTrailerAddTrailerPostPath = '/api/trailer/addTrailer';\n\n  /**\n   * Traileraddtrailer.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `traileraddTrailerApiTrailerAddTrailerPost()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  traileraddTrailerApiTrailerAddTrailerPost$Response(params: {\n    body: AddTrailerParams\n  }): Observable<StrictHttpResponse<any>> {\n\n    const rb = new RequestBuilder(this.rootUrl, TrailerService.TraileraddTrailerApiTrailerAddTrailerPostPath, 'post');\n    if (params) {\n      rb.body(params.body, 'application/json');\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<any>;\n      })\n    );\n  }\n\n  /**\n   * Traileraddtrailer.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `traileraddTrailerApiTrailerAddTrailerPost$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  traileraddTrailerApiTrailerAddTrailerPost(params: {\n    body: AddTrailerParams\n  }): Observable<any> {\n\n    return this.traileraddTrailerApiTrailerAddTrailerPost$Response(params).pipe(\n      map((r: StrictHttpResponse<any>) => r.body as any)\n    );\n  }\n\n}\n","export { ApiService } from './services/api.service';\nexport { ContentEpisodesService } from './services/content-episodes.service';\nexport { GetMasterClassService } from './services/get-master-class.service';\nexport { ContentPricingService } from './services/content-pricing.service';\nexport { CategoryService } from './services/category.service';\nexport { ContentDataService } from './services/content-data.service';\nexport { TrailerService } from './services/trailer.service';\nexport { UtilitiesService } from './services/utilities.service';\nexport { IdentityProvidersService } from './services/identity-providers.service';\nexport { UsersService } from './services/users.service';\nexport { RolesService } from './services/roles.service';\nexport { ApiClientsService } from './services/api-clients.service';\n","import {SelectionModel} from '@angular/cdk/collections';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport {MatSort} from '@angular/material/sort';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatMenuTrigger} from '@angular/material/menu';\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\nimport {ReplaySubject, Subject} from 'rxjs';\nimport {debounceTime, distinctUntilChanged} from 'rxjs/operators';\nimport {Router} from '@angular/router';\nimport {BaseRequestService} from 'src/app/_services/base.service';\nimport {AuthenticationService} from 'src/app/_services/authentication.service';\nimport {LoaderService} from '../../_services/loader.service';\nimport {FormControl} from '@angular/forms';\nimport {MyToastrService} from '../../_services/toastr.service';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { MasterService } from 'src/app/_services/master.service';\n\n\n@Component({\n  selector: 'app-s-table-new',\n  templateUrl: './table-new.component.html',\n  styleUrls: ['./table-new.component.scss']\n})\nexport class TableNewComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy {\n  @ViewChild(MatSort, { static: false })\n  set sort(value: MatSort) {\n    this.dataSource.sort = value;\n  }\n  constructor(private activeRoute: Router, private loaderService: LoaderService, public masterService: MasterService,\n              private authenticationService: AuthenticationService, public baseService: BaseRequestService,\n              private eRef: ElementRef, public toast: MyToastrService) {\n    this.loaderService.selectedSiteChanged.subscribe(() => {\n      localStorage.removeItem(this.tableOptions.id); this.filterText = '';\n    });\n    this.loaderService.tableProgressOff.subscribe(() => {\n      this.tableOptions.loading = false;\n    });\n    // Debounce search.\n    this.filterUpdate.pipe(\n      debounceTime(1500),\n      distinctUntilChanged())\n      .subscribe(value => {\n        this.isActionChanged = true;\n        this.doFilter(value);\n      });\n\n    this.colfilterUpdate.pipe(\n      debounceTime(1500),\n      distinctUntilChanged())\n      .subscribe(value => {\n        this.doColumFilter(value.value, value.col);\n      });\n  }\n  public assetDrpCtrl: FormControl = new FormControl();\n  public assetDrpFilterCtrl: FormControl = new FormControl();\n  public filterDrpLstFilteredList: ReplaySubject<any> = new ReplaySubject<any>(1);\n  @ViewChild('filterMenuTrigger', {static: false})\n  filterMenuTrigger!: MatMenuTrigger;\n  @ViewChild('listMenuTrigger', {static: false})\n  listMenuTrigger!: MatMenuTrigger;\n  @ViewChild('exportMenuTrigger', {static: false})\n  exportMenuTrigger!: MatMenuTrigger;\n  filterText!: string;\n  currentPageIndex: any;\n  isExport = false;\n  tableId: any;\n  // @ts-ignore\n  @ViewChild(MatPaginator, {static: false}) paginator: MatPaginator;\n  // tslint:disable-next-line:variable-name\n  _sTableOptions: any;\n  isLoading = true;\n  dataSource = new MatTableDataSource<any>();\n  hiddenDataSource = new MatTableDataSource<any>();\n\n  @ViewChild('MAINTABLEDIV', {static: false})\n  tableDiv!: ElementRef;\n\n  @Input() sTableOptions: any;\n  @Input() hideDownload: any;\n  @Output() filterCallback = new EventEmitter();\n  @Output() colFilterCallback = new EventEmitter();\n  @Output() publishCallback = new EventEmitter();\n  @Output() sortCallback = new EventEmitter();\n  @Output() actionCallback = new EventEmitter();\n  @Output() globalActionCallback = new EventEmitter();\n  @Output() pageCallback = new EventEmitter();\n  @Output() refreshCallback = new EventEmitter();\n  @Output() hyperlinkCallback = new EventEmitter();\n  @Output() addCallback = new EventEmitter();\n  @Output() compareCallback = new EventEmitter();\n  @Output() timerCallback = new EventEmitter();\n  @Output() checkBoxCallback = new EventEmitter();\n  @Output() selectionchangeCallback = new EventEmitter();\n  @Output() parentCallback = new EventEmitter();\n  @Output() totalCallback = new EventEmitter();\n  @Output() finalQueryCallback = new EventEmitter();\n  colFilters: any = [];\n  filterValues!: string;\n  filterArray: any = [];\n  selectedTimer = '0';\n  intervalId: any;\n  called = false;\n  cFilter: any = {};\n  colHash: any = {};\n  cFields: any = [];\n  colFilterQuery: any;\n  filterQuery: any;\n  private tmpOption: any;\n  columnsList: string[] = [];\n  cpIndex = 0;\n  tableOptions: any = {\n    id: 'imaws',\n    title: '',\n    isServerSide: true,\n    selectText: 'item(s)',\n    floatingFilter: true,\n    rowSelection: true,\n    loading: true,\n    showAction: false,\n    actionMenuItems: [{ text: 'Details', icon: 'info', callback: 'editFunction', hideLocal: false, isGlobal: false }],\n    pagination: true,\n    pageOptions: [5, 10, 20, 30, 50, 100, 200],\n    pageSize: 5,\n    pageTotal: 0,\n    search: true,\n    showhideList: true,\n    refreshData: true,\n    dropdwn: false,\n    add: false,\n    showColFilter: false,\n    exportExcel: true,\n    compareData: false,\n    publish: false,\n    parentCalls: [],\n    saveData: false,\n    nomsg: 'No data available!',\n    filterDownload: true\n  };\n\n  isMUltiple = true; initSelectedValues = [];\n  selection = new SelectionModel<any>(this.isMUltiple, this.initSelectedValues);\n  numSelected!: number;\n\n  isCompMUltiple = true; initCompSelectedValues = [];\n  compSelection = new SelectionModel<any>(this.isMUltiple, this.initCompSelectedValues);\n  compNumSelected!: number;\n\n  columns = [\n    {\n      columnDef: 'name',\n      header: 'Name',\n      cell: (element: any) => `${element.name}`\n    },\n    {\n      columnDef: 'dateOfBirth',\n      header: 'Date of Birth',\n      filter: 'date', cell: (element: any) => `${element.dateOfBirth}`\n    },\n    {\n      columnDef: 'address',\n      header: 'Address',\n      cell: (element: any) => `${element.address}`\n    }];\n\n  public displayedColumns!: Array<any>;\n  public showhideList!: Array<any>;\n  orderlist!: Array<any>;\n\n  filterUpdate = new Subject<string>();\n  colfilterUpdate = new Subject<any>();\n  settingsObj = [];\n  sessionData: any;\n  searchedColName = ''; colfilter: any = {};\n  pastIndex: any;\n  isPageLoad = true;\n\n  isActionChanged = false;\n  isTablePadding = false;\n  columnsCnt = 0;\n  exportCnt = 0;\n  isExportClick = false;\n\n  hasSelect = false;\n  @HostListener('document:click', ['$event'])\n  clickout(event: any): void {\n    if (this.eRef.nativeElement.contains(event.target)) {\n      if (this.isExportClick) {\n        if (this.exportCnt > 1) {\n          if (this.exportMenuTrigger !== undefined) {\n            this.exportMenuTrigger.closeMenu();\n          }\n          this.exportCnt = 1;\n          this.isExportClick = false;\n        } else {\n          if (this.listMenuTrigger !== undefined) {\n            this.listMenuTrigger.closeMenu();\n          }\n          this.exportCnt++;\n        }\n      } else {\n        if (this.columnsCnt > 1) {\n          if (this.listMenuTrigger !== undefined) {\n            this.listMenuTrigger.closeMenu();\n          }\n          this.columnsCnt = 1;\n        } else {\n          if (this.exportMenuTrigger !== undefined) {\n            this.exportMenuTrigger.closeMenu();\n          }\n          this.columnsCnt++;\n        }\n      }\n    } else {\n      this.columnsCnt = 0;\n      if (this.listMenuTrigger !== undefined) {\n        this.listMenuTrigger.closeMenu();\n      }\n    }\n  }\n  columnFilterxlsx(col: any): void{\n    this.searchedColName = col.columnDef;\n    this.colFilters = [];\n    if(col.columnDef === 'c' || col.columnDef === 'u' || col.released_on){\n      const start = col.dateCol.start.getFullYear() + \"-\" + (col.dateCol.start.getMonth() + 1) + \"-\" + col.dateCol.start.getDate();\n      const end = col.dateCol.end.getFullYear() + \"-\" + (col.dateCol.end.getMonth() + 1) + \"-\" + col.dateCol.end.getDate();\n      this.colFilters.push({key: col.columnDef, name: col.header, value: `form ${start} - to ${end} `, hKey: col.colFilters.hKey, list: col?.list});\n    } else {\n      this.colFilters.push({key: col.columnDef, name: col.header, value: col.val, hKey: col.colFilters.hKey, list: col?.list});\n    }\n    this.processColFilterQuery();\n  }\n  removeFilterxlsx(rFilter: any): void {\n    if (this.sTableOptions.gFilter) {\n      delete this.sTableOptions.gFilter;\n      this.colFilters = [];\n      this.colFilterQuery = [];\n      this.filterQuery = {};\n      this.getCollectionData();\n      return;\n    }\n    this.colFilters.forEach((obj: { key: string | number; }, index: any) => {\n      if (rFilter.key === obj.key) {\n        this.colfilter[obj.key] = '';\n        this.colFilters.splice(index, 1);\n      }\n    });\n    this.processColFilterQuery();\n  }\n  processColFilterQuery(): void {\n    const query = {colFilters: this.colFilters, columns: this.colHash }\n    this.finalQueryCallback.emit(query);\n  }\n  downloadAsXls(type: string): void {\n    this.tmpOption = {...this.sTableOptions};\n    if (!this.sTableOptions.faClass) {\n      this.toast.sToast('error', 'Class name not added.');\n      return;\n    }\n    const dateStr = new Date().toLocaleDateString().replace(/\\//g, '_') + '_'\n      + new Date().toLocaleTimeString().replace(/\\:/g, '_');\n    // const xlsxParam: CompanygetxlsxreportParams = {\n    //   query: '', classname: this.sTableOptions.faClass, fieldmap: [],\n    //   filename: this.sTableOptions.faClass + '_' + dateStr\n    // };\n    for (const col of this.sTableOptions.columns) {\n      // @ts-ignore\n      xlsxParam.fieldmap.push({field: col.columnDef, renameas: col.header});\n    }\n    this.loaderService.display(true, 'Preparing xlsx file...');\n    // tslint:disable-next-line:no-shadowed-variable\n    let query: any = {};\n    delete this.sTableOptions.serverSide.q.query.bool.filter;\n    this.sTableOptions.serverSide.q.query.bool.must.forEach((obj: any, index: number) => {\n      if (obj.bool && obj.bool.should && obj.bool.should[0].match) {\n        this.tmpOption.serverSide.q.query.bool.must.splice(index, 1);\n      } else if (obj.multi_match) {\n        this.tmpOption.serverSide.q.query.bool.must.splice(index, 1);\n      }\n    });\n    query = {...this.tmpOption.serverSide.q};\n    if (this.filterQuery && this.filterQuery.multi_match) { // Global filter\n      query.query.bool.must.push(this.filterQuery);\n    }\n    if (this.colFilterQuery && this.colFilterQuery.length && type !== 'full') { // Multi Column filter\n      query.query.bool.filter = [];\n      this.colFilterQuery.forEach((obj: any) => {\n        if (obj.bool.should[0].match) {\n          query.query.bool.must.push(obj);\n        } else {\n          query.query.bool.filter.push(obj);\n        }\n      });\n    }\n    // xlsxParam.query = JSON.stringify(query);\n    // this.companyService.companygetxlsxreportApiCompanyIdGetxlsxreportPost(\n    //   {id: this.commonService.currentCompany._id, body: xlsxParam}).subscribe((result: any) => {\n    //   this.loaderService.display(false);\n    //   if (result && result.length && result[0]) {\n    //     window.open(result[1], '_blank');\n    //   } else {\n    //     this.toast.sToast('error', result[1]);\n    //   }\n    // });\n  }\n  columnFilter(val: any, col: any): void {\n    this.searchedColName = col;\n    this.colfilterUpdate.next({value: val, col});\n  }\n  removeFilter(filter: any): void {\n    this.colFilters.forEach((obj: { key: string | number; }, index: any) => {\n      if (filter.key === obj.key) { \n        // if(filter.key === 'c' || filter.key === 'u') {\n        //   this.colFilters = this.colFilters.filter((obj: any) => obj.key !== filter.key);\n        //   console.log(this._sTableOptions.columns[filter.key].selectRange);\n        //   this._sTableOptions.columns[filter.key].selectRange = { start: '', end: ''}\n        // } else {\n          this.colfilter[obj.key] = '';\n          this.colFilters.splice(index, 1);\n        // }\n      }\n    });\n    this.colFilterCallback.emit({value: '', col: filter.key});\n  }\n\n  getListProperty(object: any, propertyName: any ): any {\n    let parts: any[]; let property: any;\n    parts = propertyName.split('.'); const length = parts.length;\n    let i: number;\n    property = object[parts[0]];\n    return (property) ? property.map((x: any) => x[parts[1]]) : '';\n  }\n  getProperty(object: any, propertyName: any ): any {\n    let parts: any[]; let property: string;\n    parts = propertyName.split('.'); const length = parts.length;\n    let i: number;\n    property = object;\n    for ( i = 0; i < length; i++ ) {\n      // @ts-ignore\n      property = (property[parts[i]]) ? property[parts[i]] : (typeof(property[parts[i]]) === 'number') ? property[parts[i]] : '';\n    }\n    return property;\n  }\n\n  rowClick(row: any, index: any): void {\n    if (row._id) {\n      this.dataSource.data.forEach(obj => {\n        obj.highlighted = (obj._id === row._id);\n      });\n    } else {\n      if (this.pastIndex !== undefined) {\n        this.dataSource.data[this.pastIndex].highlighted = false;\n      }\n      this.pastIndex = index;\n      this.dataSource.data[index].highlighted = !this.dataSource.data[index].highlighted;\n    }\n  }\n\n  /*getProperty = (obj, path) => (\n    path.split('.').reduce((o, p) => o && o[p], obj)\n  )*/\n\n  getCustomText(obj: any): any {\n    // @ts-ignore\n    const customText = this.sTableOptions.customText.filter(x => x.status === obj);\n    if (customText.length > 0) {\n      return customText[0].DisplayText;\n    }\n  }\n  // getCustomColor(obj) {\n  //   const customText = this.sTableOptions.customText.filter(x => x.status == obj);\n  //   if (customText.length > 0) {\n  //     return { 'background-color': customText[0].color };\n  //   }\n  //   return { 'background-color': '#ffffff' };\n  // }\n\n  getCustomColor(obj: any): any {\n    const customText = this.sTableOptions.customText.filter((x: any) => x.status === obj);\n    if (customText.length > 0) {\n      return (customText[0]['text-color'])\n        ? {'background-color': customText[0].color, color: customText[0]['text-color']}\n        : {'background-color': customText[0].color};\n    }\n    return { 'background-color': '#ffffff' };\n  }\n\n  getIconPath(obj: any, path: any): any {\n    if (this.getProperty(obj, path.columnDef) === path.success) {\n      return path.successIconPath !== undefined ? path.successIconPath : 'assets/images/devices/online.svg';\n    } else {\n      return path.failureIconPath !== undefined ? path.failureIconPath : 'assets/images/devices/offline.svg';\n    }\n  }\n\n  getIconTooltip(obj: any, path: any): any {\n    if (this.getProperty(obj, path.columnDef) === path.success) {\n      return path.successToolTip !== undefined ? path.successToolTip : 'Online';\n    } else {\n      return path.failureToolTip !== undefined ? path.failureToolTip : 'Offline';\n    }\n  }\n\n  drop(event: CdkDragDrop<string[]>): any {\n    this.isActionChanged = true;\n    moveItemInArray(this.showhideList, event.previousIndex, event.currentIndex);\n\n    for (let idx = event.previousIndex; idx >= event.currentIndex; idx--) {\n      this.showhideList[idx].order = idx;\n    }\n    // this.showhideList[event.previousIndex].order = event.previousIndex;\n    // this.showhideList[event.currentIndex].order = event.currentIndex;\n    this.initUpdateData();\n  }\n\n  actionCall(row: any, action: any): void {\n    delete row.highlighted; delete row.hovered;\n    const resp = { row, action };\n    if (this.tableOptions.showAction && this.tableOptions.actionMenuItems.length > 0) {\n      this.actionCallback.emit(resp);\n    }\n  }\n\n  globalActionCall(row: any, action: any): void {\n    delete row.highlighted; delete row.hovered;\n    const resp = { row, action };\n    if (this.tableOptions.showAction && this.tableOptions.actionMenuItems.length > 0) {\n      this.globalActionCallback.emit(resp);\n    }\n  }\n\n  hyperLinkCall(row: any, col?: any): any {\n    delete row.highlighted; delete row.hovered;\n    const event = { row, col };\n    this.hyperlinkCallback.emit(event);\n  }\n\n  ngOnChanges(changes: SimpleChanges): any {\n    const sTableOptions: SimpleChange = changes.sTableOptions;\n    this._sTableOptions = sTableOptions.currentValue;\n    // if (!sTableOptions.firstChange) {\n    this.initUpdateData();\n    // }\n  }\n\n  ngOnInit(): void {\n    this.tmpOption = {...this.sTableOptions};\n    this.colHash = {};\n    for (const c of this.tmpOption.columns) {\n      this.columnsList.push(c.columnDef);\n      this.colHash[c.columnDef] = c;\n      if (c.colFilters && c.colFilters.hKey) {\n        this.cFields.push(c.columnDef);\n      }\n    }\n  }\n  ngOnDestroy(): void {\n    this.isPageLoad = false;\n\n    if (this.intervalId !== undefined && this.intervalId !== null) {\n      clearInterval(this.intervalId);\n    }\n  }\n\n  initUpdateData(): void {\n    this.tableOptions = Object.assign(this.tableOptions, this._sTableOptions.tableOptions);\n    this.isPageLoad = (this.sTableOptions.overridePageLoad) ? false : this.isPageLoad;\n    const filterK = localStorage.getItem(this.tableOptions.id);\n    if ( filterK && filterK !== '') {\n      this.filterText = filterK;\n      if (!this.called) { setTimeout(() => { localStorage.removeItem(this.tableOptions.id);\n                                             this.doFilter(this.filterText); this.called = true; }, 2000); }\n    }\n    if (this.isPageLoad && !this.tableOptions.pageTotal ) {\n      // this.loaderService.display(true, 'Getting TableSettings data');\n      const query = {query: {bool: {must: [ {exists: {field: 'tableId'}}, {exists: {field: 'columnRepr'}},\n            {match: {'tableId.keyword': this.tableOptions.id}},\n              {match: {'userId.keyword': this.authenticationService.currentUser?.email}}]}}};\n      const q = JSON.stringify(query);\n      const skip = 0;\n      const limit = 1;\n      // this.tableSettingsService.getAllApiTablesettingsGet({q, skip, limit}).subscribe((result: any) => {\n      //     this.loaderService.display(false);\n      //     if (result && result.data && result.data.length) {\n      //       this.sessionData = result.data[0];\n      //       try {\n      //         const savedCols = JSON.parse(result.data[0].columnRepr);\n      //         if (result.data[0].columnRepr && savedCols.length === this._sTableOptions.columns.length) {\n      //           this._sTableOptions.columns = savedCols;\n      //         }\n      //       } catch (e) {\n      //         e = null;\n      //       }\n      //       this.selectedTimer = result.data[0].refreshInterval + '';\n      //       this._sTableOptions.sortOptions.direction = (result.data[0].settings.sortOptions.direction === '')\n      //         ? 'asc' : result.data[0].settings.sortOptions.direction;\n      //       this._sTableOptions.tableOptions.pageSize =  result.data[0].settings.pageSize;\n      //       if (result.data[0].settings.pageSize !== this.tableOptions.pageSize) {\n      //         setTimeout(() => this.RefreshTableData(), 2000);\n      //       }\n      //       this.tableOptions.pageSize = result.data[0].settings.pageSize;\n      //       this.setTableOptions(this._sTableOptions.tableOptions);\n      //     }\n      // });\n    } else {\n      this.clearSelection();\n      this.setTableOptions(this.tableOptions);\n    }\n    if (this.isPageLoad) {\n      this.isPageLoad = false;\n    }\n  }\n\n  setTableOptions(tblOptions: any): any {\n    this.displayedColumns = [];\n    this.orderlist = [];\n    this.showhideList = this._sTableOptions.columns;\n\n    this._sTableOptions.columns.map((c: any) => {\n      if (c.visible) {\n        this.displayedColumns.push(c.columnDef);\n        this.orderlist.push(c);\n      }\n    });\n\n    if (tblOptions.compareData) {\n      this.displayedColumns.push('compare');\n    }\n\n    if (tblOptions.showAction) {\n      this.displayedColumns.push('action');\n    }\n\n    if (tblOptions.rowSelection) {\n      this.displayedColumns.unshift('select');\n    }\n\n    this.dataSource.data = this._sTableOptions.pageData;\n    if (this.sort) {\n      this.dataSource.sort = this.sort;\n    }\n\n    this.dataSource.sortingDataAccessor = (data: any, sortHeaderId: string): string => {\n      if (typeof data[sortHeaderId] === 'string') {\n        return data[sortHeaderId].toLocaleLowerCase();\n      }\n      return data[sortHeaderId];\n    };\n\n    if (!tblOptions.isServerSide) {\n      this.dataSource.paginator = this.paginator;\n    }\n    this.filterArray = this.dataSource.filteredData;\n  }\n\n  // GetFinalColumns(savedColumns, definedColumns) {\n  //   const finalcols = [];\n  //   if (savedColumns.length >= definedColumns.length) {\n  //     savedColumns.forEach(sCol => {\n  //       try {\n  //         for (let dCol = 0; dCol < definedColumns.length; dCol++) {\n  //           if (sCol.columnDef == definedColumns[dCol].columnDef) {\n  //             finalcols.push(sCol);\n  //             break;\n  //           }\n  //           if (dCol == definedColumns.length - 1) {\n  //             finalcols.push(definedColumns[dCol]);\n  //           }\n  //         }\n  //       } catch (e) {\n  //         e = null;\n  //       }\n  //     });\n  //   } else if (definedColumns.length > savedColumns.length) {\n  //     definedColumns.forEach(dCol => {\n  //       for (let sCol = 0; sCol < savedColumns.length; sCol++) {\n  //         try {\n  //           if (dCol.columnDef == savedColumns[sCol].columnDef) {\n  //             finalcols.push(savedColumns[sCol]);\n  //             break;\n  //           }\n  //           if (sCol == savedColumns.length - 1) {\n  //             finalcols.push(dCol);\n  //           }\n  //         } catch (e) {\n  //           e = null;\n  //         }\n  //       }\n  //     });\n  //   }\n  //   return finalcols;\n  // }\n\n  GetFinalColumns(savedColumns: any, definedColumns: any): any {\n    // @ts-ignore\n    definedColumns.forEach(obj => {\n      // @ts-ignore\n      return savedColumns.forEach(obj1 => {\n        if (obj1.columnDef === obj.columnDef) {\n          obj.visible = obj1.visible;\n          obj.order = obj1.order;\n        }\n      });\n    });\n    try {\n      // @ts-ignore\n      definedColumns = definedColumns.sort((a, b) => (a.order > b.order) ? 1 : -1);\n    } catch (e) {\n      e = null;\n    }\n    return definedColumns;\n  }\n\n\n  showHideColumn(i: any, val: any): void {\n    val.visible = !val.visible;\n    const index = this.orderlist.findIndex(x => x.columnDef === val.columnDef);\n    if (index >= 0) {\n      this.orderlist.splice(index, 1);\n    } else {\n      this.orderlist.push(val);\n    }\n    this.displayedColumns = [];\n    this.orderlist = this.orderlist.sort((a, b) => a.order - b.order);\n\n    if (this.tableOptions.compareData) {\n      this.displayedColumns.push('compare');\n    }\n\n    if (this.tableOptions.rowSelection) {\n      this.displayedColumns.push('select');\n    }\n\n    this.orderlist.forEach(element => {\n      this.displayedColumns.push(element.columnDef);\n    });\n    if (this.tableOptions.showAction) {\n      this.displayedColumns.push('action');\n    }\n    this.isActionChanged = true;\n    this.initUpdateData();\n  }\n\n  ngAfterViewInit(): void {\n    this.isLoading = false;\n    setTimeout( () => { this.initUpdateData(); });\n  }\n\n  pageChanged(event: any): void {\n    this.isActionChanged = true;\n    this.currentPageIndex = event.pageIndex;\n    this.cpIndex = event.pageIndex;\n    this.tableOptions.pageSize = event.pageSize;\n    if (this.tableOptions.isServerSide) {\n      this.pageCallback.emit(event);\n    }\n  }\n\n  RefreshTableData(): void {\n    this.refreshCallback.emit();\n  }\n  getCollectionData(): void {\n    this.sTableOptions.dataList = [];\n    this.loaderService.display(true, this.sTableOptions.lMsg);\n    // tslint:disable-next-line:no-shadowed-variable\n    let query: any = {};\n    delete this.tmpOption.serverSide.q.query.bool.filter;\n    this.tmpOption.serverSide.q.query.bool.must.forEach((obj: any, index: number) => {\n      if (obj.bool && obj.bool.should && obj.bool.should[0].match) {\n        this.tmpOption.serverSide.q.query.bool.must.splice(index, 1);\n      } else if (obj.multi_match) {\n        this.tmpOption.serverSide.q.query.bool.must.splice(index, 1);\n      }\n    });\n    query = {...this.tmpOption.serverSide.q};\n    \n    if (this.filterQuery && this.filterQuery.multi_match) { // Global filter\n      query.query.bool.must.push(this.filterQuery);\n    }\n    if (this.colFilterQuery && this.colFilterQuery.length) { // Multi Column filter\n      this.colFilterQuery.forEach((obj: any) => {\n        if (obj.bool && obj.bool.should[0].match) {\n          query.query.bool.must.push(obj);\n        } else if(obj.must){\n          query.query.bool.must.push(obj.must[0])\n        } else if(!(obj.bool && obj.bool.should[0].match) && !obj.must) {\n          query.query.bool.filter = [];\n          query.query.bool.filter.push(obj);\n        }\n      });\n    }\n    const q = JSON.stringify(query);\n    const skip = this.cpIndex;\n    const limit = this.sTableOptions.pSize;\n    const sort = JSON.stringify(this.sTableOptions.serverSide.sort);\n    this.sTableOptions.loading = true; // @ts-ignore\n    this.masterService[this.tmpOption.serverSide.service][this.tmpOption.serverSide.fn]({q, skip, limit, sort})\n      .subscribe((result: any) => {\n        this.sTableOptions.loading = false;\n        this.loaderService.display(false);\n        this.sTableOptions.dataList = result.data;\n        this.sTableOptions.pTotal = result.total;\n        this.initiateTable(result.data);\n      });\n  }\n\n  initiateTable(dataList: any): void {\n    const cols = dataList\n      // tslint:disable-next-line:no-shadowed-variable\n      .reduce((cols: any, row: {}) => {\n        return [...cols, ...Object.keys(row)];\n      }, [])\n      // tslint:disable-next-line:no-shadowed-variable\n      .reduce((cols: string | any[], column: any) => {\n        return cols.includes(column)\n          ? cols\n          : [...cols, column];\n      }, []);\n    // Describe the columns for <mat-table>.\n    /*this.columns = cols.map((column: string | number) => {\n      return {\n        columnDef: column,\n        header: (this.colHash[column]) ? this.colHash[column].header : column,\n        cell: (element: any) => `${element[column] ? element[column] : ``}`,\n        ...this.colHash[column]\n      };\n    });*/\n    this.displayedColumns = this.columnsList.slice();\n    this.dataSource = new MatTableDataSource<any>(dataList);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.totalCallback.emit({value: this.sTableOptions.pTotal, id: this.sTableOptions.id});\n  }\n  openListColumns(): void {\n    this.isExportClick = false;\n    this.columnsCnt++;\n    if (this.columnsCnt > 1) {\n      this.columnsCnt = 1;\n    }\n  }\n\n  timerCallData(): void  {\n    // this.listMenuTrigger.closeMenu();\n    clearInterval(this.intervalId);\n    this.intervalId = undefined;\n\n    if (this.selectedTimer !== undefined && Number(this.selectedTimer) !== 0) {\n      clearInterval(this.intervalId);\n      this.intervalId = setInterval(() => {\n        this.timerCallback.emit(this.selectedTimer);\n      }, Number(this.selectedTimer) * 1000);\n    }\n\n  }\n  filterDrpLstChange(data: any): void {\n    console.log(data);\n    this.selectionchangeCallback.emit(data);\n  }\n\n  ParentCalls(id: any): void {\n    this.parentCallback.emit(id);\n  }\n\n  AddTableRecord(): void {\n    // this.listMenuTrigger.closeMenu();\n    this.addCallback.emit();\n  }\n  publish(): void {\n    this.publishCallback.emit();\n  }\n  CompareData(row: any): any {\n    if (row.length <= 1) {\n      this.toast.sToast('info', 'Two files requires to compare');\n      return false;\n    }\n    if (row.length > 2) {\n      this.toast.sToast('info', 'It not allow to compare more than 2 records');\n      return false;\n    }\n    const resp = { row };\n    this.compareCallback.emit(resp);\n  }\n\n  clearSelection(): void {\n    this.selection.clear();\n    // @ts-ignore\n    this.numSelected = undefined;\n  }\n  clearCompCompareSelection(): void {\n    this.compSelection.clear();\n    // @ts-ignore\n    this.compNumSelected = undefined;\n  }\n\n  isAllSelected(): any {\n    this.numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    if (this.sTableOptions.tableOptions.isCheckboxSelection) {\n      this.checkBoxCallback.emit(this.selection.selected);\n    }\n    return this.numSelected === numRows;\n  }\n\n  isAllCompSelected(): any {\n    this.compNumSelected = this.compSelection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return this.compNumSelected === numRows;\n  }\n\n  masterToggle(): void {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n    if (this.sTableOptions.tableOptions.isCheckboxSelection) {\n      this.checkBoxCallback.emit(this.selection.selected);\n    }\n  }\n\n  rowToggle(row: any): void {\n    this.selection.toggle(row);\n    if (this.sTableOptions.tableOptions.isCheckboxSelection) {\n      this.checkBoxCallback.emit(this.selection.selected);\n    }\n  }\n\n  masterCompToggle(): void {\n    this.isAllCompSelected() ?\n      this.compSelection.clear() :\n      this.dataSource.data.forEach(row => this.compSelection.select(row));\n  }\n\n  customSort(event: any): void {\n    // console.log(this._sTableOptions.sortOptions);\n    // {active: 'name', direction: 'asc'}\n    this._sTableOptions.sortOptions = event;\n    if (this.tableOptions.isServerSide && event.direction !== '') {\n      this.sortCallback.emit(event);\n    }\n  }\n  exportAllData(): void {\n    const keymap = {};\n    // @ts-ignore\n    this._sTableOptions.columns.forEach(obj => {\n      // @ts-ignore\n      keymap[obj.columnDef] = obj.header;\n    });\n    // @ts-ignore\n    keymap._id = (keymap._id) ? keymap._id : '_id';\n    this.loaderService.display(true);\n    const name =  (this.tableOptions.title !== '' ) ? this.tableOptions.title.replace(/[^A-Z0-9]/ig, '_') : 'Report';\n    this.baseService.doRequest('/api/standardreports/generateReport', 'post',\n      { query: this._sTableOptions.query, keyMap: keymap, name }).subscribe((result: any) => {\n        this.loaderService.display(false);\n        if (result) {\n          window.open(result.msg, '_blank');\n        } else {\n          this.toast.sToast('error', result.msg);\n        }\n      }, () => {\n        this.loaderService.display(false);\n      });\n  }\n\n  SaveSettings(): void {\n    let item: any; item = {\n      tableId: this._sTableOptions.tableOptions.id,\n      userId: this.authenticationService.currentUser?.email,\n      columnRepr: JSON.stringify(this._sTableOptions.columns),\n      refreshInterval: +this.selectedTimer,\n      settings: {\n        filterText: this.filterText,\n        gFilter: this._sTableOptions.gFilter ? this._sTableOptions.gFilter : [],\n        sortOptions: this._sTableOptions.sortOptions,\n        pageSize: this._sTableOptions.tableOptions.pageSize\n      }\n    };\n    item.settings.sortOptions.direction = (this._sTableOptions.sortOptions.direction === '')\n      ? 'asc' : this._sTableOptions.sortOptions.direction;\n    const method = (this.sessionData && this.sessionData._id) ? 'put' : 'post';\n    if (this.sessionData && this.sessionData._id) { item._id = this.sessionData._id; }\n    this.baseService.doRequest(`/api/tablesettings/`, method, item).subscribe((res: any) => {\n      if (res && res._id && res.c !== null && res.u !== null) {\n        this.toast.sToast('success', 'Successfully updated!');\n      } else {\n        this.toast.sToast('error', res._id);\n      }\n    });\n\n    /*const method = this.tableId ? 'put' : 'post';\n    const url = this.tableId ? `/api/user_settings/${this.tableId}` : `/api/user_settings`;\n    this.baseService.doRequest(url, method, {\n      tablename: this.tableOptions.id.toLowerCase(),\n      // @ts-ignore\n      username: this.authenticationService.currentUser._id,\n      userdata: JSON.stringify(_settings)\n    }).subscribe((result: any) => {\n      if (result) {\n        this.sessionData = [];\n        this.toast.sToast('success', 'Settings updated');\n        this.sessionData = JSON.parse(result.msg[0].userdata);\n      } else {\n        this.toast.sToast('error', result.msg);\n      }\n    });*/\n  }\n  doFilter = (value: string) => {\n    // this.isActionChanged = true;\n    localStorage.setItem(this.tableOptions.id, value);\n    if (this.tableOptions.isServerSide) {\n      this.filterCallback.emit(value);\n    } else {\n      this.dataSource.filter = value.trim().toLocaleLowerCase();\n    }\n  }\n  \n  doColumFilter = (value: any, col: string): any => {\n    if (this.tableOptions.isServerSide) {\n      // @ts-ignore\n      if (this.colFilters.filter(x => x.key === col).length > 0) {\n        // @ts-ignore\n        this.colFilters.forEach((obj, index) => {\n          if (col === obj.key && value === '') {\n            this.colFilters.splice(index, 1);\n          } else {\n            obj.value = value;\n          }\n        });\n      } else {\n        if (value === '') { return false; }\n        const colName = this._sTableOptions.columns.filter((x: any) => x.columnDef === col)[0].header;\n        if(typeof value === \"object\" ){\n          const start = new Date(value.start);\n          const end = new Date(value.end);\n          this.colFilters.push({key: col, name: colName, value: start.getFullYear() + \"-\" + (\"0\"+(start.getMonth()+1)).slice(-2) + \"-\" + (\"0\"+start.getDate()).slice(-2)});\n          this.colFilters.push({key: col, name: colName, value: end.getFullYear() + \"-\" + (\"0\"+(end.getMonth()+1)).slice(-2) + \"-\" + (\"0\"+end.getDate()).slice(-2)});\n        }else{\n          this.colFilters.push({key: col, name: colName, value});\n        }\n      }\n      this.colFilterCallback.emit({value, col});\n    } else {\n      this.filterValues = value.toLowerCase();\n      this.dataSource.data = this.filterArray.filter((row: any) => row[this.searchedColName].toLowerCase().includes(this.filterValues));\n    }\n  }\n}\n","<!--suppress TypeScriptUnresolvedVariable -->\n<mat-card *ngIf=\"isLoading\">\n  <mat-card-content>\n    <p> <i class=\"fa fa-spin fa-spinner fa-lg\"></i> Loading...</p>\n  </mat-card-content>\n</mat-card>\n<mat-card class=\"table-card ibtn\" *ngIf=\"!isLoading\">\n  <mat-toolbar class=\"table-tools\" role=\"heading\" *ngIf=\"selection.selected.length === 0\">\n    <span class=\"mat-title mb0f\"> {{tableOptions.title}} <span class=\"fw300\" *ngIf=\"tableOptions.pageTotal !== 0 && tableOptions.title !== '' \">\n      ({{tableOptions.pageTotal}}) </span></span>\n    <button class=\"px-1 lh-25\" mat-stroked-button *ngIf=\"tableOptions.add\" type=\"button\"  matTooltip=\"Add New Record\"  color=\"primary\"\n          (click)=\"AddTableRecord()\" id =\"addbtn{{tableOptions.title}}\">\n      <mat-icon class=\"mat-18 mb-1\">add</mat-icon> Add\n    </button>\n    <div fxFlex fxLayout fxLayoutAlign=\"end\" *ngIf=\"tableOptions.floatingFilter\">\n      <div fxLayout fxLayoutGap=\"15px\" class=\"navigation-items\">\n        <form fxLayout=\"row\" fxLayoutAlign=\"center center\">\n            <mat-form-field class=\"pl20\" style=\"padding: 10px;font-size: 15px;\" *ngIf= \"tableOptions.dropdwn\">\n                <mat-select [multiple]=\"false\"\n                  placeholder=\"Asset\"\n                  (selectionChange)=\"filterDrpLstChange($event.value)\" [formControl]=\"assetDrpCtrl\">\n                  <mat-option *ngFor=\"let item of tableOptions.filterDrpLstFilteredList\"\n                    [value]=\"item._id\">\n                    {{item.ip}}\n                  </mat-option>\n                </mat-select>\n              </mat-form-field>\n          <!--<div fxFlex fxLayout fxLayoutAlign=\"end\" *ngIf=\"tableOptions.add\"></div>-->\n          <mat-form-field floatLabel=\"never\" class=\"search-tool\" *ngIf=\"tableOptions.search\">\n            <input matInput class=\"form-control mat-small\" [(ngModel)]=\"filterText\" type=\"text\" trim=\"blur\" name=\"filterText\"\n              [id]=\"tableOptions.id\" (ngModelChange)=\"filterUpdate.next($event)\" placeholder=\"Search\">\n            <button class=\"gray\" matSuffix mat-icon-button *ngIf=\"filterText === ''\" color=\"primary\" >\n              <mat-icon>search</mat-icon>\n            </button>\n            <button class=\"gray\" matSuffix mat-icon-button *ngIf=\"filterText && filterText !== ''\"\n              (click)=\"filterText = ''; doFilter(filterText);\" color=\"primary\" >\n              <mat-icon>close</mat-icon>\n            </button>\n          </mat-form-field>\n          <div fxFlex fxLayout fxLayoutAlign=\"end\" *ngIf=\"tableOptions.refreshData\">\n            <button class=\"gray\" matSuffix mat-icon-button matTooltip=\"Reload Table Data\" (click)=\"RefreshTableData();\"\n                    color=\"primary\" >\n              <mat-icon id=\"rfrbtn{{tableOptions.title}}\">refresh</mat-icon>\n            </button>\n          </div>\n          <div *ngIf=\"tableOptions.refreshData\">\n            <mat-form-field style=\"font-size: 14px;width: 61px\">\n              <mat-label>Every</mat-label>\n              <mat-select [(value)]=\"selectedTimer\" (selectionChange)=\"timerCallData()\"\n                matTooltip=\"Refresh Interval\">\n                <mat-option value=\"0\" selected></mat-option>\n                <mat-option value=\"60\" id=\"RefreshOnemin\">1 Min</mat-option>\n                <mat-option value=\"300\" id=\"RefreshFivemin\">5 Min</mat-option>\n                <mat-option value=\"1800\" id=\"RefreshThirtymin\">30 Min</mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n          <button mat-icon-button menuOpen=\"false\" matTooltip=\"Filter List\"\n                  *ngIf=\"tableOptions.showColFilter && _sTableOptions.columns && _sTableOptions.columns.length\"\n                  [matMenuTriggerFor]=\"filterMenu\" #filterMenuTrigger=\"matMenuTrigger\">\n            <mat-icon>filter_list</mat-icon></button>\n          <!-- <mat-menu #filterMenu=\"matMenu\" class=\"col-filters\">\n            <mat-card class=\"filter-card\" (click)=\"$event.stopPropagation();\">\n              <mat-card-header>\n                <mat-card-title>Filter</mat-card-title>\n              </mat-card-header>\n              <mat-card-content>\n                <form>\n                  <ng-container *ngFor=\"let column of _sTableOptions.columns\">\n                    <mat-form-field *ngIf=\"column.iscolumnSearch\" class=\"\" appearance=\"outline\">\n                      <input matInput type=\"text\" trim=\"blur\" [id]=\"column.id\" placeholder=\"Search {{column.header}}\"\n                             *ngIf=\"!column.selectFilter && !column.israngeSearch\" name=\"{{column.columnDef}}\" [(ngModel)]=\"colfilter[column.columnDef]\"\n                        (input)='columnFilter($any($event.target).value,column.columnDef)'\n                        [disabled]=\"(column.iscolumnSearch === undefined || column.iscolumnSearch===null) ? 'false' : !column.iscolumnSearch \" />\n                      <mat-select placeholder=\"Choose {{column.header}} value\" name=\"{{column.columnDef}}\"\n                                  *ngIf=\"column.selectFilter\" [(ngModel)]=\"colfilter[column.columnDef]\"\n                                  [disabled]=\"(column.iscolumnSearch === undefined || column.iscolumnSearch===null) ? 'false' : !column.iscolumnSearch \"\n                      (selectionChange)= \"columnFilter($event.value, column.columnDef)\">\n                        <mat-option value=\"\">All</mat-option>\n                        <mat-option *ngFor=\"let val of column.selectFilterArr\" [value]=\"val.value\" [id]=\"val.id\">{{val.name}}</mat-option>\n                      </mat-select>\n                      <ng-container *ngIf=\"column.israngeSearch\">\n                        <mat-label>Choose {{column.header}} start to end date </mat-label>\n                        <mat-date-range-input [rangePicker]=\"rangePicker\">\n                          <input matStartDate name=\"start\" placeholder=\"Start date\" [(ngModel)]=\"column.selectRange.start\"/>\n                          <input matEndDate name=\"end\" placeholder=\"End date\" [(ngModel)]=\"column.selectRange.end\"/>\n                        </mat-date-range-input>\n                        <mat-datepicker-toggle matSuffix [for]=\"rangePicker\"></mat-datepicker-toggle>\n                        <mat-date-range-picker #rangePicker>\n                          <mat-date-range-picker-actions>\n                            <button mat-button matDateRangePickerCancel (click)= \"column.selectRange.start=column.selectRange.end='' \">Cancel</button>\n                            <button mat-raised-button color=\"primary\" matDateRangePickerApply (click)=\"columnFilter(column.selectRange, column.columnDef)\">Apply</button>\n                          </mat-date-range-picker-actions>\n                        </mat-date-range-picker>\n                      </ng-container>\n                    </mat-form-field>\n                  </ng-container>\n                </form>\n              </mat-card-content>\n            </mat-card>\n          </mat-menu> -->\n          <mat-menu #filterMenu=\"matMenu\" class=\"col-filters\">\n            <mat-card class=\"filter-card\" (click)=\"$event.stopPropagation();\">\n              <mat-card-header>\n                <mat-card-title>Filter</mat-card-title>\n              </mat-card-header>\n              <mat-card-content>\n                <form #filterForm=\"ngForm\" role=\"form\">\n                  <mat-form-field *ngIf=\"sTableOptions.columns && sTableOptions.columns.length\" class=\"w-100\" appearance=\"outline\">\n                    <mat-label>Choose filter column</mat-label>\n                    <mat-select placeholder=\"Choose filter column\" name=\"chooseFilter\" required [(ngModel)]=\"cFilter.selectedCol\">\n                      <mat-option value=\"\">Choose filter column</mat-option>\n                      <ng-container *ngFor=\"let val of _sTableOptions.columns\">\n                        <mat-option *ngIf=\"val.iscolumnSearch\" [value]=\"val.columnDef\" [id]=\"val.header\">{{val.header}}</mat-option>\n                      </ng-container>\n                    </mat-select>\n                  </mat-form-field>\n                  <mat-form-field *ngIf=\"cFilter.selectedCol\" class=\"w-100\" appearance=\"outline\">\n                    <mat-label>Search {{colHash[cFilter.selectedCol].header}}</mat-label>\n                    <input matInput type=\"text\" trim=\"blur\" *ngIf=\"colHash[cFilter.selectedCol].colFilters.type === 'text'\"\n                           placeholder=\"Search {{colHash[cFilter.selectedCol].header}}\" required\n                            name=\"{{colHash[cFilter.selectedCol].col}}s\" [(ngModel)]=\"colHash[cFilter.selectedCol].val\" >\n                    <mat-select placeholder=\"Search {{colHash[cFilter.selectedCol].header}}\" name=\"{{colHash[cFilter.selectedCol].col}}s\"\n                                *ngIf=\"colHash[cFilter.selectedCol].colFilters.type === 'select'\" required\n                                [(ngModel)]=\"colHash[cFilter.selectedCol].val\">\n                      <mat-option *ngFor=\"let val of colHash[cFilter.selectedCol].colFilters.options\" [value]=\"val.value\">{{val.name}}</mat-option>\n                    </mat-select>\n                    <ng-container *ngIf=\"colHash[cFilter.selectedCol].colFilters.type === 'range'\">\n                     <!-- <mat-date-range-input [rangePicker]=\"picker\">\n                        <input matStartDate name=\"startDate\" [(ngModel)]=\"colHash[cFilter.selectedCol].start\"\n                               placeholder=\"Start date\">\n                        <input matEndDate name=\"startDate\" [(ngModel)]=\"colHash[cFilter.selectedCol].end\"\n                               placeholder=\"End date\">\n                      </mat-date-range-input>\n\n                      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                      <mat-date-range-picker #picker></mat-date-range-picker> -->\n                      <!-- (dateChange)=\"changeEvent($event)\" -->\n                      <mat-form-field>\n                        <input matInput [matDatepicker]=\"picker1\" required [(ngModel)]=\"colHash[cFilter.selectedCol].dateCol.start\" placeholder=\"From Date\" name=\"dtInpt1\">\n                        <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n                        <mat-datepicker #picker1></mat-datepicker>\n                      </mat-form-field>\n                      <mat-form-field>\n                        <input matInput [matDatepicker]=\"picker2\" required [(ngModel)]=\"colHash[cFilter.selectedCol].dateCol.end\" placeholder=\"To Date\" name=\"dtInpt\">\n                        <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\n                        <mat-datepicker #picker2></mat-datepicker>\n                      </mat-form-field>\n                    </ng-container>\n                  </mat-form-field>\n                  <button (click)=\"columnFilterxlsx(colHash[cFilter.selectedCol])\" [disabled]=\"!filterForm.form.valid\"\n                          color=\"primary\" mat-raised-button=\"\">Add Filter</button>\n                   <button class=\"ml-2\" (click)=\"cFilter.selectedCol = ''\"  mat-stroked-button=\"\">Clear</button>\n                </form>\n              </mat-card-content>\n            </mat-card>\n          </mat-menu>\n          <button mat-icon-button menuOpen=\"false\" (click)=\"openListColumns()\" #listMenuTrigger=\"matMenuTrigger\"\n            [matMenuTriggerFor]=\"belowMenu\" color=\"primary\" id=\"view{{tableOptions.id}}\" matTooltip=\"View Column, Reorder Columns\"  *ngIf=\"tableOptions.showhideList\">\n            <mat-icon>view_column</mat-icon>\n          </button>\n          <mat-menu #belowMenu=\"matMenu\" [hasBackdrop]=\"false\" yPosition=\"below\">\n            <!-- <div *ngFor=\"let item of showhideList; let i = index\"\n                  style=\"padding: 5px;overflow: hidden;font-family: Arial, Helvetica, sans-serif\">\n                  <mat-checkbox color=\"primary\" [checked]=\"item.visible==true?item:''\" (click)=\"$event.stopPropagation()\"\n                    (change)=\"showHideColumn(i, item)\">\n                  </mat-checkbox>\n                  {{item.header}}\n                </div> -->\n            <div cdkDropList (cdkDropListDropped)=\"drop($event)\">\n              <div class=\"dhandle\"\n                *ngFor=\"let item of showhideList; let i = index\" cdkDrag>\n                <i class=\"material-icons color_icon\"> drag_handle </i>\n                <mat-checkbox color=\"primary\" [checked]=\"item.visible==true?item:''\" (click)=\"$event.stopPropagation()\"\n                  (change)=\"showHideColumn(i, item)\" class=\"left-align\" [id]=\"item.header\"> {{item.header}} </mat-checkbox>\n              </div>\n            </div>\n          </mat-menu>\n          <button mat-icon-button menuOpen=\"false\" matTooltip=\"Filter List\"\n                  *ngIf=\"sTableOptions.cFilter\" color=\"primary\"\n                  [matMenuTriggerFor]=\"filterMenu\" #filterMenuTrigger=\"matMenuTrigger\">\n            <mat-icon class=\"\">filter_list</mat-icon></button>\n            <mat-menu #filterMenu=\"matMenu\" class=\"col-filters\">\n              <mat-card class=\"filter-card\" (click)=\"$event.stopPropagation();\">\n                <mat-card-header>\n                  <mat-card-title>Filter</mat-card-title>\n                </mat-card-header>\n                <mat-card-content>\n                  <form #filterForm=\"ngForm\" role=\"form\">\n                    <mat-form-field *ngIf=\"sTableOptions.columns && sTableOptions.columns.length\" class=\"w-100\" appearance=\"outline\">\n                      <mat-label>Choose filter column</mat-label>\n                      <mat-select placeholder=\"Choose filter column\" name=\"chooseFilter\" required [(ngModel)]=\"cFilter.selectedCol\">\n                        <mat-option value=\"\">Choose filter column</mat-option>\n                        <mat-option *ngFor=\"let val of sTableOptions.columns\" [value]=\"val.col\" [id]=\"val.id\">{{val.header}}</mat-option>\n                      </mat-select>\n                    </mat-form-field>\n                    <mat-form-field *ngIf=\"cFilter.selectedCol\" class=\"w-100\" appearance=\"outline\">\n                      <mat-label>Search {{colHash[cFilter.selectedCol].header}}</mat-label>\n                      <input matInput type=\"text\" trim=\"blur\" *ngIf=\"colHash[cFilter.selectedCol].colFilters.type === 'text'\"\n                             placeholder=\"Search {{colHash[cFilter.selectedCol].header}}\" required\n                              name=\"{{colHash[cFilter.selectedCol].col}}s\" [(ngModel)]=\"colHash[cFilter.selectedCol].val\" >\n                      <mat-select placeholder=\"Search {{colHash[cFilter.selectedCol].header}}\" name=\"{{colHash[cFilter.selectedCol].col}}s\"\n                                  *ngIf=\"colHash[cFilter.selectedCol].colFilters.type === 'select'\" required\n                                  [(ngModel)]=\"colHash[cFilter.selectedCol].val\">\n                        <mat-option *ngFor=\"let val of colHash[cFilter.selectedCol].colFilters.options\" [value]=\"val.value\">{{val.name}}</mat-option>\n                      </mat-select>\n                      <ng-container *ngIf=\"colHash[cFilter.selectedCol].colFilters.type === 'range'\">\n                        <mat-date-range-input [rangePicker]=\"picker\">\n                          <input matStartDate name=\"startDate\" [(ngModel)]=\"colHash[cFilter.selectedCol].start\"\n                                 placeholder=\"Start date\">\n                          <input matEndDate name=\"startDate\" [(ngModel)]=\"colHash[cFilter.selectedCol].end\"\n                                 placeholder=\"End date\">\n                        </mat-date-range-input>\n                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                        <mat-date-range-picker #picker></mat-date-range-picker>\n                      </ng-container>\n                    </mat-form-field>\n                    <button (click)=\"columnFilterxlsx(colHash[cFilter.selectedCol])\" [disabled]=\"!filterForm.form.valid\"\n                            color=\"primary\" mat-raised-button=\"\">Add Filter</button>\n                     <button class=\"ml-2\" (click)=\"cFilter.selectedCol = ''\"  mat-stroked-button=\"\">Clear</button>\n                  </form>\n                </mat-card-content>\n              </mat-card>\n            </mat-menu>\n            <button id=\"gbtn{{sTableOptions.title}}\" color=\"primary\" matSuffix mat-icon-button *ngIf=\"!tableOptions.hideDownload\"\n            matTooltip=\"Download as XLSx\" [matMenuTriggerFor]=\"xlsMenu\"\n        aria-label=\"download xlsx menu\">\n      <mat-icon class=\"mat-24\">file_download</mat-icon>\n      </button>\n      <mat-menu #xlsMenu=\"matMenu\">\n        <button mat-menu-item id=\"currentSelection\" *ngIf=\"tableOptions.filterDownload\" (click)=\"downloadAsXls('filtered')\">\n          <mat-icon class=\"mat-24\">filter_list</mat-icon>\n          <span>Filtered Data</span>\n        </button>\n        <button mat-menu-item id=\"fullData\" (click)=\"downloadAsXls('full')\">\n          <mat-icon class=\"mat-24\">file_download</mat-icon>\n          <span>Full Data</span>\n        </button>\n      </mat-menu>\n          <button mat-icon-button *ngIf=\"tableOptions.compareData\" matTooltip=\"Compare Data\" color=\"primary\"\n            (click)=\"CompareData(compSelection.selected)\">\n            <mat-icon>compare</mat-icon>\n          </button>\n          <button mat-icon-button matTooltip=\"Save Settings\" id=\"save{{tableOptions.id}}\" (click)=\"SaveSettings()\" color=\"primary\"  *ngIf=\"tableOptions.saveData\">\n            <mat-icon>save</mat-icon>\n          </button>\n          <button mat-raised-button color=\"primary\" (click)=\"publish()\" *ngIf=\"tableOptions.publish\">\n            Publish\n          </button>\n          <a mat-icon-button matTooltip=\"Help Link\" [href]=\"baseService.helpLinks[tableOptions.id]\" target=\"_blank\" color=\"primary\"\n             *ngIf=\"baseService.helpLinks && baseService.helpLinks[tableOptions.id] && baseService.helpLinks[tableOptions.id] !== ''\">\n            <mat-icon>help</mat-icon>\n          </a>\n          <!--<button mat-icon-button menuOpen=\"false\" (click)=\"openListExport()\" matTooltip=\"Download\"\n            #exportMenuTrigger=\"matMenuTrigger\" [matMenuTriggerFor]=\"exportMenu\" *ngIf=\"tableOptions.exportExcel\">\n            <mat-icon>cloud_download</mat-icon>\n          </button>-->\n          <button *ngFor=\"let pbtn of tableOptions.parentCalls\" mat-icon-button [matTooltip]=\"pbtn.tooltip\" [color]=\"pbtn.color\"\n                  (click)=\"ParentCalls(pbtn.id)\">\n            <mat-icon>{{pbtn.icon}}</mat-icon>\n          </button>\n\n          <mat-menu #exportMenu=\"matMenu\" [hasBackdrop]=\"false\" yPosition=\"below\">\n            <!--<div>\n              <button mat-button (click)=\"ExportToExcel()\">\n                Export to Excel\n              </button></div>\n            <div>\n              <button mat-button (click)=\"exportAs('pdf', 'l','current')\">\n                Export Current Page to PDF\n              </button>\n            </div>\n            <div>\n              <button mat-button (click)=\"exportAs('pdf', 'l','whole')\">\n                Export Whole Data to PDF\n              </button>\n            </div>-->\n            <div>\n              <button mat-button (click)=\"exportAllData()\">\n                Export All Data\n              </button>\n            </div>\n          </mat-menu>\n        </form>\n      </div>\n    </div>\n  </mat-toolbar>\n  <mat-toolbar class=\"select-tools\" *ngIf=\"selection.selected.length > 0\">\n    <span>{{selection.selected.length}} {{tableOptions.selectText}} selected.</span>\n    <div fxFlex fxLayout fxLayoutAlign=\"end\">\n      <ng-container *ngIf=\"!tableOptions.isHideGlobal\">\n        <button mat-flat-button color=\"primary\" id=\"gbtnSelction{{tableOptions.title}}\" mat-raised-button\n                [matMenuTriggerFor]=\"gactionSMenu\" [disabled]=\"selection.selected.length === 0\"\n                aria-label=\"global action with a menu\"> Global Actions\n        </button>\n        <mat-menu #gactionSMenu=\"matMenu\">\n          <ng-container *ngFor=\"let item of tableOptions.actionMenuItems\">\n            <a id=\"ganchsel{{item.text}}\" class=\"mat-primary\"\n               *ngIf=\"item.isGlobal\" mat-menu-item (click)=\"globalActionCall(selection.selected, item)\">\n              <mat-icon *ngIf=item.icon>{{item.icon}}</mat-icon>\n              <mat-icon *ngIf=!item.icon>arrow_forward_ios</mat-icon>\n              <span>{{ item.text }}</span>\n            </a>\n          </ng-container>\n        </mat-menu>\n      </ng-container>\n      <button class=\"gray\" matSuffix mat-icon-button (click)=\"clearSelection();\">\n        <mat-icon>close</mat-icon>\n      </button>\n    </div>\n  </mat-toolbar>\n  <!--<mat-chip-list aria-label=\"Column Filters\" class=\"mb-2\">\n    <mat-chip class=\"ml-2 my-2\" *ngFor=\"let filter of colFilters\" (removed)=\"removeFilterxlsx(filter)\">\n      {{filter.name}} = *{{filter.value}}* <mat-icon matChipRemove>cancel</mat-icon>\n    </mat-chip>\n  </mat-chip-list>-->\n  <mat-chip-list aria-label=\"Column Filters\" class=\"mb10\">\n    <mat-chip *ngFor=\"let filter of colFilters\" (removed)=\"removeFilter(filter)\">\n      {{filter.name}} = *{{filter.value}}* <mat-icon matChipRemove>cancel</mat-icon>\n    </mat-chip>\n  </mat-chip-list>\n  <mat-card-content [ngClass]=\"{'mt-2': colFilters.length}\">\n    <mat-progress-bar mode=\"indeterminate\" *ngIf=\"tableOptions.loading\"></mat-progress-bar>\n    <div #MAINTABLEDIV class=\"overflow-auto\">\n      <table id=\"mytable\" class=\"ibtn crud-table\" [ngClass]=\"{'tablePadding': isTablePadding===true}\" mat-table [dataSource]=\"dataSource\"\n        *ngIf=\"dataSource\" matSort #MainTable [matSortActive]=\"_sTableOptions['sortOptions']['active']\"\n        [matSortDirection]=\"_sTableOptions['sortOptions']['direction']\" (matSortChange)=\"customSort($event)\">\n        <ng-container matColumnDef=\"select\" *ngIf=\"tableOptions.rowSelection\" sticky>\n          <th mat-header-cell *matHeaderCellDef class=\"ww-break\">\n            <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\" id=\"_selectDeselectAll\"\n              [checked]=\"selection.hasValue() && isAllSelected()\"\n              [indeterminate]=\"selection.hasValue() && !isAllSelected()\"></mat-checkbox>\n          </th>\n          <td mat-cell *matCellDef=\"let row\" class=\"ww-break\">\n            <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\" [id]=\"row._id\"\n              (change)=\"$event ? rowToggle(row) : null\" [checked]=\"selection.isSelected(row)\"></mat-checkbox>\n          </td>\n        </ng-container>\n        <ng-container matColumnDef=\"compare\" *ngIf=\"tableOptions.compareData\">\n          <th mat-header-cell *matHeaderCellDef class=\"ww-break\">Compare\n            <!-- <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                [checked]=\"selection.hasValue() && isAllSelected()\"\n                [indeterminate]=\"selection.hasValue() && !isAllSelected()\"></mat-checkbox> -->\n          </th>\n          <td mat-cell *matCellDef=\"let row\" class=\"ww-break\">\n            <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\n              (change)=\"$event ? compSelection.toggle(row) : null\" [checked]=\"compSelection.isSelected(row)\">\n            </mat-checkbox>\n          </td>\n        </ng-container>\n        <ng-container *ngFor=\"let column of _sTableOptions.columns\" [matColumnDef]=\"column.columnDef\">\n          <th mat-header-cell *matHeaderCellDef [width]=\"column.width\">\n            <mat-label mat-sort-header\n              [disabled]=\"(column.isSort === undefined || column.isSort === null) ? 'false' : !column.isSort \">\n              <span>{{ column.header }}</span> </mat-label>\n            <!--Column Search Code in the Table header section-->\n            <!--<div *ngIf=\"tableOptions.columnSearch && dontShow\">\n              <mat-form-field>\n                <input matInput type=\"text\" trim=\"blur\" placeholder=\"Search {{column.header}}\"\n                       *ngIf=\"!column.selectFilter\"\n                  (input)='columnFilter($any($event.target).value,column.columnDef)'\n                  [disabled]=\"(column.iscolumnSearch === undefined || column.iscolumnSearch===null) ? 'false' : !column.iscolumnSearch \">\n                <mat-select placeholder=\"Choose filter value\" name=\"{{column.columnDef}}\"\n                            *ngIf=\"column.selectFilter\" [(ngModel)]=\"colfilter[column.columnDef]\"\n                            [disabled]=\"(column.iscolumnSearch === undefined || column.iscolumnSearch===null) ? 'false' : !column.iscolumnSearch \"\n                (selectionChange)= \"columnFilter($event.value, column.columnDef)\">\n                  <mat-option value=\"\">All</mat-option>\n                  <mat-option *ngFor=\"let val of column.selectFilterArr\" [value]=\"val.value\">{{val.name}}</mat-option>\n                </mat-select>\n              </mat-form-field>\n            </div>-->\n          </th>\n          <td mat-cell *matCellDef=\"let row\"\n            [ngClass]=\"{'text-center': column.align === 'center',\n              'text-left': !column.align || column.align === 'left', 'text-right': column.align === 'right'}\" class=\"wwbreak\">\n            <span *ngIf=\"column.filter\">\n              <span *ngIf=\"column.isHyperlink && !column.isToolTip\">\n                <ng-container *ngIf=\"column.isTarget; then thenTemplate; else elseTemplate\"></ng-container>\n                <ng-template #thenTemplate>\n                  <div innerHTML=\"{{getProperty(row, column.columnDef) | formatCell:column.filter}}\"></div>\n                </ng-template>\n                <ng-template #elseTemplate>\n                  <a class=\"pointer\" (click)=\"hyperLinkCall(row, column.columnDef)\" [id]=\"getProperty(row, column.columnDef)\">\n                    <span>{{ getProperty(row, column.columnDef) | formatCell:column.filter}}</span>\n                  </a>\n                </ng-template>\n              </span>\n              <ng-container *ngIf=\"!column.isHyperlink && !column.isHtml\">\n                <span *ngIf=\"column.isToolTip\" matTooltipClass=\"example-tooltip-red\"\n                  matTooltip=\"{{ getProperty(row, column.isToolTipCol) }}\">\n                  {{getProperty(row, column.columnDef) | formatCell:column.filter}}</span>\n                <span *ngIf=\"!column.isToolTip\">{{getProperty(row, column.columnDef) | formatCell:column.filter}}</span>\n              </ng-container>\n              <span *ngIf=\"!column.isHyperlink && column.isHtml\">\n                <div [innerHTML]=\"getProperty(row, column.columnDef) | safeHTML\"></div>\n                <!--{{getProperty(row, column.columnDef) | formatCell:column.filter}}-->\n              </span>\n            </span>\n\n            <ng-container *ngIf=\"column.hasMultiData\">\n              <div *ngFor=\"let col of column.colList\">\n                <span *ngIf=\"col.isHyperlink && !col.isToolTip\">\n                  <a class=\"pointer\" (click)=\"hyperLinkCall(row, col.col)\" [id]=\"getProperty(row, column.columnDef)\">\n                    <span>{{ getProperty(row, col.col)}}</span>\n                  </a>\n                </span>\n                <span *ngIf=\"col.isToolTip && !col.isHyperlink\" matTooltipClass=\"example-tooltip-red\"\n                  matTooltip=\"{{ getProperty(row, col.isToolTipCol) }}\">{{ getProperty(row, col.col) }}</span>\n                <span *ngIf=\"col.isHyperlink && col.isToolTip\" matTooltipClass=\"example-tooltip-red\"\n                  matTooltip=\"{{ getProperty(row, col.isToolTipCol) }}\">\n                  <a class=\"pointer\" [id]=\"getProperty(row, column.columnDef)\" (click)=\"hyperLinkCall(row, col.col)\">\n                    <span>{{ getProperty(row, col.col)}}</span>\n                  </a>\n                </span>\n                <span *ngIf=\"col.isProgressCntrl\">\n                  <div class=\"mat-elevation-z2\" [ngClass]=\"{'progress-s': getProperty(row, 'warn') > getProperty(row, col.col),\n                            'progress-d':getProperty(row, 'warn') <= getProperty(row, col.col) }\">\n                    <span class=\"percent-b\">{{getProperty(row, col.col)}}%</span>\n                    <div class=\"p-bar\" [style.width]=\"getProperty(row, col.col)+'%'\"></div>\n                  </div>\n                </span>\n                <span *ngIf=\"col.isColoredCntrl\">\n                  <span *ngIf=\"getProperty(row, col.col) == '-'\">{{getProperty(row, col.col)}}</span>\n                  <span class=\"label\" *ngIf=\"getProperty(row, col.col) != '-'\"\n                    [ngStyle]=\"{'background-color':col.color}\">{{getProperty(row, col.col)}}</span>\n                </span>\n\n                <span *ngIf=\"col.isfaicon\">\n                  <i class=\"{{col.class }}\" [ngStyle]=\"{color: col.color}\"></i>\n                </span>\n\n                <span *ngIf=\"col.filter\">\n                  {{getProperty(row, col.col) | formatCell:col.filter}}\n                </span>\n\n                <span *ngIf=\"col.isAddingText\">\n                  {{col.addingText }}{{ getProperty(row, col.col)}}\n                </span>\n\n                <span *ngIf=\"col.img && col.imgPath\">\n                  <img [src]=\"col.imgPath+'generic.svg'\" *ngIf=\"getProperty(row, col.col) === null\" alt=\"generic\"\n                    class=\"{{col.class}}\">\n                  <img [src]=\"col.imgPath+getProperty(row, col.col)\" *ngIf=\"getProperty(row, col.col) !== null\" alt=\"logo\"\n                    class=\"{{col.class}}\">\n                </span>\n\n                <span *ngIf=\"!col.isHyperlink && !col.isProgressCntrl && !col.isColoredCntrl && !col.isToolTip\n                    && !col.filter && !col.isfaicon && !col.isAddingText && !col.img\">\n                  {{ getProperty(row, col.col) }}\n                </span>\n              </div>\n            </ng-container>\n\n            <ng-container *ngIf=\"column.isProgressCntrl\">\n              <div class=\"mat-elevation-z2\" [ngClass]=\"{'progress-s': getProperty(row, 'warn') > getProperty(row, column.columnDef),\n                      'progress-d':getProperty(row, 'warn') <= getProperty(row, column.columnDef) }\">\n                <span class=\"percent-b\">{{getProperty(row, column.columnDef)}}%</span>\n                <div class=\"p-bar\" [style.width]=\"getProperty(row, column.columnDef)+'%'\"></div>\n              </div>\n              \n            </ng-container>\n\n            <!-- <ng-container *ngIf=\"column.isDynamicCntrl\">\n                  <div [innerHTML]=\"getProperty(row, column.columnDef)\"></div>\n                </ng-container> -->\n\n            <ng-container *ngIf=\"column.isColoredCntrl\">\n              <ng-container *ngIf=\"column.isCustomText; then thenTemplate; else elseTemplate\"></ng-container>\n              <ng-template #thenTemplate>\n                <!-- <span *ngIf=\"getProperty(row, column.columnDef) == '-'\">{{getCustomText(getProperty(row, column.columnDef))}}</span> -->\n                <span class=\"label\" *ngIf=\"getProperty(row, column.columnDef) != '-'\"\n                  [ngStyle]=\"getCustomColor(getProperty(row, column.columnDef))\">{{getCustomText(getProperty(row, column.columnDef)) }}</span>\n              </ng-template>\n              <ng-template #elseTemplate>\n                <span *ngIf=\"getProperty(row, column.columnDef) == '-'\">{{getProperty(row, column.columnDef)}}</span>\n                <span class=\"label\" *ngIf=\"getProperty(row, column.columnDef) != '-'\"\n                  [ngStyle]=\"{'background-color':column.color}\">{{getProperty(row, column.columnDef)}}</span>\n              </ng-template>\n            </ng-container>\n\n            <ng-container *ngIf=\"column.statusicon\">\n              <img class=\"vendor-logo\" [src]='getIconPath(row, column)' [matTooltip]='getIconTooltip(row, column)'\n                [alt]='getIconTooltip(row, column)'>\n              <div>\n                <span hidden [innerHTML]=\"getIconTooltip(row, column) | safeHTML\"></span>\n              </div>\n            </ng-container>\n\n            <ng-container *ngIf=\"!column.filter\">\n              <ng-container *ngIf=\"column.icon\">\n                <ng-container>\n                  <span>\n                    <ng-container *ngFor=\"let icon of column.iconList\">\n                      <mat-icon [ngClass]=\"[icon.class]\" *ngIf=\"getProperty(row, column.columnDef) === icon.value\">\n                        {{icon._icon}}\n                      </mat-icon>\n                    </ng-container>\n                  </span>\n                </ng-container>\n              </ng-container>\n              \n              <ng-container *ngIf=\"column.listView\">\n                <ng-container>\n                  <span *ngIf=\"column.listView && !column.dictView\">\n                    <ng-container *ngFor=\"let list of getProperty(row, column.columnDef)\">\n                      <span class=\"bor-1 px-2 mr-1\">{{list}}</span>\n                    </ng-container>\n                  </span>\n                </ng-container>\n                <ng-container *ngIf=\"column.listView && column.dictView\">\n                  {{ getListProperty(row, column.columnDef)}}\n                </ng-container>\n              </ng-container>\n              \n\n              <ng-container *ngFor=\"let img of column.conditionList\">\n                <img class=\"{{img.class}}\" [src]=\"img._img\" [alt]=\"img.value\" *ngIf=\"getProperty(row, column.columnDef) === img.value\"\n                [matTooltip]=\"img.displaytext\">\n                <div>\n                  <span hidden *ngIf=\"getProperty(row, column.columnDef) === img.value\"\n                    [innerHTML]=\"getProperty(row, column.columnDef)\"></span>\n                </div>\n              </ng-container>\n\n              <ng-container *ngIf=\"column.img && column.imgPath\">\n                <img [src]=\"column.imgPath+'generic.svg'\" alt=\"generic\"\n                  *ngIf=\"getProperty(row, column.columnDef) === null || getProperty(row, column.columnDef) === undefined\"\n                  class=\"{{column.class}}\">\n\n\n                <img [src]=\"column.imgPath+getProperty(row, column.columnDef)\" [alt]=\"getProperty(row, column.columnDef)\"\n                  title=\"{{column.isToolTipCol === undefined? '': getProperty(row, column.isToolTipCol)}}\" *ngIf=\"getProperty(row, column.columnDef) !== null &&\n                     getProperty(row, column.columnDef) !== undefined \" class=\"{{column.class}}\">\n                <div>\n                  <span hidden [innerHTML]=\"getProperty(row, column.columnDef)\"></span>\n                </div>\n\n              </ng-container>\n\n              <!-- <ng-container *ngIf=\"column.isAddingText\">\n                    {{ tableOptions.addingText}}\n                  </ng-container> -->\n\n              <ng-container *ngIf=\"column.isAddingText\">\n                {{ column.addingText }} {{ getProperty(row, column.columnDef) }}\n              </ng-container>\n\n              <span *ngIf=\"column.isHyperlink && !column.isToolTip\">\n\n                <ng-container *ngIf=\"column.isTarget; then thenTemplate; else elseTemplate\"></ng-container>\n                <ng-template #thenTemplate>\n                  <div [innerHTML]=\"getProperty(row, column.columnDef)\"></div>\n                </ng-template>\n                <ng-template #elseTemplate>\n                  <a class=\"pointer\" (click)=\"hyperLinkCall(row, column.columnDef)\" [id]=\"getProperty(row, column.columnDef)\">\n                    <span>{{ getProperty(row, column.columnDef)}}</span>\n                  </a>\n                </ng-template>\n              </span>\n              <span *ngIf=\"column.isToolTip && !column.isHyperlink\" matTooltipClass=\"example-tooltip-red\"\n                matTooltip=\"{{ getProperty(row, column.isToolTipCol) }}\">\n                {{ getProperty(row, column.columnDef) }}\n              </span>\n              <span *ngIf=\"column.isHyperlink && column.isToolTip\" matTooltipClass=\"example-tooltip-red\"\n                matTooltip=\"{{ getProperty(row, column.isToolTipCol) }}\">\n                <a class=\"pointer\" (click)=\"hyperLinkCall(row, column.columnDef)\" [id]=\"getProperty(row, column.columnDef)\">\n                  <span>{{ getProperty(row, column.columnDef)}}</span>\n                </a>\n              </span>\n              <span *ngIf=\"column.isfaicon\">\n                <i class=\"{{column.class }}\"\n                  [ngStyle]=\"{color: column.color}\"></i>{{ getProperty(row, column.columnDef) }}\n              </span>\n              <ng-container *ngIf=\"!column.icon && !column.img && !column.isHyperlink &&\n                   !column.isProgressCntrl && !column.isColoredCntrl && !column.hasMultiData && !column.statusicon && !column.isfaicon\n                   && !column.isAddingText  && !column.isToolTip && !column.listView\">\n                {{ getProperty(row, column.columnDef) }}\n              </ng-container>\n            </ng-container>\n          </td>\n        </ng-container>\n        <ng-container matColumnDef=\"action\" *ngIf=\"tableOptions.showAction\" stickyEnd>\n          <th mat-header-cell *matHeaderCellDef class=\"wwbreak\"\n            [ngClass]=\"tableOptions.showAction === true? 'color1' : 'color2' \">\n            <!--<button id=\"gbtn{{tableOptions.title}}\" mat-icon-button [matMenuTriggerFor]=\"gactionMenu\" [disabled]=\"selection.selected.length === 0\"\n              aria-label=\"global action with a menu\">\n              <mat-icon>more_vert</mat-icon>\n            </button>-->Action\n            <mat-menu #gactionMenu=\"matMenu\">\n              <ng-container *ngFor=\"let item of tableOptions.actionMenuItems\">\n                <a id=\"ganch{{item.text}}\" *ngIf=item.isGlobal mat-menu-item (click)=\"globalActionCall(selection.selected, item)\">\n                  <mat-icon *ngIf=item.icon>{{item.icon}}</mat-icon>\n                  <mat-icon *ngIf=!item.icon>arrow_forward_ios</mat-icon>\n                  <span [id]=\"item.text\">{{ item.text }}</span>\n                </a>\n              </ng-container>\n            </mat-menu>\n          </th>\n          <td mat-cell *matCellDef=\"let element\" class=\"wwbreak\"\n            [ngClass]=\"tableOptions.showAction == true? 'color1' : 'color2' \">\n            <button id=\"btn{{tableOptions.id}}\" mat-icon-button  color=\"primary\" [matMenuTriggerFor]=\"actionMenu\" aria-label=\"row action with a menu\"\n              [disabled]=\"selection.selected.length > 0\">\n              <mat-icon>more_vert</mat-icon>\n            </button>\n            <mat-menu #actionMenu=\"matMenu\">\n              <ng-container *ngFor=\"let item of tableOptions.actionMenuItems\">\n                <a id=\"anch{{item.text}}\" *ngIf=\"item.callback && !item.hideLocal\" mat-menu-item (click)=\"actionCall(element, item)\">\n                  <mat-icon *ngIf=item.icon>{{item.icon}}</mat-icon>\n                  <mat-icon *ngIf=!item.icon>arrow_forward_ios</mat-icon>\n                  <span [id]=\"item.text\">{{ item.text }}</span>\n                </a>\n              </ng-container>\n            </mat-menu>\n          </td>\n        </ng-container>\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns; let i = index;\" [ngClass]=\"{hovered: row.hovered, highlighted: row.highlighted}\"\n            (click)=\"rowClick(row, i)\" (mouseover)=\"row.hovered = true\" (mouseout)=\"row.hovered = false\"></tr>\n      </table>\n      <p class=\"ml-2\" *ngIf=\"!dataSource.data || dataSource.data.length === 0\">\n        <span *ngIf=\"tableOptions.loading\">Please wait!</span>\n        <span *ngIf=\"!tableOptions.loading && tableOptions.pageTotal === 0 && !tableOptions.nomsg\">\n          No data available!\n        </span>\n        <span *ngIf=\"!tableOptions.loading && tableOptions.pageTotal === 0 && tableOptions.nomsg\">\n         {{tableOptions.nomsg}}\n        </span>\n      </p>\n    </div>\n    <mat-progress-bar mode=\"indeterminate\" *ngIf=\"tableOptions.loading && dataSource &&  dataSource.data && dataSource.data.length > 25\">\n    </mat-progress-bar>\n    <mat-paginator class=\"mr20 t-paginator\" *ngIf=\"tableOptions.pagination && tableOptions.pageTotal < 10000\"\n    [pageSize]=\"tableOptions.pageSize\" showFirstLastButtons\n      [length]=\"tableOptions.pageTotal\" #paginator [pageSizeOptions]=\"tableOptions.pageOptions\"\n      (page)=\"pageChanged($event)\"></mat-paginator>\n    <mat-paginator class=\"mr20 t-paginator\" *ngIf=\"tableOptions.pagination && tableOptions.pageTotal > 9999\"\n                   [pageSize]=\"tableOptions.pageSize\"\n      [length]=\"tableOptions.pageTotal\" #paginator [pageSizeOptions]=\"tableOptions.pageOptions\"\n      (page)=\"pageChanged($event)\"></mat-paginator>\n  </mat-card-content>\n</mat-card>\n","/* tslint:disable */\n/* eslint-disable */\nimport { Injectable } from '@angular/core';\n\n/**\n * Global configuration\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiConfiguration {\n  rootUrl: string = '';\n}\n\n/**\n * Parameters for `ApiModule.forRoot()`\n */\nexport interface ApiConfigurationParams {\n  rootUrl?: string;\n}\n","<div class=\"remedia-container\">\n  <mat-sidenav-container class=\"remedia-sidenav-container h-100vh\" (backdropClick)=\"close('backdrop')\">\n    <mat-sidenav-content>\n      <app-s-crud-t (hyperlinkCallback)=\"viewVuls($event)\"\n              *ngIf=\"vulStatsColOptions && vulStatsColOptions.columns && !vulStatsColOptions.hideTable\"\n              [tOption]=\"vulStatsColOptions\"></app-s-crud-t>\n    </mat-sidenav-content>\n    <mat-sidenav #snav [mode]=\"'over'\" fixedTopGap=\"56\" position=\"end\" class=\"w-70p z-index-150\">\n      <mat-card>\n        <button class=\"position-absolute r-1p\"  aria-label=\"close modal icon\" matTooltip=\"Close\"\n                (click)=\"close();\" mat-icon-button=\"\">\n          <mat-icon>close</mat-icon>\n        </button>\n        <mat-card-header>\n          <mat-card-title class=\"fs1 fw3\">{{currentVulStats.name}} - Vulnerabilities</mat-card-title>\n          <mat-card-subtitle>{{currentVulStats.description}}</mat-card-subtitle>\n        </mat-card-header>\n        <mat-card-content>\n          <app-s-crud-t (totalCallback)=\"totalCallbackCheck($event)\"\n              (hyperlinkCallback)=\"viewVuls($event)\"\n              *ngIf=\"vulsColOptions && vulsColOptions.columns && aS.hasPermission('company', 'getvulnerabilitystats')\"\n              [tOption]=\"vulsColOptions\"></app-s-crud-t>\n        </mat-card-content>\n      </mat-card>\n    </mat-sidenav>\n  </mat-sidenav-container>\n</div>\n","import {Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {MatSidenav} from '@angular/material/sidenav';\nimport {AuthenticationService} from '../../_services/authentication.service';\n\n@Component({\n  selector: 'app-vulnerability-stats',\n  templateUrl: './vulnerability-stats.component.html',\n  styleUrls: ['./vulnerability-stats.component.scss']\n})\n\nexport class VulnerabilityStatsComponent implements OnInit {\n  @ViewChild('snav', {static: true}) snav: MatSidenav;\n  @Input() currentCompany: any;\n  @Input() mode: any;\n\n  vulStatsColOptions: any = {};\n  dynamicColumns: any = [];\n  vulsData: any;\n  vulsColumns: any;\n  currentVulStats: any = {};\n  vulStatsQuery: any = {};\n  severityHtmlCols = {\n    Critical: `<span class=\" fw4  px-1 badge scritical\">CRITICAL</span>`,\n    High: `<span class=\" fw4  px-1 badge shigh\">HIGH</span>`,\n    Medium: `<span class=\" fw4  px-1 badge smedium\">MEDIUM</span>`,\n    Low: `<span class=\" fw4  px-1 badge slow\">LOW</span>`,\n    Info: `<span class=\" fw4  px-1 badge sinfo\">INFO</span>`\n  };\n  vulsColOptions: any;\n\n  constructor(public aS: AuthenticationService) { }\n\n  viewVuls(idata: any): void {\n    this.currentVulStats = idata.row;\n    this.snav.open();\n    this.getVulsData();\n  }\n\n  close(status?: any): void {\n    if (status) { return; }\n    this.snav.close();\n  }\n\n  ngOnInit(): void {\n    this.dynamicColumns = [\n      {\n        col: 'u', header: 'osname', colFilters: {type: 'text', hKey: false}, hyperLinkCall: {\n          filter: 'utcToLocale'\n        }\n      },\n      {\n        col: 'status', header: 'Status', isKeyword: true,\n        htmlCols: {\n          Open: `<span class=\" fw4 ml-3 px-1 badge badge-danger\">Open</span>`,\n          Closed: `<span class=\" fw4 ml-3 px-1 badge badge-success\">Closed</span>`\n        },\n        colFilters: {\n          type: 'select', hKey: false,\n          options: [{value: 'Open', name: 'Open'}, {value: 'Closed', name: 'Closed'}]\n        },\n      },\n      {col: 'name', header: 'Name', colFilters: {type: 'text', hKey: true}, isKeyword: true, noFilter: true},\n      {col: 'description', header: 'Description', colFilters: {type: 'text', hKey: true}, isKeyword: true, noFilter: true},\n      {col: 'assetRef.name', header: 'Asset Name', colFilters: {type: 'text', hKey: true}, isKeyword: true, noFilter: true},\n    ];\n    this.vulsColumns = [\n      {\n        col: 'vul_id', header: 'CVE', hyperLink: {hotLink: 'https://nvd.nist.gov/vuln/detail/', match: 'CVE'},\n        isKeyword: true, colFilters: {type: 'text', hKey: true}, noFilter: false\n      },\n      {col: 'title', header: 'Title', colFilters: {type: 'text', hKey: true}, isKeyword: true, noFilter: true},\n      {\n        col: 'category',\n        header: 'Category',\n        colFilters: {type: 'text', hKey: true},\n        isKeyword: true,\n        noFilter: true\n      },\n      {\n        col: 'product',\n        header: 'Product',\n        colFilters: {type: 'text', hKey: true},\n        isKeyword: true,\n        noFilter: true\n      },\n      {col: 'port', header: 'Port', colFilters: {type: 'text', hKey: false}, noFilter: true},\n      {col: 'ref', header: 'Ref', colFilters: {type: 'text', hKey: true}, isKeyword: true, noFilter: true},\n      {col: 'severity', header: 'Severity', htmlCols: this.severityHtmlCols,\n        isKeyword: true, colFilters: {type: 'text', hKey: true}, noFilter: false\n      },\n      {col: 'score.cvss_score', header: 'CVSS Score', colFilters: {type: 'text', hKey: false}, noFilter: true}\n    ];\n    this.getVulStatsData();\n  }\n\n  getVulsData(): void {\n    this.vulsColOptions = {\n          id: 'vulsColOptions',\n          title: 'Vulnerabilities',\n          refresh: true,\n          cFilter: true,\n          pSize: 5,\n          pList: [1, 5, 10, 25, 50, 100, 200],\n          pagination: true,\n          loading: true,\n          customCols: true,\n          faClass: 'Vulnerability',\n          serverSide: {\n            service: 'vulnerabilityTimeSeriesService', fn: 'getAllApiVulnerabilitytimeseriesGet', q: {\n              query: {bool: {must: [\n                      {match: {'companyRef.id.keyword': this.currentCompany._id + ''}},\n                      {exists: {field: 'uniqueid'}}, {exists: {field: 'vul_id'}}]}}\n            }, sort: [{}]\n          },\n          lMsg: 'Getting network vulnerabilities list...',\n          local: false,\n          dataList: [],\n          columns: [\n            {\n              col: 'vul_id', header: 'CVE', hyperLink: {hotLink: 'https://nvd.nist.gov/vuln/detail/', match: 'CVE'},\n              isKeyword: true, colFilters: {type: 'text', hKey: true}, noFilter: false\n            },\n            {col: 'title', header: 'Title', colFilters: {type: 'text', hKey: true}, isKeyword: true, noFilter: true},\n            {\n              col: 'category',\n              header: 'Category',\n              colFilters: {type: 'text', hKey: true},\n              isKeyword: true,\n              noFilter: true\n            },\n            {\n              col: 'product',\n              header: 'Product',\n              colFilters: {type: 'text', hKey: true},\n              isKeyword: true,\n              noFilter: true\n            },\n            {col: 'port', header: 'Port', colFilters: {type: 'text', hKey: false}, noFilter: true},\n            {col: 'ref', header: 'Ref', colFilters: {type: 'text', hKey: true}, isKeyword: true, noFilter: true},\n            {col: 'severity', header: 'Severity', htmlCols: this.severityHtmlCols,\n              isKeyword: true, colFilters: {type: 'text', hKey: true}, noFilter: false\n            },\n            {col: 'score.cvss_score', header: 'CVSS Score', colFilters: {type: 'text', hKey: false}, noFilter: true}\n          ]\n        };\n  }\n\n  totalCallbackCheck($event: any): void { // @ts-ignore\n    if (this[$event.id]) { // @ts-ignore\n      this[$event.id].hideTable = ($event.value === 0);\n    } else {\n      console.log($event.id + ' not available');\n    }\n  }\n\n  getVulStatsData(): void {\n    this.vulStatsQuery = {};\n    if (this.mode === 'company' && this.currentCompany && this.currentCompany._id) {\n      this.vulStatsQuery = {companyid: this.currentCompany._id};\n    }\n    this.vulStatsColOptions = {};\n    setTimeout(() => {\n      this.vulStatsColOptions = {\n        id: 'vulStatsColOptions',\n        title: 'Vulnerability Overview',\n        refresh: true,\n        cFilter: true,\n        pSize: 50,\n        pList: [1, 5, 10, 25, 50, 100, 200],\n        pagination: true,\n        loading: true,\n        customCols: true,\n        faClass: 'VulnerabilityOverview',\n        lMsg: 'Getting vulnerability overview...',\n        local: true,\n        dataList: [],\n        columns: this.dynamicColumns\n      };\n    });\n  }\n}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output, SimpleChange,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport {FormControlService} from 'src/app/_services/form-control.service';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {ToastrService} from 'ngx-toastr';\nimport {debounceTime, takeUntil} from 'rxjs/operators';\nimport {MatSelect} from '@angular/material/select';\nimport {ReplaySubject, Subject} from 'rxjs';\nimport {AuthenticationService} from '../../../_services/authentication.service';\nimport {LoaderService} from '../../../_services/loader.service';\nimport {BaseRequestService} from '../../../_services/base.service';\nimport {MyToastrService} from '../../../_services/toastr.service';\n\n@Component({\n  selector: 'app-dynamic-form',\n  templateUrl: './dynamic-form.component.html',\n  styleUrls: ['./dynamic-form.component.scss'],\n  providers: [FormControlService]\n})\n\nexport class DynamicFormComponent implements OnInit, OnDestroy, OnChanges {\n  @Input() fnBtnName = 'Save';\n  @Input() closeBtnName = 'Close';\n  @Input() isCloseBtn = true;\n  @Input() isSaveBtn = true;\n  @Input() listOfFormElements: any = [];\n  @Output() saveCallBack = new EventEmitter();\n  @Output() cancelCallBack = new EventEmitter();\n  // @Input() selectedValue: any;\n  @Output() valueUpdate = new EventEmitter();\n  form!: FormGroup;\n  @Input() Valuesoutput: any = {};\n  @Output() outputValue: any = {};\n  payLoad = '';\n  @ViewChild('companySelect', {static: true}) companySelect!: MatSelect;\n  public companyCtrl: FormControl = new FormControl();\n  public companyFilterCtrl: FormControl = new FormControl();\n  public filteredCompanies: ReplaySubject<any> = new ReplaySubject<any>(1);\n  public searching = false;\n  protected onDestroySearch = new Subject<void>();\n  agentList: any = [];\n  company: any;\n  companies: any;\n  companyHash: any = {};\n  allComp: any;\n  agentEnum = ['', 'Probe', 'Lightweight Agent', 'Lightweight Agent Installed', 'External Scan Agent'];\n  constructor(private formService: FormControlService, public toastr: ToastrService, \n              public authService: AuthenticationService, private loaderService: LoaderService,\n              private baseService: BaseRequestService, private toast: MyToastrService) {\n  }\n\n  ngOnInit(): void {\n    this.form = this.formService.toFormGroup(this.listOfFormElements);\n    this.companyFilterCtrl.valueChanges.pipe(debounceTime(300), takeUntil(this.onDestroySearch)).subscribe(() => {\n      this.filterCompanies();\n    });\n    const cmppicker = this.listOfFormElements.filter((x: any) => x.type === 'companypicker');\n    const agtpicker = this.listOfFormElements.filter((x: any) => x.type === 'agentpicker');\n    if (cmppicker.length) {\n      this.getCompanies();\n    }\n    if (agtpicker && this.Valuesoutput.companyId) {\n      this.updateCurrentCompany(this.Valuesoutput.companyId, 'companyId');\n    }\n  }\n  getAgents(id: any): void {\n    this.loaderService.display(true, 'Getting agent data...');\n    this.baseService.doRequest('/api/company/imaws/getCompanyAgents',\n      'post', {companyid: id}).subscribe((res: any) => {\n        this.loaderService.display(false);\n        if (res[0]) {\n          const agentList: { key: string; value: any; }[] = [];\n          res[1].forEach((obj: any) => {\n            agentList.push({ key: obj.name + ' (' + this.agentEnum[obj.agent_type] + ')', value: obj._id});\n          });\n          this.agentList = agentList;\n        } else {\n          this.toast.sToast('error', res[1]);\n        }\n    });\n  }\n\n  Save(form: any): void {\n    const frmValues = form.value;\n    if (frmValues.netaName && !frmValues.netaName.replace(/\\s/g, '').length) {\n      this.toastr.error('Input cannot contain only whitespaces');\n    } else {\n      this.saveCallBack.emit(frmValues);\n    }\n  }\n\n  Cancel(): void {\n    this.cancelCallBack.emit();\n  }\n\n  fieldValChange($event: any): void {\n    this.valueUpdate.emit($event);\n  }\n\n  onSubmit(): void {\n    // this.form.value[\"SelectedDropdown\"] = this.selectedValue.value;\n    // delete  this.form.value.undefined;\n    // @ts-ignore\n    this.payLoad = JSON.stringify(this.form.value);\n  }\n\n  ngOnDestroy(): void {\n    this.onDestroySearch.next();\n    this.onDestroySearch.complete();\n  }\n\n  private filterCompanies(): void {\n    if (!this.companies) {\n      return;\n    }\n    // get the search keyword\n    let search = this.companyFilterCtrl.value;\n    if (!search) {\n      this.filteredCompanies.next(this.companies.slice());\n      return;\n    } else {\n      search = search.toLowerCase();\n    }\n    this.getCompanies(search);\n  }\n\n  closeCurrentCompany(event: any, key: any): void {\n    if (this.allComp) {\n      this.filteredCompanies.next(this.allComp.slice());\n    }\n    if (!event && !this.outputValue[key]) {\n      this.getCompanies();\n    }\n  }\n\n  getCompanies(search?: string): void {\n    if (!this.authService || !this.authService.isAuthenticated) {\n      setTimeout(() => {\n        this.getCompanies();\n      }, 2000);\n      return;\n    }\n    let cq: any;\n    const cmpq = {query: {bool: {must: [{exists: {field: 'description'}}], must_not: [{match: {isAssessment: true}}, {exists: {field: 'companyRef'}}]}}};\n    const asmq = {query: {bool: {must: [{match: {isAssessment: true}}, {exists: {field: 'description'}}], must_not: [{exists: {field: 'companyRef'}}]}}};\n    cq = (this.baseService.showAssessment) ? asmq : cmpq;\n    if (search && search !== '') {\n      cq.query.bool.must.push({ match_bool_prefix: { name: search.toLowerCase() } });\n    }\n    const q = JSON.stringify(cq);\n    const skip = 0;\n    const limit = 1000;\n    const sort = JSON.stringify([{'name.keyword': {order: 'asc'}}]);\n    const fields = JSON.stringify(['name', 'c']);\n    this.searching = true;\n    // this.companyService.getAllApiCompanyGet({q, skip, limit, sort, fields}).subscribe((result: any) => {\n    //   if (result.data.length) {\n    //     for (const c of result.data) {\n    //       if (c._id) {\n    //         this.companyHash[c._id] = c;\n    //       }\n    //     }\n    //     result.data.sort((a: any, b: any) => {\n    //       const c = (a.name) ? a.name.toLowerCase() : '';\n    //       const d = (b.name) ? b.name.toLowerCase() : '';\n    //       if (c < d) {\n    //         return -1;\n    //       } else if (c > d) {\n    //         return 1;\n    //       } else {\n    //         return 0;\n    //       }\n    //     });\n    //     this.companies = result.data;\n    //     if (!search) {\n    //       this.allComp = result.data;\n    //     }\n    //     this.filteredCompanies.next(result.data.slice());\n    //     if (this.Valuesoutput.companyId) {\n    //       this.updateCurrentCompany(this.Valuesoutput.companyId, 'companyId');\n    //     }\n    //     this.searching = false;\n    //   } else {\n    //     this.filteredCompanies.next([]);\n    //     this.searching = false;\n    //   }\n    // }, error => {\n    //   this.searching = false;\n    // });\n  }\n\n  updateCurrentCompany(event: any, key: any): void {\n    this.Valuesoutput[key] = event;\n    this.form.controls[key].setValue(event);\n    this.getAgents(event);\n  }\n\n  ngOnChanges(): void {\n    if (this.Valuesoutput.companyId) {\n      this.updateCurrentCompany(this.Valuesoutput.companyId, 'companyId');\n    }\n  }\n}\n","<div *ngIf=\"listOfFormElements && listOfFormElements.length\">\n  <form [formGroup]=\"form\" novalidate=\"off\">\n    <div *ngFor=\"let formControl of listOfFormElements\" class=\"form-row\">\n      <ng-container *ngIf=\"formControl.type !== 'companypicker' &&  formControl.type !== 'agentpicker'\">\n         <app-dynamic-control [outputValue]=\"Valuesoutput\" [formElement]=\"formControl\" [form]=\"form\"\n      (valChange)=\"fieldValChange($event)\"></app-dynamic-control>\n      </ng-container>\n      <!-- Company Selector -->\n    <mat-form-field appearance=\"outline\" class=\"form-element\" *ngIf=\"formControl.type === 'companypicker'\">\n      <mat-select #companySelect class=\"\" [placeholder]=\"formControl.label\"\n                  (openedChange)=\"closeCurrentCompany($event, formControl.key)\" [(ngModel)]=\"Valuesoutput[formControl.key]\"\n                  [formControl]=\"companyCtrl\" (selectionChange)=\"updateCurrentCompany($event.value, formControl.key)\">\n        <mat-option>\n          <ngx-mat-select-search [formControl]=\"companyFilterCtrl\"  [placeholderLabel]=\"'Search Company'\"\n            [noEntriesFoundLabel]=\"'No matching company found'\" [searching]=\"searching\"></ngx-mat-select-search>\n        </mat-option>\n        <mat-option [matTooltip]=\"company.name\" *ngFor=\"let company of filteredCompanies | async\" [value]=\"company._id\">\n          {{company.name}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n    <!-- Company Selector-->\n\n    <!--Agent Selector-->\n    <mat-form-field appearance=\"outline\" class=\"form-element\" *ngIf=\"formControl.type === 'agentpicker' && Valuesoutput.companyId\">\n      <mat-label>{{formControl.label}}</mat-label>\n      <mat-select [(ngModel)]=\"Valuesoutput[formControl.key]\" [formControlName]=\"formControl.key\">\n        <mat-option *ngFor=\"let item of agentList\" [value]=\"item.value\">{{item.key}}</mat-option>\n      </mat-select>\n      <mat-error>{{formControl.label}} is required. <span class=\"ml10\">{{formControl.errmsg}}</span></mat-error>\n    </mat-form-field>\n    <!--Agent Selector-->\n    </div>\n    <div class=\"form-row\">\n      <button type=\"submit\" id=\"Savebtn\" *ngIf=\"isSaveBtn\" [disabled]=\"!form || !form.valid\" class=\"mr-2\" mat-raised-button color=\"primary\"\n              (click)=\"Save(form)\">{{fnBtnName}}\n      </button>\n      <button type=\"submit\" id=\"Closebtn\" (click)=\"Cancel()\" *ngIf=\"isCloseBtn\" mat-raised-button>{{closeBtnName}}</button>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pnf',\n  templateUrl: './pnf.component.html',\n  styleUrls: ['./pnf.component.scss']\n})\nexport class PnfComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>pnf works!</p>\n","import {Component, ElementRef, Input, OnInit, Output, OnChanges, ViewChild, EventEmitter, SimpleChanges} from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\nimport {MatMenuTrigger} from '@angular/material/menu';\nimport {LoaderService} from '../../_services/loader.service';\nimport {BaseRequestService} from '../../_services/base.service';\nimport {MyToastrService} from '../../_services/toastr.service';\nimport {CommonService} from '../../_services/common.services';\n\n@Component({\n  selector: 'app-sa-table',\n  templateUrl: './s-table.component.html',\n  styleUrls: ['./s-table.component.scss']\n})\n\nexport class STableComponent implements OnInit, OnChanges {\n  @Input() value: any;\n  colFilters: any = [];\n  colfilter: any = {};\n  showUpper = true;\n  colFilterQuery: any;\n  columns!: Array<any>;\n  expandedElement: any[] = [];\n  displayedColumns!: Array<any>;\n  dataSource!: MatTableDataSource<any>;\n  @ViewChild('MTABLEDIV', {static: false})\n  tableDiv!: ElementRef;\n  @ViewChild(MatPaginator, {static: true})\n  paginator!: MatPaginator;\n  @ViewChild(MatSort, {static: true})\n  sort!: MatSort;\n  @ViewChild('filterMenuTrigger', {static: false})\n  filterMenuTrigger!: MatMenuTrigger;\n  @ViewChild('listMenuTrigger', {static: false})\n  listMenuTrigger!: MatMenuTrigger;\n  @ViewChild('exportMenuTrigger', {static: false})\n  exportMenuTrigger!: MatMenuTrigger;\n  @Input() expandView: boolean;\n  @Input() title: any;\n  @Input() dataList: any;\n  @Input() columnsList: any;\n  @Input() query: any;\n  @Input() fieldMap: any;\n  @Input() existKey: any;\n  @Input() customCols: any;\n  @Input() showHeaderUpperCase: any;\n  @Input() itemPerPage: any;\n  @Input() defaultSort: any;\n  @Input() isFilterTable = false;\n  @Input() filterSource: any;\n  @Input() filterSubSource: any;\n  @Input() filterKey: any;\n  @Input() filterSubKey: any;\n  @Input() pageSize = 5;\n  @Input() tableOptions: any = {showColFilter: true, refreshData: true};\n  @Output() colfilterUpdate = new EventEmitter();\n  @Output() hyperlinkCallback = new EventEmitter();\n  @Output() refreshCallback = new EventEmitter();\n\n  /*customCols=[\n    { col: 'isCompliant', htmlCols: { true: ''}}\n  ]*/\n\n  private searchedColName: any;\n\n  constructor(private loaderService: LoaderService, private toast: MyToastrService,\n              private commonService: CommonService,\n              private baseService: BaseRequestService) { }\n\n  columnFilter(val: any, col: any): void {\n    this.searchedColName = col;\n    this.colfilterUpdate.next({value: val, col});\n    this.colFilters.push({key: col, name: col, value: val});\n  }\n  removeFilter(filter: any): void {\n    this.colFilters.forEach((obj: { key: string | number; }, index: any) => {\n      if (filter.key === obj.key) { this.colfilter[obj.key] = ''; this.colFilters.splice(index, 1); }\n    });\n    this.colfilterUpdate.emit({value: '', col: filter.key});\n  }\n\n  isTextCenterCol(col: string): boolean {\n    if (!this.customCols) { return false; }\n    const filter = this.customCols.filter((x: any) => x.col === col);\n    if (filter.length) {\n      return (filter[0].isCenter);\n    }\n    return false;\n  }\n\n  isExistCustomCols(col: string): boolean {\n    if (!this.customCols) { return false; }\n    const filter = this.customCols.filter((x: any) => x.col === col);\n    return filter.length;\n  }\n\n  ngOnInit(): void {\n    if (this.isFilterTable) {\n      this.filterKey = (this.filterKey) ? this.filterKey : this.filterSource[0].value;\n      this.filterSubKey = 'Non Compliant';\n      const data = this.filterSource.filter((x: any) => x.value === this.filterKey)[0].data;\n      this.initiateTable(data);\n      setTimeout(() => { this.updateSubFilterTable({value: this.filterSubKey}); });\n    } else {\n      this.initiateTable(this.dataList);\n    }\n  }\n\n  initiateTable(dataList: any): void {\n    const cols = dataList\n      // tslint:disable-next-line:no-shadowed-variable\n      .reduce((cols: any, row: {}) => {\n        return [...cols, ...Object.keys(row)];\n      }, [])\n      // tslint:disable-next-line:no-shadowed-variable\n      .reduce((cols: string | any[], column: any) => {\n        return cols.includes(column)\n          ? cols\n          : [...cols, column];\n      }, []);\n    // Describe the columns for <mat-table>.\n    if (this.columns === undefined) {\n      this.columns = cols.map((column: string | number) => {\n        return {\n          columnDef: column,\n          header: column,\n          cell: (element: any) => `${(element[column] || element[column] === 0 || element[column] === false)  ? element[column] : element[column] }`\n        };\n      });\n      this.columns.forEach(col => {\n        if (col.isvisible === undefined) {\n          col.isvisible = true;\n        }\n      });\n    }\n\n    if (this.displayedColumns === undefined) {\n      this.displayedColumns = (this.columnsList && this.columnsList.length)\n        ? this.columnsList.slice()\n        : this.columns.map(c => c.columnDef);\n    }\n    this.dataSource = new MatTableDataSource<any>(dataList);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.dataList =  dataList;\n  }\n\n  applyFilter(filterValue: any): void {\n    const fValue = filterValue.target.value;\n    if (this.dataSource) {\n      this.dataSource.filter = fValue.trim().toLowerCase();\n    }\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  isBool(cell: any): boolean {\n    return (cell === 'true' || cell === 'false' || cell === '');\n  }\n\n  hyperLinkCall(row: any, col?: any): any {\n    delete row.highlighted;\n    delete row.hovered;\n    const event = {row, col};\n    this.hyperlinkCallback.emit(event);\n  }\n\n  getProperty(object: any, propertyName: any): any {\n    let parts: any[];\n    let property: string;\n    parts = propertyName.split('.');\n    const length = parts.length;\n    let i: number;\n    property = object;\n    for (i = 0; i < length; i++) {\n      // @ts-ignore\n      property = (property[parts[i]] || property[parts[i]] === 0) ? property[parts[i]] : ''; // @ts-ignore\n      if (property[parts[i]] === 0) { property = property[parts[i]]; }\n    }\n    return property;\n  }\n\n  updateTable($event: any): void {\n    this.dataList = undefined;\n    this.filterKey = $event.value;\n    const dataList = this.filterSource.filter((x: any) => x.value === this.filterKey);\n    this.dataSource.data = dataList[0].data.slice();\n  }\n\n  updateSubFilterTable($event: any): void {\n    this.dataList = undefined;\n    this.filterSubKey = $event.value;\n    const dataList = this.filterSource.filter((x: any) => x.value === this.filterKey);\n    const subDataList = ($event.value === '*')\n      ? dataList[0].data.slice()\n      : dataList[0].data.filter((x: any) => (x.filterc === this.filterSubKey));\n    if (this.dataSource) { this.dataSource.data = subDataList.slice(); }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.value) {\n      this.value = changes.value.currentValue;\n    }\n    if (this.value || this.value === '') {\n      if (this.dataSource) {\n        this.dataSource.filter = this.value.trim().toLowerCase();\n        if (this.dataSource.paginator) {\n          this.dataSource.paginator.firstPage();\n        }\n      }\n    }\n    if (changes.filterSubKey) {\n      this.updateSubFilterTable({value: changes.filterSubKey.currentValue});\n    }\n  }\n  refreshTableData(): void {\n    this.refreshCallback.emit();\n  }\n\n  downloadAsXls(type: string): void {\n    const dateStr = new Date().toLocaleDateString().replace(/\\//g, '_') + '_'\n      + new Date().toLocaleTimeString().replace(/\\:/g, '_');\n    let xlsxParam: any= null;\n    xlsxParam = { query: '', classname: 'Compliance', fieldmap: [], filename: 'Compliance_' + dateStr };\n    xlsxParam.fieldmap = this.fieldMap;\n    this.loaderService.display(true, 'Preparing xlsx file...');\n    let query: any = {};\n    query = Object.assign({}, this.query);\n    if (this.isFilterTable && this.filterKey) { // Global filter\n      query.query.bool.must.push({ exists: { field: `benchmarks.${this.filterKey}` } });\n    }\n    if (this.colFilterQuery && this.colFilterQuery.length && type !== 'full') { // Multi Column filter\n      query.query.bool.filter = [];\n      this.colFilterQuery.forEach((obj: any) => {\n        if (obj.bool.should[0].match) {\n          query.query.bool.must.push(obj);\n        } else {\n          query.query.bool.filter.push(obj);\n        }\n      });\n    }\n    xlsxParam.query = JSON.stringify(query);\n    // this.companyService.companygetxlsxreportApiCompanyIdGetxlsxreportPost(\n    //   { id: this.commonService.currentCompany._id, body: xlsxParam }).subscribe((result: any) => {\n    //     this.loaderService.display(false);\n    //     if (result && result.length && result[0]) {\n    //       window.open(result[1], '_blank');\n    //     } else {\n    //       this.toast.sToast('error', result[1]);\n    //     }\n    //   });\n  }\n\n  drop(event: CdkDragDrop<string[]>): any {\n    const displayedpreviousindex = this.displayedColumns.indexOf(this.columnsList[event.previousIndex]);\n    const displayedcurrentindex = this.displayedColumns.indexOf(this.columnsList[event.currentIndex]);\n    moveItemInArray(this.displayedColumns, displayedpreviousindex , displayedcurrentindex);\n    moveItemInArray(this.columnsList, event.previousIndex , event.currentIndex);\n    const data = this.filterSource.filter((x: any) => x.value === this.filterKey)[0].data;\n    this.initiateTable(data);\n    setTimeout(() => { this.updateSubFilterTable({ value: this.filterSubKey }); });\n  }\n\n  showhide(i: any, list: any): void {\n    this.displayedColumns = [];\n    this.columns.forEach(element => {\n      if (element.header === list) {\n        this.columns.filter((x) => x.header === list)[0].isvisible = !(this.columns.filter((x) => x.header === list)[0].isvisible);\n        element.isvisible = this.columns.filter((x) => x.header === list)[0].isvisible;\n      }\n    });\n    // tslint:disable-next-line:prefer-for-of\n    for (let columnsListindex = 0; columnsListindex < this.columnsList.length; columnsListindex++) {\n      this.columns.forEach(element => {\n        if (element.header === this.columnsList[columnsListindex] && element.isvisible === true) {\n          this.displayedColumns.push(this.columnsList[columnsListindex]);\n        }\n      });\n    }\n    const data = this.filterSource.filter((x: any) => x.value === this.filterKey)[0].data;\n    this.initiateTable(data);\n    setTimeout(() => { this.updateSubFilterTable({ value: this.filterSubKey }); });\n  }\n\n  expandElement(element: any): void {\n    if (this.expandView){\n      this.expandedElement = (this.expandedElement === element) ? null : element;\n    }\n  }\n}\n","<mat-card class=\"table-card mb-2\">\n  <mat-toolbar class=\"table-tools\" role=\"heading\" >\n    <div fxFlex fxLayout fxLayoutAlign=\"start\">\n      <span class=\"fs1\">{{title}}\n        <span class=\"fw3\" *ngIf=\"dataSource && dataSource.data && dataSource.data.length && title\">\n      ({{dataSource.data.length}}) </span></span>\n    </div>\n    <div fxFlex fxLayout fxLayoutAlign=\"end\">\n      <div fxLayout fxLayoutGap=\"15px\" class=\"navigation-items\">\n        <form fxLayout=\"row\" fxLayoutAlign=\"center center\">\n          <mat-form-field class=\"filter-tool mr-3\" *ngIf=\"isFilterTable && filterSource && filterSource.length\">\n            <mat-label>{{title}}</mat-label>\n            <mat-select [multiple]=\"false\" (selectionChange)=\"updateTable($event)\"\n              placeholder=\"\" name=\"filterkey\" [(ngModel)]=\"filterKey\">\n              <mat-option *ngFor=\"let item of filterSource\" [value]=\"item.value\"> {{item.name}} </mat-option>\n            </mat-select>\n          </mat-form-field>\n          <mat-form-field class=\"filter-tool mr-3\" *ngIf=\"isFilterTable && filterSource && filterSource.length\">\n            <mat-label>Status</mat-label>\n            <mat-select [multiple]=\"false\" (selectionChange)=\"updateSubFilterTable($event)\"\n              placeholder=\"\" name=\"filtersubkey\" [(ngModel)]=\"filterSubKey\">\n              <mat-option *ngFor=\"let item of filterSubSource\" [value]=\"item.value\" [id]=\"item.name\"> {{item.name}} </mat-option>\n            </mat-select>\n          </mat-form-field>\n          <mat-form-field class=\"search-tool\" floatLabel=\"never\">\n            <input matInput name=\"valuesearch\" [(ngModel)]=\"value\" (keyup)=\"applyFilter($event)\" placeholder=\"Search\"\n                   autocomplete=\"off\">\n            <button mat-button *ngIf=\"!value || value === ''\" aria-label=\"Search\" matSuffix mat-icon-button>\n              <mat-icon>search</mat-icon>\n            </button>\n            <button mat-button *ngIf=\"value\" matSuffix mat-icon-button aria-label=\"Clear\"\n                    (click)=\"value=''; applyFilter('');\">\n              <mat-icon>close</mat-icon>\n            </button>\n          </mat-form-field>\n          <!--<button mat-icon-button menuOpen=\"false\" matTooltip=\"Filter List\"\n                  *ngIf=\"tableOptions.showColFilter && customCols && customCols.length\"\n                  [matMenuTriggerFor]=\"filterMenu\" #filterMenuTrigger=\"matMenuTrigger\">\n            <mat-icon class=\"mat-18\">filter_list</mat-icon>\n          </button>\n          <mat-menu #filterMenu=\"matMenu\" class=\"col-filters\">\n            <mat-card class=\"filter-card\" (click)=\"$event.stopPropagation();\">\n              <mat-card-header>\n                <mat-card-title>Filter</mat-card-title>\n              </mat-card-header>\n              <mat-card-content>\n                <form>\n                  <ng-container *ngFor=\"let column of columnsList\">\n                    <mat-form-field *ngIf=\"column\" class=\"w-100\">\n                      <input matInput type=\"text\" trim=\"blur\" placeholder=\"Search {{column | camelToHuman: true}}\"\n                             name=\"{{column}}\" [(ngModel)]=\"colfilter[column.columnDef]\"\n                             (input)='columnFilter($any($event.target).value,column.columnDef)'\n                             [disabled]=\"(column.iscolumnSearch === undefined || column.iscolumnSearch===null) ? 'false' : !column.iscolumnSearch \">\n                      <mat-select placeholder=\"Choose filter value\" name=\"{{column.columnDef}}\"\n                                  *ngIf=\"column.selectFilter\" [(ngModel)]=\"colfilter[column.columnDef]\"\n                                  [disabled]=\"(column.iscolumnSearch === undefined || column.iscolumnSearch===null) ? 'false' : !column.iscolumnSearch \"\n                                  (selectionChange)=\"columnFilter($event.value, column.columnDef)\">\n                        <mat-option value=\"\">All</mat-option>\n                        <mat-option *ngFor=\"let val of column.selectFilterArr\"\n                                    [value]=\"val.value\">{{val.name}}</mat-option>\n                      </mat-select>\n                    </mat-form-field>\n                  </ng-container>\n                </form>\n              </mat-card-content>\n            </mat-card>\n          </mat-menu>-->\n\n          <button mat-icon-button menuOpen=\"false\" #listMenuTrigger=\"matMenuTrigger\"\n          [matMenuTriggerFor]=\"belowMenu\" color=\"primary\" matTooltip=\"View Column, Reorder Columns\">\n          <mat-icon>view_column</mat-icon>\n        </button>\n        <mat-menu #belowMenu=\"matMenu\" [hasBackdrop]=\"true\" yPosition=\"below\">\n          <div cdkDropList (cdkDropListDropped)=\"drop($event)\">\n            <div class=\"dhandle\"\n              *ngFor=\"let col of columnsList; let i = index\" cdkDrag>\n              <i class=\"material-icons color_icon\"> drag_handle </i>\n              <mat-checkbox color=\"primary\" [checked]=\"true\" (click)=\"$event.stopPropagation()\"\n              (change)=\"showhide(i, col)\" class=\"left-align\" [id]=\"col\"> {{col | titlecase}} </mat-checkbox>\n            </div>\n          </div>\n        </mat-menu>\n          <div fxFlex fxLayout fxLayoutAlign=\"end\" *ngIf=\"tableOptions.refreshData\">\n            <button class=\"gray\" matSuffix mat-icon-button matTooltip=\"Reload Table Data\" (click)=\"refreshTableData();\"\n                    color=\"primary\" >\n              <mat-icon id=\"rfrbtn{{tableOptions.title}}\">refresh</mat-icon>\n            </button>\n          </div>\n\n          <button id=\"gbtn{{title}}\" color=\"primary\"  matSuffix mat-icon-button *ngIf=\"isFilterTable\"\n                matTooltip=\"Download as XLSx\" [matMenuTriggerFor]=\"xlsMenu\" aria-label=\"download xlsx menu\">\n            <mat-icon class=\"mat-24\">file_download</mat-icon>\n          </button>\n          <mat-menu #xlsMenu=\"matMenu\">\n            <button mat-menu-item id=\"currentSelection\" (click)=\"downloadAsXls('filtered')\">\n              <mat-icon class=\"mat-24\">filter_list</mat-icon>\n              <span>Filtered Data</span>\n            </button>\n            <button mat-menu-item id=\"fullData\" (click)=\"downloadAsXls('full')\">\n              <mat-icon class=\"mat-24\">file_download</mat-icon>\n              <span>Full Data</span>\n            </button>\n          </mat-menu>\n        </form>\n      </div>\n    </div>\n  </mat-toolbar>\n  <mat-chip-list aria-label=\"Column Filters\" class=\"mb10\">\n    <mat-chip *ngFor=\"let filter of colFilters\" (removed)=\"removeFilter(filter)\">\n      {{filter.name}} = *{{filter.value}}* <mat-icon matChipRemove>cancel</mat-icon>\n    </mat-chip>\n  </mat-chip-list>\n  <mat-card-content>\n    <div #MTABLEDIV class=\"overflow-auto\">\n      <table mat-table [dataSource]=\"dataSource\" cdkDropList cdkDropListOrientation=\"horizontal\"\n       (cdkDropListDropped)=\"drop($event)\" matSort class=\"w-100 crud-table\" >\n       <div *ngFor=\"let column of columns; let i = index;\">\n        <ng-container *ngIf=\"column.isvisible\" [matColumnDef]=\"column.columnDef\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header cdkDrag [ngClass]=\"{'text-center': isTextCenterCol(column.header) }\">\n            <span *ngIf=\"showHeaderUpperCase\">{{ column.header| camelToHuman:true | uppercase }}</span>\n            <span *ngIf=\"!showHeaderUpperCase\">{{ column.header|camelToHuman:true }}</span>\n          </th>\n          <td mat-cell *matCellDef=\"let row\" [ngClass]=\"{'text-center': isTextCenterCol(column.header) }\">\n            <ng-container *ngIf=\"customCols && isExistCustomCols(column.header)\">\n              <ng-container *ngFor=\"let c of customCols\">\n                <span *ngIf=\"c.col === column.header\" >\n                  <ng-container *ngIf=\"c.hyperLinkCall\">\n                    <a href=\"javascript:\" (click)=\"hyperLinkCall(row, c.col)\">\n                      <ng-container *ngIf=\"c.hyperLinkCall.filter && c.hyperLinkCall.filter !== ''\">\n                        <span>{{ getProperty(row, c.col) | formatCell:c.hyperLinkCall.filter }} </span>\n                      </ng-container>\n                      <ng-container *ngIf=\"c.hyperLinkCall.isHtml\">\n                        <div [innerHTML]=\"getProperty(row, c.col) | safeHTML\"></div>\n                      </ng-container>\n                      <ng-container *ngIf=\"c.hyperLinkCall.noFilter\">\n                        <span>{{getProperty(row, c.col)}}</span>\n                      </ng-container>\n                    </a>\n                  </ng-container>\n                  <ng-container *ngIf=\"c.htmlCols\">\n                    <div *ngIf=\"isBool(column.cell(row)) && column.cell(row) && column.cell(row) !== 'false'\"\n                       [innerHTML]=\"c.htmlCols['_success'] | safeHTML\"></div>\n                    <div *ngIf=\"isBool(column.cell(row)) && (!column.cell(row) || column.cell(row) === 'false')\"\n                         [innerHTML]=\"c.htmlCols['_failure'] | safeHTML\"></div>\n                    <div *ngIf=\"!isBool(column.cell(row)) && c.htmlCols[column.cell(row)]\"\n                         [innerHTML]=\"c.htmlCols[column.cell(row)] | safeHTML\"></div>\n                  </ng-container>\n                  <ng-container *ngIf=\"c.filter && c.filter !== ''\">\n                    <span  *ngIf=\"c.filter.indexOf('ellipsis') === -1\">{{ column.cell(row) | formatCell:c.filter }} </span>\n                    <span *ngIf=\"c.filter.indexOf('ellipsis') > -1\"\n                          [matTooltip]=\"column.cell(row)\">{{ column.cell(row) | formatCell:c.filter }} </span>\n                  </ng-container>\n                  <ng-container *ngIf=\"c.isHtml\">\n                    <div [innerHTML]=\"column.cell(row) | safeHTML\"></div>\n                  </ng-container>\n                </span>\n              </ng-container>\n            </ng-container>\n            <ng-container *ngIf=\"!customCols || !isExistCustomCols(column.header)\">{{ column.cell(row) }}</ng-container>\n          </td>\n\n        </ng-container>\n      </div>\n        <!-- Star Column -->\n        <ng-container matColumnDef=\"star\" stickyEnd>\n          <th mat-header-cell *matHeaderCellDef></th>\n          <td mat-cell *matCellDef=\"let element\">\n            <mat-icon>more_vert</mat-icon>\n          </td>\n        </ng-container>\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n      <mat-paginator class=\"t-paginator\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"[5, 10, 25, 50, 100, 200 ]\"></mat-paginator>\n    </div>\n  </mat-card-content>\n</mat-card>\n","import { NgModule } from '@angular/core';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport {\n  CamelToHumanPipe, DaysHoursSecondsPipe, BytesConvertFilterPipe, EpochToDateFilterPipe, StrToMacPipe, SafePipe, ArrayOrderByPipe,\n  FormatTrafficUnitsPipe, DateAgoPipe, FormatCellPipe, UniqueFilterPipe, ArrayToStrPipe, TimeFormat, DateFormat, DateAndTimeFormat,\n  CveToDateFilterPipe, MacFilterPipe, AssessmentDateFilterPipe, SplitPipe, FilterPipe, LinkifyPipe, ArrayToStrEllipsisPipe, SearchPipe,\n  SafeHTMLPipe, TimeAgoPipe, ArraySortPipe, EllipsisPipe, ShortNumberPipe, UtcToLocale, FileNameFilterPipe, MaskPasswordFilterPipe,\n  ArrayToObjWithEllipsisPipe\n} from './app.filter.pipe';\n\n@NgModule({\n  declarations: [\n    CamelToHumanPipe,\n    DaysHoursSecondsPipe,\n    BytesConvertFilterPipe,\n    EpochToDateFilterPipe,\n    StrToMacPipe,\n    SafePipe, MacFilterPipe, ArrayOrderByPipe, AssessmentDateFilterPipe, SplitPipe, ArrayToStrEllipsisPipe, SearchPipe,\n    FormatTrafficUnitsPipe, SafeHTMLPipe, TimeAgoPipe, ArraySortPipe, EllipsisPipe, ShortNumberPipe, UtcToLocale,\n    FileNameFilterPipe, MaskPasswordFilterPipe, ArrayToObjWithEllipsisPipe,\n    DateAgoPipe,\n    FormatCellPipe,\n    UniqueFilterPipe,\n    ArrayToStrPipe,\n    TimeFormat,\n    DateFormat,\n    DateAndTimeFormat,\n    CveToDateFilterPipe, FilterPipe, LinkifyPipe\n  ],\n  imports: [CommonModule],\n    exports: [\n        CamelToHumanPipe,\n        DaysHoursSecondsPipe,\n        BytesConvertFilterPipe,\n        EpochToDateFilterPipe,\n        StrToMacPipe,\n        SafePipe, MacFilterPipe, ArrayOrderByPipe, AssessmentDateFilterPipe, SplitPipe, ArrayToStrEllipsisPipe, SearchPipe,\n        FormatTrafficUnitsPipe, SafeHTMLPipe, TimeAgoPipe, ArraySortPipe,\n        FileNameFilterPipe, MaskPasswordFilterPipe, ArrayToObjWithEllipsisPipe,\n        DateAgoPipe,\n        FormatCellPipe,\n        UniqueFilterPipe,\n        ArrayToStrPipe,\n        TimeFormat,\n        DateFormat,\n        DateAndTimeFormat,\n        CveToDateFilterPipe,\n        FilterPipe, LinkifyPipe, EllipsisPipe, ShortNumberPipe, UtcToLocale\n    ],\n  providers: [DatePipe, FilterPipe, DateAgoPipe, BytesConvertFilterPipe, ArrayOrderByPipe, SearchPipe]\n})\nexport class AppFilterPipeModule {\n}\n","import {Component} from '@angular/core';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\n\n@Component({\n  selector: 'app-s-exp-table',\n  templateUrl: './s-exp-table.component.html',\n  styleUrls: ['./s-exp-table.component.scss'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\n\nexport class SExpTableComponent {\n  dataSource = ELEMENT_DATA;\n  columnsToDisplay = ['name', 'weight', 'symbol', 'position'];\n  expandedElement: any[] = [];\n}\n\nconst ELEMENT_DATA: any[] = [\n  {\n    position: 1,\n    name: 'Hydrogen',\n    weight: 1.0079,\n    symbol: 'H',\n    description: `Hydrogen is a chemical element with symbol H and atomic number 1. With a standard\n        atomic weight of 1.008, hydrogen is the lightest element on the periodic table.`\n  }, {\n    position: 2,\n    name: 'Helium',\n    weight: 4.0026,\n    symbol: 'He',\n    description: `Helium is a chemical element with symbol He and atomic number 2. It is a\n        colorless, odorless, tasteless, non-toxic, inert, monatomic gas, the first in the noble gas\n        group in the periodic table. Its boiling point is the lowest among all the elements.`\n  }, {\n    position: 3,\n    name: 'Lithium',\n    weight: 6.941,\n    symbol: 'Li',\n    description: `Lithium is a chemical element with symbol Li and atomic number 3. It is a soft,\n        silvery-white alkali metal. Under standard conditions, it is the lightest metal and the\n        lightest solid element.`\n  }, {\n    position: 4,\n    name: 'Beryllium',\n    weight: 9.0122,\n    symbol: 'Be',\n    description: `Beryllium is a chemical element with symbol Be and atomic number 4. It is a\n        relatively rare element in the universe, usually occurring as a product of the spallation of\n        larger atomic nuclei that have collided with cosmic rays.`\n  }, {\n    position: 5,\n    name: 'Boron',\n    weight: 10.811,\n    symbol: 'B',\n    description: `Boron is a chemical element with symbol B and atomic number 5. Produced entirely\n        by cosmic ray spallation and supernovae and not by stellar nucleosynthesis, it is a\n        low-abundance element in the Solar system and in the Earth's crust.`\n  }, {\n    position: 6,\n    name: 'Carbon',\n    weight: 12.0107,\n    symbol: 'C',\n    description: `Carbon is a chemical element with symbol C and atomic number 6. It is nonmetallic\n        and tetravalent—making four electrons available to form covalent chemical bonds. It belongs\n        to group 14 of the periodic table.`\n  }, {\n    position: 7,\n    name: 'Nitrogen',\n    weight: 14.0067,\n    symbol: 'N',\n    description: `Nitrogen is a chemical element with symbol N and atomic number 7. It was first\n        discovered and isolated by Scottish physician Daniel Rutherford in 1772.`\n  }, {\n    position: 8,\n    name: 'Oxygen',\n    weight: 15.9994,\n    symbol: 'O',\n    description: `Oxygen is a chemical element with symbol O and atomic number 8. It is a member of\n         the chalcogen group on the periodic table, a highly reactive nonmetal, and an oxidizing\n         agent that readily forms oxides with most elements as well as with other compounds.`\n  }, {\n    position: 9,\n    name: 'Fluorine',\n    weight: 18.9984,\n    symbol: 'F',\n    description: `Fluorine is a chemical element with symbol F and atomic number 9. It is the\n        lightest halogen and exists as a highly toxic pale yellow diatomic gas at standard\n        conditions.`\n  }, {\n    position: 10,\n    name: 'Neon',\n    weight: 20.1797,\n    symbol: 'Ne',\n    description: `Neon is a chemical element with symbol Ne and atomic number 10. It is a noble gas.\n        Neon is a colorless, odorless, inert monatomic gas under standard conditions, with about\n        two-thirds the density of air.`\n  },\n];\n\n\n","<table mat-table\n       [dataSource]=\"dataSource\" multiTemplateDataRows\n       class=\"crud-table mat-elevation-z8\">\n  <ng-container matColumnDef=\"{{column}}\" *ngFor=\"let column of columnsToDisplay\">\n    <th mat-header-cell *matHeaderCellDef> {{column}} </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element[column]}} </td>\n  </ng-container>\n\n  <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n  <ng-container matColumnDef=\"expandedDetail\">\n    <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\">\n      <div class=\"example-element-detail\"\n           [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n        <div class=\"example-element-diagram\">\n          <div class=\"example-element-position\"> {{element.position}} </div>\n          <div class=\"example-element-symbol\"> {{element.symbol}} </div>\n          <div class=\"example-element-name\"> {{element.name}} </div>\n          <div class=\"example-element-weight\"> {{element.weight}} </div>\n        </div>\n        <div class=\"example-element-description\">\n          {{element.description}}\n          <span class=\"example-element-description-attribution\"> -- Wikipedia </span>\n        </div>\n      </div>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n  <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay;\"\n      class=\"example-element-row\"\n      [class.example-expanded-row]=\"expandedElement === element\"\n      (click)=\"expandedElement = expandedElement === element ? null : element\">\n  </tr>\n  <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n</table>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { BaseRequestService } from 'src/app/_services/base.service';\nimport { LoaderService } from 'src/app/_services/loader.service';\nimport { MyToastrService } from 'src/app/_services/toastr.service';\n\n@Component({\n  selector: 'app-suppress-vuls-days',\n  templateUrl: './suppress-vuls-days.component.html',\n  styleUrls: ['./suppress-vuls-days.component.scss']\n})\nexport class SuppressVulsDaysComponent implements OnInit {\n  @Input() companyid: any;\n  snoozeDays = 0;\n  constructor(private loaderService: LoaderService, private baseService: BaseRequestService, private toast: MyToastrService) { }\n\n  ngOnInit(): void {\n    this.getSnoozeDays();\n  }\n\n  getSnoozeDays(): void {\n    const params: any = {};\n    if (this.companyid) { params.companyid = this.companyid; }\n    this.loaderService.display(true, 'Getting snooze days...');\n    this.baseService.doRequest('/api/cyberutils/getSnoozedays', 'post', params).subscribe((data: any) => {\n      this.loaderService.display(false);\n      if (data[0]) {\n        this.snoozeDays = data[1];\n      } else {\n        this.toast.sToast('error', data[1]);\n      }\n    });\n  }\n\n  setSnoozeDays(days: number): void {\n    const params: any = {snoozeDays: days};\n    if (this.companyid) { params.companyid = this.companyid; }\n    this.loaderService.display(true, 'Updating...');\n    this.baseService.doRequest(`/api/cyberutils/setSnoozedays`, 'POST', params).subscribe((result: any) => {\n      this.loaderService.display(false);\n      if (result[0]) {\n        this.toast.sToast('success', 'Snooze days updated successfully');\n      } else {\n        this.toast.sToast('error', result[1]);\n      }\n    });\n  }\n}\n","<div class=\"card\">\n  <div class=\"card-body p--5\">\n    <div class=\"mb-0\">\n      <form #suppressForm=\"ngForm\" class=\"mt20\">\n        <mat-form-field class=\"col-lg-6\" appearance=\"outline\">\n          <input matInput min=\"0\" placeholder=\"Snooze Days\" name=\"suppress\" [(ngModel)]=\"snoozeDays\"\n                 matTooltip=\"No of days to suppress vulnerabilities after initial release.\" type=\"number\" required>\n          <mat-hint>{{snoozeDays}} day(s) to suppress vulnerabilities after initial release. </mat-hint>\n        </mat-form-field>\n        <button mat-raised-button color=\"primary\" [disabled]=\"!suppressForm.form.valid\"\n                class=\"ml20 mr20 mat-small p2\" (click)=\"setSnoozeDays(snoozeDays)\">Update\n        </button>\n      </form>\n    </div>\n  </div>\n</div>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AppFilterPipeModule} from '../_filters/app.filter-pipe.module';\nimport {ConfirmDialogComponent} from './confirm-dialog/confirm-dialog.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {MaterialModule} from '../material.module';\nimport {NgxMaterialTimepickerModule} from 'ngx-material-timepicker';\nimport {PnfComponent} from './pnf/pnf.component';\nimport {UnauthorizedComponent} from './unauthorized/unauthorized.component';\nimport {STableComponent} from './s-table/s-table.component';\nimport {ModalComponent} from './modal.component';\nimport {TableComponent} from './table/table.component';\nimport {SShimmerComponent} from './s-shimmer/s-shimmer.component';\nimport {SExpTableComponent} from './s-exp-table/s-exp-table.component';\nimport {DynamicFormComponent} from './forms/dynamic-form/dynamic-form.component';\nimport {DynamicControlComponent} from './forms/dynamic-control/dynamic-control.component';\nimport {CustomCalendarComponent} from './forms/custom-calendar/custom-calendar.component';\nimport {PillCardComponent} from './pill-card/pill-card.component';\nimport {SCrudTComponent} from './s-crud-t/s-crud-t.component';\nimport {STShimmerComponent} from './s-t-shimmer/s-t-shimmer.component';\nimport {NgxMatSelectSearchModule} from 'ngx-mat-select-search';\nimport {NgMultiSelectDropDownModule} from 'ng-multiselect-dropdown';\nimport {VulnerabilityStatsComponent} from './vulnerability-stats/vulnerability-stats.component';\nimport {VulnerabilityOverviewComponent} from './vulnerability-overview/vulnerability-overview.component';\nimport { SuppressVulsDaysComponent } from './suppress-vuls-days/suppress-vuls-days.component';\nimport { TableNewComponent } from './table-new/table-new.component';\n\n@NgModule({\n  declarations: [\n    ConfirmDialogComponent,\n    PnfComponent, UnauthorizedComponent,\n    STableComponent,\n    ModalComponent,\n    TableComponent,\n    TableNewComponent,\n    SShimmerComponent,\n    SExpTableComponent,\n    DynamicFormComponent,\n    DynamicControlComponent,\n    CustomCalendarComponent,\n    PillCardComponent,\n    SCrudTComponent,\n    STShimmerComponent,\n    VulnerabilityStatsComponent,\n    VulnerabilityOverviewComponent,\n    SuppressVulsDaysComponent,\n  ],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxMaterialTimepickerModule,\n    FlexLayoutModule,\n    AppFilterPipeModule,\n    NgxMatSelectSearchModule,\n    NgMultiSelectDropDownModule.forRoot(),\n  ],\n    exports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        FlexLayoutModule,\n        MaterialModule,\n        ConfirmDialogComponent,\n        PnfComponent, UnauthorizedComponent,\n        STableComponent,\n        TableComponent,\n        TableNewComponent,\n        ModalComponent,\n        SShimmerComponent,\n        SExpTableComponent,\n        DynamicFormComponent,\n        DynamicControlComponent,\n        CustomCalendarComponent, PillCardComponent, SCrudTComponent, STShimmerComponent,\n        VulnerabilityOverviewComponent,\n\t      SuppressVulsDaysComponent,\n    ],\n  entryComponents: [ConfirmDialogComponent]\n})\n\nexport class SharedModule {\n}\n","import {Injectable} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormControlService {\n  constructor() {\n  }\n\n  toFormGroup(controls: any): any {\n    const group: any = {};\n    controls.forEach((control: any) => {\n      group[control.key] = control.required ? new FormControl(control.value || '', Validators.required)\n        : new FormControl(control.value || '');\n    });\n    return new FormGroup(group);\n  }\n\n  toFormControl(control: any): any {\n    const group: any = {};\n    group[control.key] = control.required ? new FormControl(control.value || '', Validators.required)\n      : new FormControl(control.value || '');\n    return new FormGroup(group);\n  }\n}\n","<mat-card class=\"o-loading mb-2\">\n  <mat-card-content class=\"o-loading__body\">\n    <table class=\"mat-table table w-100\">\n      <thead><tr class=\"mat-header-row\">\n        <th class=\"mat-header-cell\"><p class=\"shimmer-box w-100\"></p></th>\n        <th class=\"mat-header-cell\"><p class=\"shimmer-box w-100\"></p></th>\n        <th class=\"mat-header-cell\"><p class=\"shimmer-box w-100\"></p></th>\n        <th class=\"mat-header-cell\"><p class=\"shimmer-box w-100\"></p></th>\n        <th class=\"mat-header-cell\"><p class=\"shimmer-box w-100\"></p></th>\n      </tr></thead>\n      <tbody><tr *ngFor=\"let row of [1, 2, 3]\">\n        <td class=\"mat-cell\"><p class=\"shimmer-box w-100\"></p></td>\n        <td class=\"mat-cell\"><p class=\"shimmer-box w-100\"></p></td>\n        <td class=\"mat-cell\"><p class=\"shimmer-box w-100\"></p></td>\n        <td class=\"mat-cell\"><p class=\"shimmer-box w-100\"></p></td>\n        <td class=\"mat-cell\"><p class=\"shimmer-box w-100\"></p></td>\n      </tr></tbody>\n    </table>\n  </mat-card-content>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-s-t-shimmer',\n  templateUrl: './s-t-shimmer.component.html',\n  styleUrls: ['./s-t-shimmer.component.scss']\n})\nexport class STShimmerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card class=\"mb-2 light-theme ibtn\" *ngIf=\"vulnerabilityOverviewData && vulnerabilityOverviewData.length && !currentVStat\">\n  <mat-card-header>\n    <h3 class=\"mb-2\">Vulnerability Overview</h3>\n  </mat-card-header>\n  <mat-card-content>\n    <app-sa-table [showHeaderUpperCase]=\"showUpper\" [title]=\"'Vulnerabilities by Operating System'\"\n                  (refreshCallback)=\"getVulnerabilityOverview()\"\n                  (hyperlinkCallback)=\"getVulnerabilityProductOverview($event)\"\n                  [customCols]=\"vulnerabilityOverviewCustomCols\"\n                  [columnsList]=\"vulnerabilityOverviewCols\"\n                  [dataList]=\"vulnerabilityOverviewData\"\n                  [pageSize]= \"pageSize\"\n                  >\n    </app-sa-table>\n    <p class=\"py-2\" *ngIf=\"!vulnerabilityOverviewData || !vulnerabilityOverviewData.length\" class=\"text-center\"> No data available. </p>\n  </mat-card-content>\n</mat-card>\n<mat-sidenav-container class=\"h-100vh\" (backdropClick)=\"close('backdrop')\">\n  <mat-sidenav-content>\n    <mat-card *ngIf=\"vulnerabilityOverviewCustomCols && vulnerabilityOverviewCustomCols.length && currentVStat\">\n      <button class=\"float-right\" mat-icon-button aria-label=\"close modal icon\" matTooltip=\"Close\" (click)=\"closeView();\">\n        <mat-icon>close</mat-icon> </button>\n      <mat-form-field class=\"position-absolute r-5p mat-small fw3 w-25 float-right mr-2\">\n        <mat-label>Severity</mat-label>\n        <mat-select [multiple]=\"false\" name=\"severity\" (ngModelChange)=\"updateSeverityData($event)\"\n          placeholder=\"Choose Severity\" [(ngModel)]=\"currentVStat.severity\">\n          <mat-option *ngFor=\"let item of vulnerabilityOverviewCustomCols;\" [value]=\"item.col\"> {{item.col}} </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <mat-card-header>\n        <mat-card-title>{{currentVStat.os}}</mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <div class=\"d-flex flex-row\">\n          <span class=\"w-30p mt-2\">\n            <mat-list dense class=\" bor-1\">\n              <mat-list-item class=\"\" [ngClass]=\"{'bb-1': prodList && prodList.length }\">\n                <span class=\"\">Product Name</span>\n                <span class=\"spacer\"></span>\n                <span class=\"\">Vulnerabilities</span>\n              </mat-list-item>\n              <mat-list-item class=\"bb-1 pointer \" [ngClass]=\"{'active ': currentProduct === prod}\"\n                *ngFor=\"let prod of prodList; let last = last;\" (click)=\"getVulnerabilities(prod)\">\n                <span>{{prod}}</span>\n                <span class=\"spacer\"></span>\n                <span class=\"badge badge-primary fs--8\">{{vulnerabilityProductOverviewData[prod]}}</span>\n              </mat-list-item>\n            </mat-list>\n          </span>\n          <span class=\"ml-2 w-70p mt-2\" *ngIf=\"vulnerabilityListData && vulnerabilityListData.length\">\n            <app-sa-table class=\"w-100\" [showHeaderUpperCase]=\"showUpper\" [title]=\"'Vulnerabilities'\"\n                      (refreshCallback)=\"getVulnerabilities(currentProduct)\"\n                      (hyperlinkCallback)=\"getCompanyAssetOverview($event)\"\n                      [customCols]=\"vulnerabilityListCustomCols\"\n                      [columnsList]=\"vulnerabilityListCols\"\n                      [dataList]=\"vulnerabilityListData\">\n            </app-sa-table>\n          </span>\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </mat-sidenav-content>\n  <mat-sidenav #snav [mode]=\"'over'\" fixedTopGap=\"56\" position=\"end\"  class=\"w-70p z-index-150\">\n    <mat-card class=\"w-100\" *ngIf=\"currentCVE\">\n      <button class=\"float-right r-1p mt--10\" mat-icon-button aria-label=\"close modal icon\" matTooltip=\"Close\"\n              (click)=\"snav.close();\">\n        <mat-icon>close</mat-icon>\n      </button>\n      <mat-card-header>\n        <mat-card-title class=\"fs1 fw2 mr-4\"> {{currentCVE.CVEID}} - {{currentProduct}}</mat-card-title>\n      </mat-card-header>\n      <mat-card-content class=\"overflow-auto\">\n        <div class=\"main-section mt-2\">\n          <p class=\"pb-2\">{{currentCVE.title}}</p>\n          <mat-list dense class=\"w-100 bor-1\">\n            <mat-list-item class=\"bb-1\">\n              <span class=\"w-25\">Severity:</span>\n              <span class=\"badge px-1 py-1 shigh\" *ngIf=\"currentCVE.severity.toUpperCase()==='HIGH'\">{{currentCVE.severity|uppercase}}</span>\n              <span class=\"badge px-1 py-1 smedium\" *ngIf=\"currentCVE.severity.toUpperCase()==='MEDIUM'\">{{currentCVE.severity|uppercase}}</span>\n              <span class=\"badge px-1 py-1 scritical\" *ngIf=\"currentCVE.severity.toUpperCase()==='CRITICAL'\">{{currentCVE.severity|uppercase}}</span>\n              <span class=\"badge px-1 py-1 slow\" *ngIf=\"currentCVE.severity.toUpperCase()==='LOW'\">{{currentCVE.severity|uppercase}}</span>\n            </mat-list-item>\n            <mat-list-item class=\"bb-1\">\n              <span class=\"w-25 float-left\">Base Score:</span>\n              <span class=\"badge px-1 py-1 scritical\">{{currentCVE.base_score}}</span>\n            </mat-list-item>\n            <mat-list-item class=\"bb-1\">\n              <span class=\"w-25 float-left\">Exploitability Score:</span>\n              <span class=\"badge px-1 py-1 scritical\">{{currentCVE.exploit_score}}</span>\n            </mat-list-item>\n            <mat-list-item>\n              <span class=\"w-25 float-left\">Impact Score:</span>\n              <span class=\"badge px-1 py-1 scritical\">{{currentCVE.impact_score}}</span>\n            </mat-list-item>\n          </mat-list>\n        </div>\n        <div *ngFor=\"let d of currentCVE.data\" class=\"mb-3\">\n          <p class=\"font-weight-light mt-4 mb-1\">{{d.companyRef.name}}'s Affected Asset(s) ({{d.assets.length}})</p>\n          <mat-list dense class=\"w-100 bor-1 small\">\n            <mat-list-item *ngFor=\"let asset of d.assets; let last = last;\" [ngClass]=\"{'bb-1': !last}\"\n                           class=\"\">\n              <a href=\"javascript:\" class=\"pointer to-e mb5 mr5\" (click)=\"redirectToAsset(d.companyRef, asset)\">{{asset.name}}</a>\n            </mat-list-item>\n            <mat-list-item *ngIf=\"!d.assets || !d.assets.length\">\n             <i class=\"fa fa-check-circle text-success fa-lg mr-1\"></i>  All good, no assets affected.\n            </mat-list-item>\n          </mat-list>\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </mat-sidenav>\n</mat-sidenav-container>\n\n","import {Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {LoaderService} from '../../_services/loader.service';\nimport {BaseRequestService} from '../../_services/base.service';\nimport {MyToastrService} from '../../_services/toastr.service';\nimport {MatSidenav} from '@angular/material/sidenav';\nimport {CommonService} from '../../_services/common.services';\n\n@Component({\n  selector: 'app-vulnerability-overview',\n  templateUrl: './vulnerability-overview.component.html',\n  styleUrls: ['./vulnerability-overview.component.scss']\n})\n\nexport class VulnerabilityOverviewComponent implements OnInit {\n  @Input() currentCompany: any;\n  @Input() mode: any;\n  @ViewChild('snav', {static: true}) snav: MatSidenav;\n  Objectkeys = Object.keys;\n  vulnerabilityOverviewData: any;\n  prodList: any;\n  vulnerabilityProductOverviewData: any;\n  vulnerabilityListData: any;\n  showUpper = true;\n  pageSize = 50;\n  currentVStat: any;\n  currentProduct: any;\n  severityHtmlCols = {\n    Critical: `<span class=\" fw4  px-1 badge scritical\">CRITICAL</span>`,\n    High: `<span class=\" fw4  px-1 badge shigh\">HIGH</span>`,\n    Medium: `<span class=\" fw4  px-1 badge smedium\">MEDIUM</span>`,\n    Low: `<span class=\" fw4  px-1 badge slow\">LOW</span>`,\n    Info: `<span class=\" fw4  px-1 badge sinfo\">INFO</span>`\n  };\n  vulnerabilityListCols: any = ['CVEID', 'title', 'severity', 'base_score',\n    'impact_score', 'exploit_score', 'affected_assets'];\n  vulnerabilityListCustomCols: any = [\n    {col: 'CVEID', hyperLinkCall: {noFilter: true}},\n    {col: 'title', filter: 'ellipsis:25'},\n    {\n      col: 'severity', isKeyword: true, header: 'Severity', htmlCols: this.severityHtmlCols,\n      colFilters: {type: 'text', hKey: true}, noFilter: false\n    },\n    {col: 'affected_assets', hyperLinkCall: {noFilter: true}},\n  ];\n  vulnerabilityOverviewCols: any = ['os', 'Critical', 'High', 'Medium', 'Low', 'risk_score'];\n  vulnerabilityOverviewCustomCols: any = [\n    {col: 'Critical', hyperLinkCall: {noFilter: true}},\n    {col: 'High', hyperLinkCall: {noFilter: true}},\n    {col: 'Medium', hyperLinkCall: {noFilter: true}},\n    {col: 'Low', hyperLinkCall: {noFilter: true}}\n  ];\n  view: string;\n  currentCVE: any;\n\n  constructor(private loaderService: LoaderService, private commonService: CommonService,\n              private baseService: BaseRequestService, private toast: MyToastrService) {\n  }\n\n  getVulnerabilityOverview(): void {\n    if (!this.mode && !this.currentCompany) {\n      setTimeout(() => this.getVulnerabilityOverview(), 2000);\n      return;\n    }\n    if (this.mode === 'global') {\n      this.currentCompany = {_id: '', name: ''};\n    }\n    this.loaderService.display(true, 'Getting vulnerability stat overview...');\n    this.baseService.doRequest(`/api/company/imaws/getVulnerabilityOsView`, 'post',\n      {companyId: this.currentCompany._id}).subscribe((result: any) => {\n      this.loaderService.display(false);\n      if (result[0]) {\n        this.vulnerabilityOverviewData = result[1];\n      } else {\n        this.toast.sToast('error', result[1]);\n      }\n    });\n  }\n\n  updateSeverityData(severity: string): void {\n    this.getVulnerabilityProductOverview({row: this.currentVStat, col: severity});\n  }\n\n  getVulnerabilityProductOverview($event: any): void {\n    if (!$event.row[$event.col]) {\n      this.toast.sToast('info', `No ${$event.col} vulnerabilities found!`);\n      return;\n    }\n    this.currentVStat = $event.row;\n    this.currentVStat.severity = $event.col;\n    this.loaderService.display(true, 'Getting vulnerability product overview...');\n    const params: any = {companyId: this.currentCompany._id, os: $event.row.os, severity: $event.col};\n    this.baseService.doRequest(`/api/company/imaws/getVulnerabilityProductView`, 'post',\n      params).subscribe((result: any) => {\n      this.loaderService.display(false);\n      if (result[0]) {\n        if (result[1] && result[1].length) {\n          this.vulnerabilityProductOverviewData = result[1][0];\n          this.prodList = this.Objectkeys(result[1][0]);\n          this.getVulnerabilities(this.prodList[0]);\n        }\n      } else {\n        this.toast.sToast('error', result[1]);\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.getVulnerabilityOverview();\n  }\n\n  getVulnerabilities(prod: string): void {\n    this.currentProduct = prod;\n    this.loaderService.display(true, 'Getting vulnerability overview...');\n    this.vulnerabilityListData = undefined;\n    const params: any = {\n      companyId: this.currentCompany._id, os: this.currentVStat.os, severity: this.currentVStat.severity,\n      productName: prod\n    };\n    this.baseService.doRequest(`/api/company/imaws/getVulnerabilityView`, 'post',\n      params).subscribe((result: any) => {\n      this.loaderService.display(false);\n      if (result[0]) {\n        result[1].forEach((obj: any, index: number) => {\n          obj.CVEID = obj.vul_id;\n          obj.affected_assets = 0;\n          obj.affected_assets = obj.data.map((x: any) => x.assets.length).reduce((a: any, b: any) => a + b, 0);\n          result[1][index] = {...obj, ...obj.score};\n        });\n        this.vulnerabilityListData = result[1];\n      } else {\n        this.toast.sToast('error', result[1]);\n      }\n    });\n  }\n\n  closeView(): void {\n    this.currentVStat = undefined;\n    this.currentProduct = undefined;\n    this.currentCVE = undefined;\n    this.vulnerabilityListData = [];\n  }\n\n  getCompanyAssetOverview($event: any): void {\n    this.currentCVE = $event.row;\n    this.snav.open();\n  }\n\n  close(back?: any): void {\n    if (back) {\n      return;\n    }\n    this.currentCVE = undefined;\n    this.snav.close();\n  }\n\n  redirectToAsset(company: any, asset: any): any {\n    localStorage.setItem('cmp', company.name);\n    this.commonService.currentCompany = this.commonService.cHash[company.id];\n    localStorage.setItem('newTab', 'cveAssets');\n    localStorage.setItem('asset', asset.id);\n    window.open('/company/companies', '_blank');\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {CanActivate,  Router} from '@angular/router';\nimport {AuthenticationService} from '../_services/authentication.service';\n\n@Injectable({providedIn: 'root'})\nexport class AuthGuard implements CanActivate {\n  constructor(private router: Router, public authenticationService: AuthenticationService) {\n  }\n\n  canActivate(): boolean {\n    if (!this.authenticationService.isAuthenticated) {\n      if ( window.location.pathname !== '' && window.location.pathname !== '/' && window.location.pathname !== '/login') {\n        localStorage.setItem('path', window.location.pathname);\n      }\n      this.router.navigateByUrl('/login').then(() => console.log('redirecting to login'));\n      return false;\n    }\n    // TODO additional logic will be coming in future\n    return this.authenticationService.isAuthenticated;\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'ccnsv2';\n  onAction1(): void {\n\n  }\n}\n","<router-outlet></router-outlet>\n","/* tslint:disable */\n/* eslint-disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ApiConfiguration } from './api-configuration';\n\n/**\n * Base class for services\n */\n@Injectable()\nexport class BaseService {\n  constructor(\n    protected config: ApiConfiguration,\n    protected http: HttpClient\n  ) {\n  }\n\n  private _rootUrl: string = '';\n\n  /**\n   * Returns the root url for all operations in this service. If not set directly in this\n   * service, will fallback to `ApiConfiguration.rootUrl`.\n   */\n  get rootUrl(): string {\n    return this._rootUrl || this.config.rootUrl;\n  }\n\n  /**\n   * Sets the root URL for API operations in this service.\n   */\n  set rootUrl(rootUrl: string) {\n    this._rootUrl = rootUrl;\n  }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {DatePipe} from '@angular/common';\nimport {DomSanitizer, SafeHtml, SafeUrl} from '@angular/platform-browser';\nimport linkifyStr from 'linkifyjs/string';\nimport {orderBy} from 'lodash';\n\n@Pipe({\n  name: 'shortNumber'\n})\n\nexport class ShortNumberPipe implements PipeTransform {\n\n  transform(num: number, args?: any): any {\n    if (isNaN(num)) {\n      return num;\n    } // will only work value is a number\n    if (num === null) {\n      return num;\n    }\n    if (num === 0) {\n      return num;\n    }\n    let abs = Math.abs(num);\n    const rounder = Math.pow(10, 1);\n    const isNegative = num < 0; // will also work for Negative numbers\n    let key = '';\n\n    const powers = [\n      {key: 'Q', value: Math.pow(10, 15)},\n      {key: 'T', value: Math.pow(10, 12)},\n      {key: 'B', value: Math.pow(10, 9)},\n      {key: 'M', value: Math.pow(10, 6)},\n      {key: 'K', value: 1000}\n    ];\n\n    for (const item of powers) {\n      let reduced = abs / item.value;\n      reduced = Math.round(reduced * rounder) / rounder;\n      if (reduced >= 1) {\n        abs = reduced;\n        key = item.key;\n        break;\n      }\n    }\n    return (isNegative ? '-' : '') + abs + key;\n  }\n}\n\n@Pipe({\n  name: 'sortBy',\n  pure: true\n})\n/*\n *ngFor=\"let c of oneDimArray | sortBy:'asc'\"\n *ngFor=\"let c of arrayOfObjects | sortBy:'asc':'propertyName'\"\n*/\nexport class ArraySortPipe implements PipeTransform {\n  transform(value: any[], order = '', column: string = ''): any[] {\n    if (!value || order === '' || !order) {\n      return value;\n    } // no array\n    if (value.length <= 1) {\n      return value;\n    } // array with only one item\n    if (!column || column === '') {\n      if (order === 'asc') {\n        return value.sort();\n      } else {\n        return value.sort().reverse();\n      }\n    } // sort 1d array\n    // @ts-ignore\n    return orderBy(value, [column], [order]);\n  }\n}\n\n@Pipe({\n  name: 'fileNameFilter',\n  pure: true\n})\nexport class FileNameFilterPipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    if (!value) { return value; }\n    return value.split('\\\\').pop().split('/').pop().split('.')[0];\n  }\n}\n\n@Pipe({\n  name: 'filterUnique',\n  pure: true\n})\nexport class UniqueFilterPipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    if (value != null) {\n      const uniqueArray = value.filter((el: any, index: any, array: any) => {\n        return array.indexOf(el) === index;\n      });\n      return uniqueArray;\n    }\n  }\n}\n\n@Pipe({\n  name: 'filter'\n})\n\nexport class FilterPipe implements PipeTransform {\n  transform(items: any[], field: string, value: string): any[] {\n    if (!items) {\n      return [];\n    }\n    if (!field || !value) {\n      return items;\n    }\n\n    return items.filter(singleItem =>\n      singleItem[field].toLowerCase().includes(value.toLowerCase())\n    );\n  }\n}\n\n@Pipe({\n  name: 'dateAgo',\n  pure: true\n})\nexport class DateAgoPipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    if (!value || value === '') {\n      return '-';\n    }\n    let content = '';\n    const year = Math.floor(value / ((365 * 24) * 3600));\n    value = value % ((365 * 24) * 3600);\n    if (year > 0) {\n      content += year + 'y ';\n    }\n    const day = Math.floor(value / (24 * 3600));\n    value = value % (24 * 3600);\n    if (day > 0) {\n      content += day + 'd ';\n    }\n    const hour = Math.floor(value / 3600);\n    value %= 3600;\n    if (hour > 0) {\n      content += hour + 'h ';\n    }\n    const minutes = Math.floor(value / 60);\n    value %= 60;\n    if (minutes > 0 && !args) {\n      content += minutes + 'm ';\n    }\n    const seconds = Math.floor(value);\n    if (seconds > 0 && !args) {\n      content += seconds + 's ';\n    }\n    return content;\n  }\n}\n\n@Pipe({name: 'utcToLocale'})\nexport class UtcToLocale implements PipeTransform {\n  transform(date: string): string {\n    if (date === null || !date || date === '') { return date; }\n    if (date && date.indexOf('Z') === -1) { date += 'Z'; }\n    return date ? new Date(date).toLocaleDateString() + ' ' + new Date(date).toLocaleTimeString() : date;\n  }\n}\n\n@Pipe({name: 'linkify'})\nexport class LinkifyPipe implements PipeTransform {\n  transform(str: string): string {\n    return str ? linkifyStr(str, {target: '_system'}) : str;\n  }\n}\n\n\n@Pipe({name: 'formatCell'})\nexport class FormatCellPipe implements PipeTransform {\n  constructor(private datePipe: DatePipe) {\n  }\n\n  transform(value: any, format: string): any {\n    if (value === undefined) {\n      return '';\n    }\n    if (format === 'date') {\n      return this.datePipe.transform(value, 'medium');\n    } else if (format === 'cameltohuman') {\n      return new CamelToHumanPipe().transform(value, true);\n    } else if (format === 'bytesconvert') {\n      return new BytesConvertFilterPipe().transform(value, 0);\n    } else if (format === 'epochToDate') {\n      return new EpochToDateFilterPipe().transform(value);\n    } else if (format === 'utcToLocale') {\n      return new UtcToLocale().transform(value);\n    } else if (format === 'DD-MMM-YYYY') {\n      return new DDMMMYYYY().transform(value);\n    }else if (format === 'dateFormat') {\n      return new DateFormat().transform(value);\n    }else if (format === 'cveToDate') {\n      return new CveToDateFilterPipe().transform(value);\n    } else if (format === 'dateAgo') {\n      return new DateAgoPipe().transform(value);\n    } else if (format === 'assessmentDate') {\n      return new AssessmentDateFilterPipe().transform(value);\n    } else if (format === 'formatTrafficUnits') {\n      return new FormatTrafficUnitsPipe().transform(value);\n    } else if (format === 'macFilter') {\n      return new MacFilterPipe().transform(value);\n    } else if (format.indexOf('arrayToObjWithEllipsis') > -1) {\n      const prms = format.split(':');\n      const param = {key: prms[1], ellipse: prms[2]};\n      return new ArrayToObjWithEllipsisPipe().transform(value, prms[1]);\n    } else if (format === 'arrayToStr') {\n      return new ArrayToStrPipe().transform(value);\n    } else if (format === 'arrayToStrWithEllipsis') {\n      return new ArrayToStrEllipsisPipe().transform(value);\n    } else if (format === 'daysHoursSeconds') {\n      return new DaysHoursSecondsPipe().transform(value);\n    } else if (format === 'timeAgo') {\n      return new TimeAgoPipe().transform(value);\n    } else if (format.indexOf('ellipsis') > -1) {\n      const prms = format.split(':');\n      return new EllipsisPipe().transform(value, prms[1]);\n    } else if (format.indexOf('fileNameFilter') > -1) {\n      return new FileNameFilterPipe().transform(value);\n    } else if (format.indexOf('maskpassword') > -1) {\n      return new MaskPasswordFilterPipe().transform(value);\n    }\n    return value;\n  }\n}\n\n@Pipe({name: 'timeAgo'})\nexport class TimeAgoPipe implements PipeTransform {\n  transform(value: any): string {\n    if (!value) { return value; }\n    const d = (value.length === 10) ? new Date(value * 1000) : new Date(value);\n    const now = new Date();\n    const seconds = Math.round(Math.abs((now.getTime() - d.getTime()) / 1000));\n    const timeToUpdate = (Number.isNaN(seconds)) ? 1000 : this.getSecondsUntilUpdate(seconds) * 1000;\n    const minutes = Math.round(Math.abs(seconds / 60));\n    const hours = Math.round(Math.abs(minutes / 60));\n    const days = Math.round(Math.abs(hours / 24));\n    const months = Math.round(Math.abs(days / 30.416));\n    const years = Math.round(Math.abs(days / 365));\n    if (Number.isNaN(seconds)) {\n      return '';\n    } else if (seconds <= 45) {\n      return 'A few seconds ago';\n    } else if (seconds <= 90) {\n      return 'A minute ago';\n    } else if (minutes <= 45) {\n      return minutes + ' minutes ago';\n    } else if (minutes <= 90) {\n      return 'An hour ago';\n    } else if (hours <= 22) {\n      return hours + ' hours ago';\n    } else if (hours <= 36) {\n      return 'A day ago';\n    } else if (days <= 25) {\n      return days + ' days ago';\n    } else if (days <= 45) {\n      return 'A month ago';\n    } else if (days <= 345) {\n      return months + ' months ago';\n    } else if (days <= 545) {\n      return 'A year ago';\n    } else { // (days > 545)\n      return years + ' years ago';\n    }\n  }\n\n  private getSecondsUntilUpdate(seconds: number): number {\n    const min = 60;\n    const hr = min * 60;\n    const day = hr * 24;\n    if (seconds < min) { // less than 1 min, update every 2 secs\n      return 2;\n    } else if (seconds < hr) { // less than an hour, update every 30 secs\n      return 30;\n    } else if (seconds < day) { // less then a day, update every 5 mins\n      return 300;\n    } else { // update every hour\n      return 3600;\n    }\n  }\n}\n\n@Pipe({\n  name: 'macFilter'\n})\nexport class MacFilterPipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    if (!value || value === '') {\n      return '';\n    }\n    return value.match(/.{1,2}/g).join(':');\n  }\n}\n\n// tslint:disable-next-line:use-pipe-transform-interface\n@Pipe({\n  name: 'orderBy'\n})\nexport class ArrayOrderByPipe {\n  private static parseExpression(expression: string): string[] {\n    expression = expression.replace(/\\[(\\w+)\\]/g, '.$1');\n    expression = expression.replace(/^\\./, '');\n    return expression.split('.');\n  }\n\n  private static getValue(object: any, expression: string[]): any {\n    for (let i = 0, n = expression.length; i < n; ++i) {\n      const k = expression[i];\n      if (!object || !(k in object)) {\n        return;\n      }\n      object = object[k];\n    }\n    return object;\n  }\n\n  private static setValue(object: any, value: any, expression: string[]): any {\n    let i;\n    for (i = 0; i < expression.length - 1; i++) {\n      object = object[expression[i]];\n    }\n    object[expression[i]] = value;\n  }\n\n  transform(value: any | any[], expression?: any, reverse?: boolean): any {\n    if (!value) {\n      return value;\n    }\n    const isArray = value instanceof Array;\n\n    if (isArray) {\n      return this.sortArray(value, expression, reverse);\n    }\n\n    if (typeof value === 'object') {\n      return this.transformObject(value, expression, reverse);\n    }\n\n    return value;\n  }\n\n  private sortArray(value: any[], expression?: any, reverse?: boolean): any[] {\n    const isDeepLink = expression && expression.indexOf('.') !== -1;\n\n    if (isDeepLink) {\n      expression = ArrayOrderByPipe.parseExpression(expression);\n    }\n\n    const array: any[] = value.sort((a: any, b: any): number => {\n      if (!expression) {\n        return a > b ? 1 : -1;\n      }\n\n      if (!isDeepLink) {\n        return a[expression] > b[expression] ? 1 : -1;\n      }\n\n      return ArrayOrderByPipe.getValue(a, expression) > ArrayOrderByPipe.getValue(b, expression) ? 1 : -1;\n    });\n\n    if (reverse) {\n      return array.reverse();\n    }\n\n    return array;\n  }\n\n\n  private transformObject(value: any | any[], expression?: any, reverse?: boolean): any {\n    const parsedExpression = ArrayOrderByPipe.parseExpression(expression);\n    let lastPredicate: any = parsedExpression.pop();\n    let oldValue = ArrayOrderByPipe.getValue(value, parsedExpression);\n\n    if (!(oldValue instanceof Array)) {\n      if (lastPredicate !== null) {\n        parsedExpression.push(lastPredicate);\n      }\n      lastPredicate = null;\n      oldValue = ArrayOrderByPipe.getValue(value, parsedExpression);\n    }\n\n    if (!oldValue) {\n      return value;\n    }\n\n    const newValue = this.transform(oldValue, lastPredicate, reverse);\n    ArrayOrderByPipe.setValue(value, newValue, parsedExpression);\n    return value;\n  }\n}\n\n@Pipe({name: 'safe'})\nexport class SafePipe implements PipeTransform {\n  constructor(private sanitizer: DomSanitizer) {\n  }\n\n  transform(url: any): SafeUrl {\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n}\n\n@Pipe({name: 'safeHTML'})\nexport class SafeHTMLPipe implements PipeTransform {\n  constructor(private sanitizer: DomSanitizer) {\n  }\n\n  transform(url: any): SafeHtml {\n    return this.sanitizer.bypassSecurityTrustHtml(url);\n  }\n}\n\n@Pipe({\n  name: 'camelToHuman'\n})\nexport class CamelToHumanPipe implements PipeTransform {\n  transform(input: any, uppercaseFirst: any): any {\n    if (typeof input !== 'string') {\n      return input;\n    }\n    let result = input.replace(/([a-z\\d])([A-Z])/g, '$1' + (' ' || '_') + '$2');\n    if (result.indexOf('_') > -1) {\n      result = result.replace(/(?:_| |\\b)(\\w)/g,\n        (key, p1) => p1.toUpperCase()).replace(/([a-z])([A-Z])/g, '$1 $2');\n    }\n    if (uppercaseFirst) {\n      result = result.charAt(0).toUpperCase() + result.slice(1);\n    }\n    return result;\n  }\n}\n\n@Pipe({\n  name: 'search'\n})\nexport class SearchPipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    if (!value) {\n      return null;\n    }\n    if (!args) {\n      return value;\n    }\n    args = args.toLowerCase();\n    return value.filter((item: any) => {\n      return JSON.stringify(item).toLowerCase().includes(args);\n    });\n  }\n}\n\n@Pipe({\n  name: 'formatTrafficUnits'\n})\nexport class FormatTrafficUnitsPipe implements PipeTransform {\n  transform(units: any, decimals?: any, display?: any, base?: any): any {\n    if (!units) {\n      return '';\n    }\n    if (display === undefined) {\n      display = ['bps', 'Kbps', 'Mbps', 'Gbps', 'Tbps', 'Pbps', 'Ebps', 'Zbps', 'Ybps'];\n    }\n    if (units === 0) {\n      return units + display[0];\n    }\n    base = base || 1000; // or 1024 for binary\n    const dm = decimals || 2;\n    const i = Math.floor(Math.log(units) / Math.log(base));\n    return parseFloat((units / Math.pow(base, i)).toFixed(dm)) + display[i];\n  }\n}\n\n@Pipe({\n  name: 'arrayToStrWithEllipsis'\n})\nexport class ArrayToStrEllipsisPipe implements PipeTransform {\n  transform(input: any, args?: any): any {\n    if (!(input && input !== '')) {\n      return '';\n    }\n    if (input.length < 3) {\n      return input.join(', ');\n    } else if (input.length > 2) {\n      return input[0] + ', ' + input[1] + ', ...';\n    } else {\n      return '';\n    }\n  }\n}\n\n// tslint:disable-next-line:use-pipe-transform-interface\n@Pipe({\n  name: 'ellipsis'\n})\nexport class EllipsisPipe {\n  transform(val: any, args?: any): any {\n    if (!val) { return val; }\n    args = (!args) ? 25 : args;\n    if (typeof val === 'object' && val.length && val.length !== undefined) {\n      val = val.join(', ');\n    } else if (typeof val === 'object' && val.length === undefined) {\n      val = JSON.stringify(val).replace('{', '')\n        .replace('}', '')\n        .replace(/\\\\/g, '');\n    } else {\n      val = val + '';\n    }\n    if (val.length > args) {\n      return val.substring(0, args) + '...';\n    } else {\n      return val;\n    }\n  }\n}\n\n@Pipe({\n  name: 'arrayToObjWithEllipsis'\n})\nexport class ArrayToObjWithEllipsisPipe implements PipeTransform {\n  transform(input: any, args?: any): any {\n    if (!input || input === null || input === '') {\n      return '';\n    }\n    const retData: any = [];\n    if (input && input.length) {\n      input.forEach((obj: any) => {\n        retData.push(obj[args]);\n      });\n    }\n    if (retData && retData.length) {\n      return retData.join(', ');\n    } else {\n      return '';\n    }\n  }\n}\n\n@Pipe({\n  name: 'arrayToStr'\n})\nexport class ArrayToStrPipe implements PipeTransform {\n  transform(input: any, args?: any): any {\n    if (!input || input === null || input === '') {\n      return '';\n    }\n    if (input.length > 0) {\n      return input.join(', ');\n    } else {\n      return '';\n    }\n  }\n}\n\n@Pipe({\n  name: 'strToMac'\n})\nexport class StrToMacPipe implements PipeTransform {\n  transform(input: any, uppercase: any): any {\n    if (!input || input === null || input === '') {\n      return '';\n    }\n    if (uppercase) {\n      input = input.toUpperCase();\n    }\n    if (input.length >= 3 && input.length <= 16) {\n      input = input.replace(/\\W/ig, '');\n      input = input.replace(/(.{2})/g, '$1:');\n      return input;\n    } else {\n      return '';\n    }\n  }\n}\n\n@Pipe({\n  name: 'maskPassword'\n})\nexport class MaskPasswordFilterPipe implements PipeTransform {\n  transform(value: any): any {\n    if (!value) {\n      return '-';\n    }\n    return '***********';\n  }\n}\n\n@Pipe({\n  name: 'cveToDate'\n})\nexport class CveToDateFilterPipe implements PipeTransform {\n  transform(epoch: any): any {\n    if (!epoch) {\n      return '-';\n    }\n    epoch = epoch + '';\n    const year = epoch.slice(0, 4);\n    const month = epoch.slice(4, 6);\n    const date = epoch.slice(6, 8);\n    return year + '/' + month + '/' + date;\n  }\n}\n\n@Pipe({\n  name: 'assessmentDate'\n})\nexport class AssessmentDateFilterPipe implements PipeTransform {\n  transform(epoch: any): any {\n    if (!epoch) {\n      return '-';\n    }\n    const ret: string[] = [];\n    if (epoch.length > 0) {\n      epoch.forEach((dt: string | number | Date) => {\n        dt = dt + '';\n        dt = dt.split('.')[0];\n        // @ts-ignore\n        const d: any = (dt.toString().length === 10) ? new Date(dt * 1000) : new Date(dt);\n        ret.push(d.toLocaleDateString() + ' ' + d.toLocaleTimeString());\n      });\n    }\n    return ret.join(', ');\n  }\n}\n\n@Pipe({name: 'split'})\nexport class SplitPipe implements PipeTransform {\n  transform(input: any, separator: string = ' ', limit: number = 0): any {\n    if (typeof input === 'string') {\n      return input.split(separator)[limit];\n    }\n    return input;\n  }\n}\n\n@Pipe({\n  name: 'epochToDate'\n})\nexport class EpochToDateFilterPipe implements PipeTransform {\n  transform(epoch: any): any {\n    if (!epoch) {\n      return '-';\n    }\n    epoch = (epoch + '').split('.')[0];\n    const d = (epoch.toString().length === 10) ? new Date(epoch * 1000) : new Date(+epoch);\n    return d.toLocaleDateString() + ' ' + d.toLocaleTimeString();\n  }\n}\n\n@Pipe({\n  name: 'bytesConvert'\n})\nexport class BytesConvertFilterPipe implements PipeTransform {\n  transform(bytes: any, decimals: number = 2): any {\n    if (bytes === 0 || !bytes || bytes === '' || bytes === null) {\n      return '0';\n    } else if (typeof bytes === 'string') {\n      bytes = Number(bytes);\n    }\n    const units = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n    let unit = 0;\n    while (bytes >= 1024) {\n      bytes /= 1024;\n      unit++;\n    }\n    return bytes.toFixed(+decimals) + ' ' + units[unit];\n  }\n}\n\n@Pipe({\n  name: 'daysHoursSeconds'\n})\nexport class DaysHoursSecondsPipe implements PipeTransform {\n  transform(sec: any, args?: any): any {\n    if (!sec) {\n      return sec;\n    } else {\n      let t = Math.floor(sec / 100);\n      // tslint:disable-next-line:prefer-const\n      let years;\n      // tslint:disable-next-line:prefer-const\n      let months;\n      let days;\n      if (t > 86400) {\n        days = Math.floor(t / 86400);\n        t = t - (days * 86400);\n      }\n      const hours = Math.floor(t / 3600);\n      t = t - (hours * 3600);\n      const minutes = Math.floor(t / 60);\n      t = t - (minutes * 60);\n      let content = '';\n      if (years) {\n        content += years + ' years';\n      }\n      if (months) {\n        if (content) {\n          content += ', ';\n        }\n        content += months + ' months';\n      }\n      if (days) {\n        if (content) {\n          content += ', ';\n        }\n        content += days + ' days';\n      }\n      if (hours || days) {\n        if (content) {\n          content += ', ';\n        }\n        content += hours + ' hours';\n      }\n      if (content) {\n        content += ', ';\n      }\n      content += minutes + ' minutes and ' + t + ' seconds.';\n      return content;\n    }\n  }\n}\n\n@Pipe({\n  name: 'timeFormat'\n})\nexport class TimeFormat implements PipeTransform {\n  transform(time: any, args?: any): any {\n    let content = '';\n    if (time !== '') {\n      content = time.Hour + 'h :' + time.Minute + 'm :' + time.Second + 's';\n      return content;\n    }\n    return content;\n\n  }\n}\n\n@Pipe({\n  name: 'dateFormat'\n})\nexport class DateFormat implements PipeTransform {\n  transform(date: any, args?: any): any {\n    let content = '';\n    if (date !== '') {\n      content = date.Year + '-' + date.Month + '-' + date.Day;\n      return content;\n    }\n    return content;\n\n  }\n}\n\n@Pipe({\n  name: 'dateAndTimeFormat'\n})\nexport class DateAndTimeFormat implements PipeTransform {\n  transform(dateAndTime: any, args?: any): any {\n    let date = '-';\n    let time = '-';\n    if (dateAndTime !== '') {\n      date = dateAndTime.Date.Year + '-' + dateAndTime.Date.Month + '-' + dateAndTime.Date.Day;\n      time = dateAndTime.Time.Hour + 'h :' + dateAndTime.Time.Minute + 'm :' + dateAndTime.Time.Second + 's';\n      return date + ' ' + time;\n    }\n    return date + ' ' + time;\n\n  }\n}\n\n@Pipe({\n  name: 'DD-MMM-YYYY'\n})\nexport class DDMMMYYYY implements PipeTransform {\n  transform(date: any, args?: any): any {\n    function join(t: any, a: any, s: any) {\n      function format(m: any) {\n         let f = new Intl.DateTimeFormat('en', m);\n         return f.format(t);\n      }\n      return a.map(format).join(s);\n    }\n    if(!date) { return ''};\n    let a = [{day: 'numeric'}, {month: 'short'}, {year: 'numeric'}];\n    let s = join(new Date(date), a, '-');\n    return (date) ? s : '';\n  }\n}","/* tslint:disable */\n/* eslint-disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { BaseService } from '../base-service';\nimport { ApiConfiguration } from '../api-configuration';\nimport { StrictHttpResponse } from '../strict-http-response';\nimport { RequestBuilder } from '../request-builder';\nimport { Observable } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiService extends BaseService {\n  constructor(\n    config: ApiConfiguration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * Path part for operation loginApiLoginGet\n   */\n  static readonly LoginApiLoginGetPath = '/api/login';\n\n  /**\n   * Login.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `loginApiLoginGet()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  loginApiLoginGet$Response(params?: {\n    code?: string;\n  }): Observable<StrictHttpResponse<any>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ApiService.LoginApiLoginGetPath, 'get');\n    if (params) {\n      rb.query('code', params.code, {});\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<any>;\n      })\n    );\n  }\n\n  /**\n   * Login.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `loginApiLoginGet$Response()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  loginApiLoginGet(params?: {\n    code?: string;\n  }): Observable<any> {\n\n    return this.loginApiLoginGet$Response(params).pipe(\n      map((r: StrictHttpResponse<any>) => r.body as any)\n    );\n  }\n\n  /**\n   * Path part for operation logoutApiLogoutGet\n   */\n  static readonly LogoutApiLogoutGetPath = '/api/logout';\n\n  /**\n   * Logout.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `logoutApiLogoutGet()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  logoutApiLogoutGet$Response(params?: {\n  }): Observable<StrictHttpResponse<any>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ApiService.LogoutApiLogoutGetPath, 'get');\n    if (params) {\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<any>;\n      })\n    );\n  }\n\n  /**\n   * Logout.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `logoutApiLogoutGet$Response()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  logoutApiLogoutGet(params?: {\n  }): Observable<any> {\n\n    return this.logoutApiLogoutGet$Response(params).pipe(\n      map((r: StrictHttpResponse<any>) => r.body as any)\n    );\n  }\n\n  /**\n   * Path part for operation meApiMeGet\n   */\n  static readonly MeApiMeGetPath = '/api/me';\n\n  /**\n   * Me.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `meApiMeGet()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  meApiMeGet$Response(params?: {\n  }): Observable<StrictHttpResponse<any>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ApiService.MeApiMeGetPath, 'get');\n    if (params) {\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<any>;\n      })\n    );\n  }\n\n  /**\n   * Me.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `meApiMeGet$Response()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  meApiMeGet(params?: {\n  }): Observable<any> {\n\n    return this.meApiMeGet$Response(params).pipe(\n      map((r: StrictHttpResponse<any>) => r.body as any)\n    );\n  }\n\n  /**\n   * Path part for operation pongPingGet\n   */\n  static readonly PongPingGetPath = '/ping';\n\n  /**\n   * Pong.\n   *\n   * Sanity check.\n   * This will let the user know that the service is operational.\n   * And this path operation will:\n   * * show a lifesign\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `pongPingGet()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  pongPingGet$Response(params?: {\n  }): Observable<StrictHttpResponse<any>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ApiService.PongPingGetPath, 'get');\n    if (params) {\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<any>;\n      })\n    );\n  }\n\n  /**\n   * Pong.\n   *\n   * Sanity check.\n   * This will let the user know that the service is operational.\n   * And this path operation will:\n   * * show a lifesign\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `pongPingGet$Response()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  pongPingGet(params?: {\n  }): Observable<any> {\n\n    return this.pongPingGet$Response(params).pipe(\n      map((r: StrictHttpResponse<any>) => r.body as any)\n    );\n  }\n\n}\n","import {CUSTOM_ELEMENTS_SCHEMA, ErrorHandler, NgModule, NO_ERRORS_SCHEMA} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {AppRoutingModule} from './app-routing.module';\nimport {HttpClientModule} from '@angular/common/http';\nimport {AppComponent} from './app.component';\nimport {CoreModule} from './core/core.module';\nimport {SharedModule} from './shared/shared.module';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {UserIdleModule} from 'angular-user-idle';\nimport {CustomErrorHandlerService} from './_services/customErrorHandler.service';\nimport {MaterialModule} from './material.module';\nimport {AngularSplitModule} from 'angular-split';\nimport {AvatarModule} from 'ngx-avatar';\nimport {ToastrModule} from 'ngx-toastr';\nimport {ApiModule} from './api/api.module';\nimport {NgCircleProgressModule} from 'ng-circle-progress';\nimport {NgMultiSelectDropDownModule} from 'ng-multiselect-dropdown';\nimport {NgxMatSelectSearchModule} from 'ngx-mat-select-search';\nimport { InputTrimModule } from 'ng2-trim-directive';\nimport {AngularEditorModule} from '@kolkov/angular-editor';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    AngularSplitModule,\n    AvatarModule,\n    InputTrimModule,\n    DragDropModule,\n    UserIdleModule.forRoot({idle: 1800, timeout: 60, ping: 480}),\n    ApiModule.forRoot({rootUrl: window.location.origin }), //\n    SharedModule,\n    CoreModule, AngularEditorModule,\n    NgxMatSelectSearchModule,\n    NgMultiSelectDropDownModule.forRoot(),\n    ToastrModule.forRoot({\n      timeOut: 8000, progressBar: true, enableHtml: true,\n      closeButton: true, progressAnimation: 'increasing',\n      preventDuplicates: true,\n    }),\n    NgCircleProgressModule.forRoot({\n      // set defaults here\n      radius: 100,\n      outerStrokeWidth: 16,\n      innerStrokeWidth: 8,\n      outerStrokeColor: '#78C000',\n      innerStrokeColor: '#C7E596',\n      animationDuration: 300,\n    }),\n  ],\n  providers: [\n    {provide: ErrorHandler, useClass: CustomErrorHandlerService},\n  ],\n  bootstrap: [AppComponent],\n  schemas: [NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class AppModule {\n}\n","import {Component, Inject} from '@angular/core';\nimport {MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { MasterService } from 'src/app/_services/master.service';\nimport { MyToastrService } from 'src/app/_services/toastr.service';\n\nexport class ConfirmDialogModel {\n  constructor(\n    public title: string,\n    public message: string,\n    public CancelText: string,\n    public AcceptText: string,\n    public showReason?: boolean | undefined,\n    public cancelColor?: string | undefined,\n    public acceptColor?: string | undefined,\n    public htmlMsg?: boolean | undefined,\n    public reverse?: boolean | undefined,\n    public isIcon?: boolean\n  ) {\n  }\n}\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.scss']\n})\n\nexport class ConfirmDialogComponent {\n  isIcon?: boolean;\n  title: string;\n  message: string;\n  CancelText: string;\n  AcceptText: string;\n  CancelColor: string | undefined;\n  AcceptColor: string | undefined;\n  HtmlMsg: boolean | undefined;\n  Reverse: boolean | undefined;\n  showReason?: boolean;\n  reason: any = '';\n  constructor(public dialogRef: MatDialogRef<ConfirmDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: ConfirmDialogModel, public masterService: MasterService, public toast: MyToastrService) {\n    this.title = data.title;\n    this.message = data.message;\n    this.CancelText = data.CancelText;\n    this.AcceptText = data.AcceptText;\n    this.CancelColor = data.cancelColor;\n    this.AcceptColor = data.acceptColor;\n    this.HtmlMsg = data.htmlMsg;\n    this.Reverse = data.reverse;\n    this.isIcon = data.isIcon;\n    this.showReason = data.showReason;\n\n  }\n\n  onConfirm(): void {\n    if(this.showReason){\n      if(!this.reason) {\n        this.toast.sToast('error', 'Reason is required!.');\n        return;\n      }\n    }\n    this.masterService.reasonData(this.reason);\n    this.dialogRef.close(true);\n  }\n\n  onDismiss(): void {\n    this.dialogRef.close(false);\n  }\n}\n\n","<!--<button mat-icon-button aria-label=\"close icon\" (click)=\"onDismiss()\">\n    <mat-icon>close</mat-icon>\n  </button>-->\n<mat-toolbar-row class=\"p-0\">\n  <mat-icon *ngIf=\"isIcon\" class=\"float-left mt-1 mr-1 mat-warn\">warning</mat-icon>\n  <h2>{{title}}</h2>\n</mat-toolbar-row>\n<div mat-dialog-content>\n  <p *ngIf=\"!HtmlMsg\">{{message}}</p>\n  <div *ngIf=\"HtmlMsg\" [innerHTML]=\"message\"></div>\n</div>\n<form #adsta=\"ngForm\" name=\"credentials\" autocomplete=\"off\">\n        <mat-form-field appearance=\"outline\" *ngIf=\"showReason\" class=\"col-md-12\">  \n                <mat-label>Reason</mat-label>\n                <textarea matInput cols=\"4\" type=\"text\" [(ngModel)]=\"reason\" placeholder=\"Enter reason\" required name=\"reason\" id=\"reason\"></textarea>\n                <mat-error> Reason is required</mat-error>\n        </mat-form-field>\n<div mat-dialog-actions *ngIf=\"Reverse\" class=\"float-right pb-3\">\n  <button mat-raised-button class=\"mat-primary\" (click)=\"onDismiss()\" *ngIf=\"!CancelColor\"\n          id=\"cnclaBtn\">{{CancelText}}</button>\n  <button mat-raised-button (click)=\"onDismiss()\" class=\"mat-primary\" [ngStyle]=\"{color: CancelColor}\"\n          *ngIf=\"CancelColor\"\n          id=\"cnclbBtn\">{{CancelText}}</button>\n  <button mat-stroked-button class=\"mat-warn\" (click)=\"onConfirm()\" *ngIf=\"!AcceptColor\"\n          id=\"accptaBtn\">{{AcceptText}}</button>\n  <button mat-stroked-button (click)=\"onConfirm()\" *ngIf=\"AcceptColor\" id=\"accptbBtn\" class=\"mat-warn\"\n          [ngStyle]=\"{'background-color': AcceptColor}\">{{AcceptText}}</button>\n</div>\n<div mat-dialog-actions *ngIf=\"!Reverse\" class=\"float-right pb-3\">\n  <button mat-raised-button class=\"mat-primary\" (click)=\"onConfirm()\" *ngIf=\"!AcceptColor\"\n          id=\"accpt1Btn\">{{AcceptText}}</button>\n  <button mat-raised-button class=\"mat-primary\" (click)=\"onConfirm()\" *ngIf=\"AcceptColor\" id=\"accpt2Btn\"\n          [ngStyle]=\"{'background-color': AcceptColor}\">{{AcceptText}}</button>\n  <button mat-stroked-button class=\"mat-warn\" (click)=\"onDismiss()\" *ngIf=\"!CancelColor\"\n          id=\"cncl1Btn\">{{CancelText}}</button>\n  <button mat-stroked-button class=\"mat-warn\" (click)=\"onDismiss()\" [ngStyle]=\"{color: CancelColor}\" *ngIf=\"CancelColor\"\n          id=\"cncl2Btn\">{{CancelText}}</button>\n</div>\n</form>","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-custom-calendar',\n  templateUrl: './custom-calendar.component.html',\n  styleUrls: ['./custom-calendar.component.scss']\n})\nexport class CustomCalendarComponent implements OnInit {\n  constructor() { }\n  @Input() inputarray: any = [];\n  @Input() bindArray: any = [];\n  @Output() finalValueChange = new EventEmitter();\n  @Output() cancelClick = new EventEmitter();\n  selectedArry: any = [];\n  savedArray: any = [];\n\n  array = [];\n\n  ngOnInit(): void {\n    this.bindArray.forEach((element: any) => {\n      this.selectedArry[element] = element;\n      this.savedArray[element] = element;\n    });\n  }\n  itemClick(val: any): void {\n    const index: number = this.selectedArry.indexOf(val);\n    if (index !== -1) {\n      this.selectedArry.splice(index, 1);\n      this.array = Object.assign([], this.selectedArry);\n      this.selectedArry = [];\n      this.array.forEach(element => {\n        this.selectedArry[element] = element;\n      });\n    } else {\n      this.selectedArry[val] = val;\n    }\n  }\n\n  setValues(): void {\n    this.savedArray = Object.assign([], this.selectedArry);\n    this.finalValueChange.emit(this.selectedArry);\n  }\n\n  onCancel(): void {\n    this.selectedArry = Object.assign([], this.savedArray);\n    this.cancelClick.emit();\n  }\n}\n","<mat-card>\n  <mat-card-content>\n    <span #customValDiv>\n      <div *ngFor=\"let item of inputarray;\" [ngClass]=\"{'divborder': item.text===selectedArry[item.text]}\" class=\"calItem\"\n       (click)=\"itemClick(item.value)\">\n          {{item.text}}\n      </div>\n    </span>\n  </mat-card-content>\n  <mat-card-actions>\n    <button type=\"button\"  color=\"warn\" mat-button (click)=\"onCancel()\">Cancel</button>\n    <button type=\"button\" color=\"primary\" mat-button (click)=\"setValues()\">Set</button>\n  </mat-card-actions>\n</mat-card>\n","import {Component, Input, OnInit, Output, EventEmitter} from '@angular/core';\n\n@Component({\n  selector: 'app-pill-card',\n  templateUrl: './pill-card.component.html',\n  styleUrls: ['./pill-card.component.scss']\n})\n\nexport class PillCardComponent implements OnInit {\n  @Input() chartData: any;\n  @Input() pilltype: any;\n  @Output() callbackCountFilter = new EventEmitter();\n  inArray = ['critical', 'high', 'medium', 'low', 'compliant', 'active', 'inactive', 'not logged-in > 30d',\n    'non compliant', ];\n\n  constructor() { }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      if (this.chartData.compliance) { this.updateCompliance({value: this.chartData.compliance}); }\n    }, 3000);\n  }\n\n  updateCompliance($event: any): void {\n    const selectedC = this.chartData.complianceData.filter((x: any) => x.value === $event.value);\n    const compliance = selectedC[0].data.filter((x: any) => x.compliance);\n    const noncompliance = selectedC[0].data.filter((x: any) => !x.compliance);\n    this.chartData.data[0].value = noncompliance.length;\n    this.chartData.data[1].value = compliance.length;\n    this.chartData.count = noncompliance.length ; // + compliance.length\n  }\n\n  setFilter(chartData: any, name: string): void {\n    this.callbackCountFilter.next({value: chartData, key: name});\n  }\n}\n","<mat-card [ngClass]=\"{'ad-pill': pilltype === 'ad-pill'}\">\n  <div class=\"row mb-1\">\n    <div class=\"col-lg-8 fs1-2 fw2 text-left\">{{chartData.title }}</div>\n    <div class=\"col-lg-4 fs1-2 fw5 text-right\" matTooltip=\"{{chartData.count}}\">{{chartData.count | shortNumber}}</div>\n  </div>\n  <div class=\"d-flex mb-1\">\n    <span class=\"spacer\"></span>\n    <img class=\"pic-img\" [src]=\"chartData.img | safe\" alt=\"{{chartData.title}}\">\n    <span class=\"spacer\"></span>\n  </div>\n  <mat-card-content class=\"mt-2\">\n    <mat-form-field class=\"w-100 compliance-field\" *ngIf=\"chartData.complianceData\">\n        <mat-label>Compliance</mat-label>\n        <mat-select [multiple]=\"false\" (selectionChange)=\"updateCompliance($event)\"\n          placeholder=\"Choose Compliance\"\n        [(ngModel)]=\"chartData.compliance\">\n          <mat-option *ngFor=\"let item of chartData.complianceData; let i = index;\"\n            [value]=\"item.value\">\n            {{item.name}}\n          </mat-option>\n        </mat-select>\n    </mat-form-field>\n    <ng-container *ngFor=\"let item of chartData.data\">\n      <div class=\"d-flex\" > <!--*ngIf=\"inArray.indexOf(item.name.toLowerCase()) > -1\"-->\n        <i class=\"ms-Icon ms-font-lg ms-Icon--RadioBtnOn px-1 \" [ngClass]=\"{\n        't-c': item.name.toLowerCase() === 'critical',\n        't-h': item.name.toLowerCase() === 'high',\n        't-m': item.name.toLowerCase() === 'medium',\n        't-l': item.name.toLowerCase() === 'low',\n        't-d': item.name.toLowerCase().indexOf('inactive') > -1 || item.name.toLowerCase() === 'disabled' || item.name.toLowerCase() === 'non compliant',\n        't-g': item.name.toLowerCase() === 'active' || item.name.toLowerCase() === 'enabled' || item.name.toLowerCase() === 'compliant' || item.name.toLowerCase() === 'active policy'\n        }\"></i>\n        <span [ngClass]=\"{'t-c': item.name.toLowerCase() === 'critical'}\">\n          {{item.name | camelToHuman:true}}</span>\n        <span class=\"spacer\"></span>\n        <span class=\"float-right fw4 pointer\" (click)=\"setFilter(chartData, item.name)\"\n              [ngClass]=\"{'t-c': item.name.toLowerCase() === 'critical'}\">\n          {{item.value| shortNumber}}\n        </span>\n      </div>\n    </ng-container>\n  </mat-card-content>\n</mat-card>\n","/* tslint:disable */\n/* eslint-disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { BaseService } from '../base-service';\nimport { ApiConfiguration } from '../api-configuration';\nimport { StrictHttpResponse } from '../strict-http-response';\nimport { RequestBuilder } from '../request-builder';\nimport { Observable } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\n\nimport { UserSpec } from '../models/user-spec';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UsersService extends BaseService {\n  constructor(\n    config: ApiConfiguration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * Path part for operation getUsersApiKusersGet\n   */\n  static readonly GetUsersApiKusersGetPath = '/api/kusers';\n\n  /**\n   * Get Users.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getUsersApiKusersGet()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getUsersApiKusersGet$Response(params?: {\n  }): Observable<StrictHttpResponse<any>> {\n\n    const rb = new RequestBuilder(this.rootUrl, UsersService.GetUsersApiKusersGetPath, 'get');\n    if (params) {\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<any>;\n      })\n    );\n  }\n\n  /**\n   * Get Users.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getUsersApiKusersGet$Response()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getUsersApiKusersGet(params?: {\n  }): Observable<any> {\n\n    return this.getUsersApiKusersGet$Response(params).pipe(\n      map((r: StrictHttpResponse<any>) => r.body as any)\n    );\n  }\n\n  /**\n   * Path part for operation updateUserApiKusersPut\n   */\n  static readonly UpdateUserApiKusersPutPath = '/api/kusers';\n\n  /**\n   * Update User.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `updateUserApiKusersPut()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  updateUserApiKusersPut$Response(params: {\n    body: UserSpec\n  }): Observable<StrictHttpResponse<any>> {\n\n    const rb = new RequestBuilder(this.rootUrl, UsersService.UpdateUserApiKusersPutPath, 'put');\n    if (params) {\n      rb.body(params.body, 'application/json');\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<any>;\n      })\n    );\n  }\n\n  /**\n   * Update User.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `updateUserApiKusersPut$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  updateUserApiKusersPut(params: {\n    body: UserSpec\n  }): Observable<any> {\n\n    return this.updateUserApiKusersPut$Response(params).pipe(\n      map((r: StrictHttpResponse<any>) => r.body as any)\n    );\n  }\n\n  /**\n   * Path part for operation createUserApiKusersPost\n   */\n  static readonly CreateUserApiKusersPostPath = '/api/kusers';\n\n  /**\n   * Create User.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `createUserApiKusersPost()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  createUserApiKusersPost$Response(params: {\n    body: UserSpec\n  }): Observable<StrictHttpResponse<any>> {\n\n    const rb = new RequestBuilder(this.rootUrl, UsersService.CreateUserApiKusersPostPath, 'post');\n    if (params) {\n      rb.body(params.body, 'application/json');\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<any>;\n      })\n    );\n  }\n\n  /**\n   * Create User.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `createUserApiKusersPost$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  createUserApiKusersPost(params: {\n    body: UserSpec\n  }): Observable<any> {\n\n    return this.createUserApiKusersPost$Response(params).pipe(\n      map((r: StrictHttpResponse<any>) => r.body as any)\n    );\n  }\n\n  /**\n   * Path part for operation deleteUserApiKusersUseridDelete\n   */\n  static readonly DeleteUserApiKusersUseridDeletePath = '/api/kusers/{userid}';\n\n  /**\n   * Delete User.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `deleteUserApiKusersUseridDelete()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  deleteUserApiKusersUseridDelete$Response(params: {\n    userid: string;\n  }): Observable<StrictHttpResponse<any>> {\n\n    const rb = new RequestBuilder(this.rootUrl, UsersService.DeleteUserApiKusersUseridDeletePath, 'delete');\n    if (params) {\n      rb.path('userid', params.userid, {});\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<any>;\n      })\n    );\n  }\n\n  /**\n   * Delete User.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `deleteUserApiKusersUseridDelete$Response()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  deleteUserApiKusersUseridDelete(params: {\n    userid: string;\n  }): Observable<any> {\n\n    return this.deleteUserApiKusersUseridDelete$Response(params).pipe(\n      map((r: StrictHttpResponse<any>) => r.body as any)\n    );\n  }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { BaseService } from '../base-service';\nimport { ApiConfiguration } from '../api-configuration';\nimport { StrictHttpResponse } from '../strict-http-response';\nimport { RequestBuilder } from '../request-builder';\nimport { Observable } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\n\nimport { KeycloakIdentity } from '../models/keycloak-identity';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IdentityProvidersService extends BaseService {\n  constructor(\n    config: ApiConfiguration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * Path part for operation getAvailableProvidersApiKidentityprovidersAvailableGet\n   */\n  static readonly GetAvailableProvidersApiKidentityprovidersAvailableGetPath = '/api/kidentityproviders/available';\n\n  /**\n   * Get Available Providers.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getAvailableProvidersApiKidentityprovidersAvailableGet()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getAvailableProvidersApiKidentityprovidersAvailableGet$Response(params?: {\n  }): Observable<StrictHttpResponse<any>> {\n\n    const rb = new RequestBuilder(this.rootUrl, IdentityProvidersService.GetAvailableProvidersApiKidentityprovidersAvailableGetPath, 'get');\n    if (params) {\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<any>;\n      })\n    );\n  }\n\n  /**\n   * Get Available Providers.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getAvailableProvidersApiKidentityprovidersAvailableGet$Response()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getAvailableProvidersApiKidentityprovidersAvailableGet(params?: {\n  }): Observable<any> {\n\n    return this.getAvailableProvidersApiKidentityprovidersAvailableGet$Response(params).pipe(\n      map((r: StrictHttpResponse<any>) => r.body as any)\n    );\n  }\n\n  /**\n   * Path part for operation getIdentitiesApiKidentityprovidersGet\n   */\n  static readonly GetIdentitiesApiKidentityprovidersGetPath = '/api/kidentityproviders';\n\n  /**\n   * Get Identities.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getIdentitiesApiKidentityprovidersGet()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getIdentitiesApiKidentityprovidersGet$Response(params?: {\n  }): Observable<StrictHttpResponse<any>> {\n\n    const rb = new RequestBuilder(this.rootUrl, IdentityProvidersService.GetIdentitiesApiKidentityprovidersGetPath, 'get');\n    if (params) {\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<any>;\n      })\n    );\n  }\n\n  /**\n   * Get Identities.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getIdentitiesApiKidentityprovidersGet$Response()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getIdentitiesApiKidentityprovidersGet(params?: {\n  }): Observable<any> {\n\n    return this.getIdentitiesApiKidentityprovidersGet$Response(params).pipe(\n      map((r: StrictHttpResponse<any>) => r.body as any)\n    );\n  }\n\n  /**\n   * Path part for operation updateIdentityApiKidentityprovidersPut\n   */\n  static readonly UpdateIdentityApiKidentityprovidersPutPath = '/api/kidentityproviders';\n\n  /**\n   * Update Identity.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `updateIdentityApiKidentityprovidersPut()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  updateIdentityApiKidentityprovidersPut$Response(params: {\n    body: KeycloakIdentity\n  }): Observable<StrictHttpResponse<any>> {\n\n    const rb = new RequestBuilder(this.rootUrl, IdentityProvidersService.UpdateIdentityApiKidentityprovidersPutPath, 'put');\n    if (params) {\n      rb.body(params.body, 'application/json');\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<any>;\n      })\n    );\n  }\n\n  /**\n   * Update Identity.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `updateIdentityApiKidentityprovidersPut$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  updateIdentityApiKidentityprovidersPut(params: {\n    body: KeycloakIdentity\n  }): Observable<any> {\n\n    return this.updateIdentityApiKidentityprovidersPut$Response(params).pipe(\n      map((r: StrictHttpResponse<any>) => r.body as any)\n    );\n  }\n\n  /**\n   * Path part for operation createIdentityApiKidentityprovidersPost\n   */\n  static readonly CreateIdentityApiKidentityprovidersPostPath = '/api/kidentityproviders';\n\n  /**\n   * Create Identity.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `createIdentityApiKidentityprovidersPost()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  createIdentityApiKidentityprovidersPost$Response(params: {\n    body: KeycloakIdentity\n  }): Observable<StrictHttpResponse<any>> {\n\n    const rb = new RequestBuilder(this.rootUrl, IdentityProvidersService.CreateIdentityApiKidentityprovidersPostPath, 'post');\n    if (params) {\n      rb.body(params.body, 'application/json');\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<any>;\n      })\n    );\n  }\n\n  /**\n   * Create Identity.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `createIdentityApiKidentityprovidersPost$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  createIdentityApiKidentityprovidersPost(params: {\n    body: KeycloakIdentity\n  }): Observable<any> {\n\n    return this.createIdentityApiKidentityprovidersPost$Response(params).pipe(\n      map((r: StrictHttpResponse<any>) => r.body as any)\n    );\n  }\n\n  /**\n   * Path part for operation getIdentityApiKidentityprovidersAliasGet\n   */\n  static readonly GetIdentityApiKidentityprovidersAliasGetPath = '/api/kidentityproviders/{alias}';\n\n  /**\n   * Get Identity.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getIdentityApiKidentityprovidersAliasGet()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getIdentityApiKidentityprovidersAliasGet$Response(params: {\n    alias: string;\n  }): Observable<StrictHttpResponse<any>> {\n\n    const rb = new RequestBuilder(this.rootUrl, IdentityProvidersService.GetIdentityApiKidentityprovidersAliasGetPath, 'get');\n    if (params) {\n      rb.path('alias', params.alias, {});\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<any>;\n      })\n    );\n  }\n\n  /**\n   * Get Identity.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getIdentityApiKidentityprovidersAliasGet$Response()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getIdentityApiKidentityprovidersAliasGet(params: {\n    alias: string;\n  }): Observable<any> {\n\n    return this.getIdentityApiKidentityprovidersAliasGet$Response(params).pipe(\n      map((r: StrictHttpResponse<any>) => r.body as any)\n    );\n  }\n\n  /**\n   * Path part for operation deleteIdentityApiKidentityprovidersAliasDelete\n   */\n  static readonly DeleteIdentityApiKidentityprovidersAliasDeletePath = '/api/kidentityproviders/{alias}';\n\n  /**\n   * Delete Identity.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `deleteIdentityApiKidentityprovidersAliasDelete()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  deleteIdentityApiKidentityprovidersAliasDelete$Response(params: {\n    alias: string;\n  }): Observable<StrictHttpResponse<any>> {\n\n    const rb = new RequestBuilder(this.rootUrl, IdentityProvidersService.DeleteIdentityApiKidentityprovidersAliasDeletePath, 'delete');\n    if (params) {\n      rb.path('alias', params.alias, {});\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<any>;\n      })\n    );\n  }\n\n  /**\n   * Delete Identity.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `deleteIdentityApiKidentityprovidersAliasDelete$Response()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  deleteIdentityApiKidentityprovidersAliasDelete(params: {\n    alias: string;\n  }): Observable<any> {\n\n    return this.deleteIdentityApiKidentityprovidersAliasDelete$Response(params).pipe(\n      map((r: StrictHttpResponse<any>) => r.body as any)\n    );\n  }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { BaseService } from '../base-service';\nimport { ApiConfiguration } from '../api-configuration';\nimport { StrictHttpResponse } from '../strict-http-response';\nimport { RequestBuilder } from '../request-builder';\nimport { Observable } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\n\nimport { SupportedDataTypesParams } from '../models/supported-data-types-params';\nimport { SupportedLanguagesParams } from '../models/supported-languages-params';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UtilitiesService extends BaseService {\n  constructor(\n    config: ApiConfiguration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * Path part for operation utilitiessupportedLanguagesApiUtilitiesSupportedLanguagesPost\n   */\n  static readonly UtilitiessupportedLanguagesApiUtilitiesSupportedLanguagesPostPath = '/api/utilities/supportedLanguages';\n\n  /**\n   * Utilitiessupportedlanguages.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `utilitiessupportedLanguagesApiUtilitiesSupportedLanguagesPost()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  utilitiessupportedLanguagesApiUtilitiesSupportedLanguagesPost$Response(params: {\n    body: SupportedLanguagesParams\n  }): Observable<StrictHttpResponse<any>> {\n\n    const rb = new RequestBuilder(this.rootUrl, UtilitiesService.UtilitiessupportedLanguagesApiUtilitiesSupportedLanguagesPostPath, 'post');\n    if (params) {\n      rb.body(params.body, 'application/json');\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<any>;\n      })\n    );\n  }\n\n  /**\n   * Utilitiessupportedlanguages.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `utilitiessupportedLanguagesApiUtilitiesSupportedLanguagesPost$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  utilitiessupportedLanguagesApiUtilitiesSupportedLanguagesPost(params: {\n    body: SupportedLanguagesParams\n  }): Observable<any> {\n\n    return this.utilitiessupportedLanguagesApiUtilitiesSupportedLanguagesPost$Response(params).pipe(\n      map((r: StrictHttpResponse<any>) => r.body as any)\n    );\n  }\n\n  /**\n   * Path part for operation utilitiessupportedDataTypesApiUtilitiesSupportedDataTypesPost\n   */\n  static readonly UtilitiessupportedDataTypesApiUtilitiesSupportedDataTypesPostPath = '/api/utilities/supportedDataTypes';\n\n  /**\n   * Utilitiessupporteddatatypes.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `utilitiessupportedDataTypesApiUtilitiesSupportedDataTypesPost()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  utilitiessupportedDataTypesApiUtilitiesSupportedDataTypesPost$Response(params: {\n    body: SupportedDataTypesParams\n  }): Observable<StrictHttpResponse<any>> {\n\n    const rb = new RequestBuilder(this.rootUrl, UtilitiesService.UtilitiessupportedDataTypesApiUtilitiesSupportedDataTypesPostPath, 'post');\n    if (params) {\n      rb.body(params.body, 'application/json');\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<any>;\n      })\n    );\n  }\n\n  /**\n   * Utilitiessupporteddatatypes.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `utilitiessupportedDataTypesApiUtilitiesSupportedDataTypesPost$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  utilitiessupportedDataTypesApiUtilitiesSupportedDataTypesPost(params: {\n    body: SupportedDataTypesParams\n  }): Observable<any> {\n\n    return this.utilitiessupportedDataTypesApiUtilitiesSupportedDataTypesPost$Response(params).pipe(\n      map((r: StrictHttpResponse<any>) => r.body as any)\n    );\n  }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { BaseService } from '../base-service';\nimport { ApiConfiguration } from '../api-configuration';\nimport { StrictHttpResponse } from '../strict-http-response';\nimport { RequestBuilder } from '../request-builder';\nimport { Observable } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\n\nimport { ContentPricing } from '../models/content-pricing';\nimport { ContentPricingBulkDelete } from '../models/content-pricing-bulk-delete';\nimport { ContentPricingCreate } from '../models/content-pricing-create';\nimport { ContentPricingGetResp } from '../models/content-pricing-get-resp';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ContentPricingService extends BaseService {\n  constructor(\n    config: ApiConfiguration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * Path part for operation getAllApiContentpricingGet\n   */\n  static readonly GetAllApiContentpricingGetPath = '/api/contentpricing';\n\n  /**\n   * Get All.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getAllApiContentpricingGet()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getAllApiContentpricingGet$Response(params?: {\n\n    /**\n     * Filter query to be executed against database.\n     */\n    'q'?: string;\n    skip?: number;\n    limit?: number;\n    sort?: string;\n\n    /**\n     * Comma seperated list of fields to return.\n     */\n    fields?: string;\n  }): Observable<StrictHttpResponse<ContentPricingGetResp>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ContentPricingService.GetAllApiContentpricingGetPath, 'get');\n    if (params) {\n      rb.query('q', params['q'], {});\n      rb.query('skip', params.skip, {});\n      rb.query('limit', params.limit, {});\n      rb.query('sort', params.sort, {});\n      rb.query('fields', params.fields, {});\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<ContentPricingGetResp>;\n      })\n    );\n  }\n\n  /**\n   * Get All.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getAllApiContentpricingGet$Response()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getAllApiContentpricingGet(params?: {\n\n    /**\n     * Filter query to be executed against database.\n     */\n    'q'?: string;\n    skip?: number;\n    limit?: number;\n    sort?: string;\n\n    /**\n     * Comma seperated list of fields to return.\n     */\n    fields?: string;\n  }): Observable<ContentPricingGetResp> {\n\n    return this.getAllApiContentpricingGet$Response(params).pipe(\n      map((r: StrictHttpResponse<ContentPricingGetResp>) => r.body as ContentPricingGetResp)\n    );\n  }\n\n  /**\n   * Path part for operation updateApiContentpricingPut\n   */\n  static readonly UpdateApiContentpricingPutPath = '/api/contentpricing';\n\n  /**\n   * Update.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `updateApiContentpricingPut()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  updateApiContentpricingPut$Response(params: {\n    body: ContentPricing\n  }): Observable<StrictHttpResponse<ContentPricing>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ContentPricingService.UpdateApiContentpricingPutPath, 'put');\n    if (params) {\n      rb.body(params.body, 'application/json');\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<ContentPricing>;\n      })\n    );\n  }\n\n  /**\n   * Update.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `updateApiContentpricingPut$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  updateApiContentpricingPut(params: {\n    body: ContentPricing\n  }): Observable<ContentPricing> {\n\n    return this.updateApiContentpricingPut$Response(params).pipe(\n      map((r: StrictHttpResponse<ContentPricing>) => r.body as ContentPricing)\n    );\n  }\n\n  /**\n   * Path part for operation createApiContentpricingPost\n   */\n  static readonly CreateApiContentpricingPostPath = '/api/contentpricing';\n\n  /**\n   * Create.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `createApiContentpricingPost()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  createApiContentpricingPost$Response(params: {\n    body: ContentPricingCreate\n  }): Observable<StrictHttpResponse<ContentPricing>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ContentPricingService.CreateApiContentpricingPostPath, 'post');\n    if (params) {\n      rb.body(params.body, 'application/json');\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<ContentPricing>;\n      })\n    );\n  }\n\n  /**\n   * Create.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `createApiContentpricingPost$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  createApiContentpricingPost(params: {\n    body: ContentPricingCreate\n  }): Observable<ContentPricing> {\n\n    return this.createApiContentpricingPost$Response(params).pipe(\n      map((r: StrictHttpResponse<ContentPricing>) => r.body as ContentPricing)\n    );\n  }\n\n  /**\n   * Path part for operation getApiContentpricingIdGet\n   */\n  static readonly GetApiContentpricingIdGetPath = '/api/contentpricing/{id}';\n\n  /**\n   * Get.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getApiContentpricingIdGet()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getApiContentpricingIdGet$Response(params: {\n    id: string;\n  }): Observable<StrictHttpResponse<ContentPricing>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ContentPricingService.GetApiContentpricingIdGetPath, 'get');\n    if (params) {\n      rb.path('id', params.id, {});\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<ContentPricing>;\n      })\n    );\n  }\n\n  /**\n   * Get.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getApiContentpricingIdGet$Response()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getApiContentpricingIdGet(params: {\n    id: string;\n  }): Observable<ContentPricing> {\n\n    return this.getApiContentpricingIdGet$Response(params).pipe(\n      map((r: StrictHttpResponse<ContentPricing>) => r.body as ContentPricing)\n    );\n  }\n\n  /**\n   * Path part for operation deleteApiContentpricingIdDelete\n   */\n  static readonly DeleteApiContentpricingIdDeletePath = '/api/contentpricing/{id}';\n\n  /**\n   * Delete.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `deleteApiContentpricingIdDelete()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  deleteApiContentpricingIdDelete$Response(params: {\n    id: string;\n  }): Observable<StrictHttpResponse<any>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ContentPricingService.DeleteApiContentpricingIdDeletePath, 'delete');\n    if (params) {\n      rb.path('id', params.id, {});\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<any>;\n      })\n    );\n  }\n\n  /**\n   * Delete.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `deleteApiContentpricingIdDelete$Response()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  deleteApiContentpricingIdDelete(params: {\n    id: string;\n  }): Observable<any> {\n\n    return this.deleteApiContentpricingIdDelete$Response(params).pipe(\n      map((r: StrictHttpResponse<any>) => r.body as any)\n    );\n  }\n\n  /**\n   * Path part for operation bulkdeleteApiContentpricingIdBulkdeleteDelete\n   */\n  static readonly BulkdeleteApiContentpricingIdBulkdeleteDeletePath = '/api/contentpricing/{id}/bulkdelete';\n\n  /**\n   * Bulkdelete.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `bulkdeleteApiContentpricingIdBulkdeleteDelete()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  bulkdeleteApiContentpricingIdBulkdeleteDelete$Response(params: {\n    id: string;\n    body: ContentPricingBulkDelete\n  }): Observable<StrictHttpResponse<any>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ContentPricingService.BulkdeleteApiContentpricingIdBulkdeleteDeletePath, 'delete');\n    if (params) {\n      rb.path('id', params.id, {});\n      rb.body(params.body, 'application/json');\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<any>;\n      })\n    );\n  }\n\n  /**\n   * Bulkdelete.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `bulkdeleteApiContentpricingIdBulkdeleteDelete$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  bulkdeleteApiContentpricingIdBulkdeleteDelete(params: {\n    id: string;\n    body: ContentPricingBulkDelete\n  }): Observable<any> {\n\n    return this.bulkdeleteApiContentpricingIdBulkdeleteDelete$Response(params).pipe(\n      map((r: StrictHttpResponse<any>) => r.body as any)\n    );\n  }\n\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { BaseService } from '../base-service';\nimport { ApiConfiguration } from '../api-configuration';\nimport { StrictHttpResponse } from '../strict-http-response';\nimport { RequestBuilder } from '../request-builder';\nimport { Observable } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\n\nimport { AddDescriptionParams } from '../models/add-description-params';\nimport { GetEpisodeDataParams } from '../models/get-episode-data-params';\nimport { ListEpisodesParams } from '../models/list-episodes-params';\nimport { UploadEpisodeParams } from '../models/upload-episode-params';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ContentEpisodesService extends BaseService {\n  constructor(\n    config: ApiConfiguration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * Path part for operation contentEpisodesaddDescriptionApiContentepisodesAddDescriptionPost\n   */\n  static readonly ContentEpisodesaddDescriptionApiContentepisodesAddDescriptionPostPath = '/api/contentepisodes/addDescription';\n\n  /**\n   * Contentepisodesadddescription.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `contentEpisodesaddDescriptionApiContentepisodesAddDescriptionPost()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  contentEpisodesaddDescriptionApiContentepisodesAddDescriptionPost$Response(params: {\n    body: AddDescriptionParams\n  }): Observable<StrictHttpResponse<any>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ContentEpisodesService.ContentEpisodesaddDescriptionApiContentepisodesAddDescriptionPostPath, 'post');\n    if (params) {\n      rb.body(params.body, 'application/json');\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<any>;\n      })\n    );\n  }\n\n  /**\n   * Contentepisodesadddescription.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `contentEpisodesaddDescriptionApiContentepisodesAddDescriptionPost$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  contentEpisodesaddDescriptionApiContentepisodesAddDescriptionPost(params: {\n    body: AddDescriptionParams\n  }): Observable<any> {\n\n    return this.contentEpisodesaddDescriptionApiContentepisodesAddDescriptionPost$Response(params).pipe(\n      map((r: StrictHttpResponse<any>) => r.body as any)\n    );\n  }\n\n  /**\n   * Path part for operation contentEpisodesgetEpisodeDataApiContentepisodesGetEpisodeDataPost\n   */\n  static readonly ContentEpisodesgetEpisodeDataApiContentepisodesGetEpisodeDataPostPath = '/api/contentepisodes/getEpisodeData';\n\n  /**\n   * Contentepisodesgetepisodedata.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `contentEpisodesgetEpisodeDataApiContentepisodesGetEpisodeDataPost()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  contentEpisodesgetEpisodeDataApiContentepisodesGetEpisodeDataPost$Response(params: {\n    body: GetEpisodeDataParams\n  }): Observable<StrictHttpResponse<any>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ContentEpisodesService.ContentEpisodesgetEpisodeDataApiContentepisodesGetEpisodeDataPostPath, 'post');\n    if (params) {\n      rb.body(params.body, 'application/json');\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<any>;\n      })\n    );\n  }\n\n  /**\n   * Contentepisodesgetepisodedata.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `contentEpisodesgetEpisodeDataApiContentepisodesGetEpisodeDataPost$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  contentEpisodesgetEpisodeDataApiContentepisodesGetEpisodeDataPost(params: {\n    body: GetEpisodeDataParams\n  }): Observable<any> {\n\n    return this.contentEpisodesgetEpisodeDataApiContentepisodesGetEpisodeDataPost$Response(params).pipe(\n      map((r: StrictHttpResponse<any>) => r.body as any)\n    );\n  }\n\n  /**\n   * Path part for operation contentEpisodeslistEpisodesApiContentepisodesListEpisodesPost\n   */\n  static readonly ContentEpisodeslistEpisodesApiContentepisodesListEpisodesPostPath = '/api/contentepisodes/listEpisodes';\n\n  /**\n   * Contentepisodeslistepisodes.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `contentEpisodeslistEpisodesApiContentepisodesListEpisodesPost()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  contentEpisodeslistEpisodesApiContentepisodesListEpisodesPost$Response(params: {\n    body: ListEpisodesParams\n  }): Observable<StrictHttpResponse<any>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ContentEpisodesService.ContentEpisodeslistEpisodesApiContentepisodesListEpisodesPostPath, 'post');\n    if (params) {\n      rb.body(params.body, 'application/json');\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<any>;\n      })\n    );\n  }\n\n  /**\n   * Contentepisodeslistepisodes.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `contentEpisodeslistEpisodesApiContentepisodesListEpisodesPost$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  contentEpisodeslistEpisodesApiContentepisodesListEpisodesPost(params: {\n    body: ListEpisodesParams\n  }): Observable<any> {\n\n    return this.contentEpisodeslistEpisodesApiContentepisodesListEpisodesPost$Response(params).pipe(\n      map((r: StrictHttpResponse<any>) => r.body as any)\n    );\n  }\n\n  /**\n   * Path part for operation contentEpisodesuploadEpisodeApiContentepisodesUploadEpisodePost\n   */\n  static readonly ContentEpisodesuploadEpisodeApiContentepisodesUploadEpisodePostPath = '/api/contentepisodes/uploadEpisode';\n\n  /**\n   * Contentepisodesuploadepisode.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `contentEpisodesuploadEpisodeApiContentepisodesUploadEpisodePost()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  contentEpisodesuploadEpisodeApiContentepisodesUploadEpisodePost$Response(params: {\n    body: UploadEpisodeParams\n  }): Observable<StrictHttpResponse<any>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ContentEpisodesService.ContentEpisodesuploadEpisodeApiContentepisodesUploadEpisodePostPath, 'post');\n    if (params) {\n      rb.body(params.body, 'application/json');\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<any>;\n      })\n    );\n  }\n\n  /**\n   * Contentepisodesuploadepisode.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `contentEpisodesuploadEpisodeApiContentepisodesUploadEpisodePost$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  contentEpisodesuploadEpisodeApiContentepisodesUploadEpisodePost(params: {\n    body: UploadEpisodeParams\n  }): Observable<any> {\n\n    return this.contentEpisodesuploadEpisodeApiContentepisodesUploadEpisodePost$Response(params).pipe(\n      map((r: StrictHttpResponse<any>) => r.body as any)\n    );\n  }\n\n}\n","import { Injectable, EventEmitter } from '@angular/core';\nimport {Subject} from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n  constructor() { }\n  tableProgressOff: Subject<object> = new Subject<object>();\n  public status = new EventEmitter();\n  public ModelStatus = new EventEmitter();\n  public selectedSiteChanged = new EventEmitter();\n  public setCompanyTab = new EventEmitter();\n\n  private data: number | undefined;\n  private tabNo: number | undefined;\n\n  tableProgress(value: boolean): void {\n    this.tableProgressOff.next({val: value});\n  }\n\n  display(value: boolean, text?: any): void {\n    this.status.next({ value, text });\n  }\n\n  Modeldisplay(value: boolean, text?: any): void {\n    this.ModelStatus.next({ value, text });\n  }\n\n  selectedSiteChange(value: any): void {\n    this.selectedSiteChanged.next(value);\n  }\n\n  changeCompanyTab(value: any): void {\n    this.setCompanyTab.next(value);\n  }\n\n  setOption(value: number | undefined): void {\n    this.data = value;\n  }\n\n  getOption(): any {\n    return this.data;\n  }\n\n  setTabNo(value: number | undefined): void {\n    this.tabNo = value;\n  }\n\n  getTabNo(): any {\n    return this.tabNo;\n  }\n\n  /**\n   * Identify which elements have changed in list to properly re-render DOM elements.\n   */\n  public trackByFn(_: any, item: any): number {\n    return item.stepIndex;\n  }\n}\n","import {  Injectable, Inject, Injector } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MyToastrService {\n  constructor(@Inject(Injector) private injector: Injector) { }\n  private get _toastrService(): ToastrService {\n    return this.injector.get(ToastrService);\n  }\n  sToast(type: string, message: string, title?: string | null): void {\n    // @ts-ignore\n    this._toastrService[type](message, title);\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport {MatPaginator, PageEvent} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\nimport {MatMenuTrigger} from '@angular/material/menu';\nimport {LoaderService} from '../../_services/loader.service';\nimport {MasterService} from '../../_services/master.service';\nimport {debounceTime, distinctUntilChanged} from 'rxjs/operators';\nimport {Subject} from 'rxjs';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {BaseRequestService} from '../../_services/base.service';\nimport {MyToastrService} from '../../_services/toastr.service';\nimport {CommonService} from '../../_services/common.services';\n\n@Component({\n  selector: 'app-s-crud-t',\n  templateUrl: './s-crud-t.component.html',\n  styleUrls: ['./s-crud-t.component.scss']\n})\nexport class SCrudTComponent implements OnInit, OnChanges {\n  @Input() tOption: any;\n  sOption: any;\n  filterQuery: any;\n  colFilterQuery: any;\n  cFields: any = [];\n  columnsList: string[] = [];\n  colHash: any = {};\n  value: any;\n  colFilters: any = [];\n  colfilter: any = {};\n  columns!: Array<any>;\n  displayedColumns!: Array<any>;\n  dataSource: MatTableDataSource<any>;\n  @ViewChild('MTABLEDIV', {static: false})\n  tableDiv!: ElementRef;\n  @ViewChild(MatPaginator, {static: true})\n  paginator!: MatPaginator;\n  @ViewChild(MatSort, {static: true})\n  sort!: MatSort;\n  @ViewChild('filterMenuTrigger', {static: false})\n  filterMenuTrigger!: MatMenuTrigger;\n  @ViewChild('listMenuTrigger', {static: false})\n  listMenuTrigger!: MatMenuTrigger;\n  @ViewChild('exportMenuTrigger', {static: false})\n  exportMenuTrigger!: MatMenuTrigger;\n  @Output() addCallback = new EventEmitter();\n  @Output() hyperlinkCallback = new EventEmitter();\n  @Output() colfilterUpdate = new EventEmitter();\n  @Output() checkBoxCallback = new EventEmitter();\n  @Output() actionCallback = new EventEmitter();\n  @Output() globalActionCallback = new EventEmitter();\n  @Output() totalCallback = new EventEmitter();\n  filterKey: any;\n  private searchedColName: any;\n  cFilter: any = {};\n  cpIndex = 0;\n  isAChanged = false;\n  filterUpdate = new Subject<string>();\n  private tmpOption: any;\n  private toption: any;\n  isMultiple = true;\n  initSelectedValues = [];\n  selection = new SelectionModel<any>(this.isMultiple, this.initSelectedValues);\n  numSelected!: number;\n  filterEnabled = false;\n\n  constructor(private loaderService: LoaderService, private masterService: MasterService,\n              private baseService: BaseRequestService, private toast: MyToastrService,\n              private commonService: CommonService,\n              ) {\n    this.filterUpdate.pipe( debounceTime(1500), distinctUntilChanged()).subscribe(value => {\n      this.applyFilter(value);\n    });\n  }\n\n  clearSelection(): void {\n    this.selection.clear();\n    // @ts-ignore\n    this.numSelected = undefined;\n  }\n\n  isAllSelected(): any {\n    this.numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    if (this.tOption.isCheckboxSelection && this.tOption.local) {\n      this.checkBoxCallback.emit(this.selection.selected);\n    }\n    return this.numSelected === numRows;\n  }\n\n  masterToggle(): void {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n    if (this.tOption.isCheckboxSelection && this.tOption.local) {\n      this.checkBoxCallback.emit(this.selection.selected);\n    }\n  }\n\n  rowToggle(row: any): void {\n    this.selection.toggle(row);\n    if (this.tOption.isCheckboxSelection && this.tOption.local) {\n      this.checkBoxCallback.emit(this.selection.selected);\n    }\n  }\n\n  actionCall(row: any, action: any): void {\n    delete row.highlighted;\n    delete row.hovered;\n    const resp = {row, action};\n    if (this.tOption.showAction && this.tOption.actionMenuItems.length > 0) {\n      this.actionCallback.emit(resp);\n    }\n  }\n\n  globalActionCall(row: any, action: any): void {\n    delete row.highlighted;\n    delete row.hovered;\n    const resp = {row, action};\n    if (this.tOption.showAction && this.tOption.actionMenuItems.length > 0) {\n      this.globalActionCallback.emit(resp);\n    }\n  }\n\n  hyperLinkCall(row: any, col?: any): any {\n    delete row.highlighted;\n    delete row.hovered;\n    const event = {row, col};\n    this.hyperlinkCallback.emit(event);\n  }\n\n  columnFilter(col: any): void {\n    const searchKey = (col && col.arrayCols) ? `${col.col}.${col.arrayCols.key}` : col.col\n    this.searchedColName = searchKey;\n    this.colFilters.push({key: searchKey, name: col.header, value: col.val, hKey: col.colFilters.hKey});\n    this.processColFilterQuery();\n  }\n\n  removeFilter(rFilter: any): void {\n    if (this.tOption.gFilter) {\n      delete this.tOption.gFilter;\n      this.tmpOption = JSON.parse(JSON.stringify(this.toption));\n      this.colFilters = [];\n      this.colFilterQuery = [];\n      this.filterQuery = {};\n      this.getCollectionData();\n      return;\n    }\n    this.colFilters.forEach((obj: { key: string | number; }, index: any) => {\n      if (rFilter.key === obj.key) {\n        this.colfilter[obj.key] = '';\n        this.colFilters.splice(index, 1);\n      }\n    });\n    this.processColFilterQuery();\n  }\n\n  getProperty(object: any, propertyName: any): any {\n    let parts: any[];\n    let property: string;\n    parts = propertyName.split('.');\n    const length = parts.length;\n    let i: number;\n    property = object;\n    for (i = 0; i < length; i++) {\n      // @ts-ignore\n      property = (property[parts[i]]) ? property[parts[i]] : ''; // @ts-ignore\n      if (property[parts[i]] === 0) { property = property[parts[i]]; }\n    }\n    return property;\n  }\n\n  processColFilterQuery(): void {\n    this.colFilterQuery = [];\n    for (const cl of this.colFilters) {\n      const tmpObj1: any = {bool: {should: [{match: {}}]}};\n      let tmpObj: any = {};\n      if (cl.hKey) {\n        tmpObj = {bool: {should: [{query_string: {fields: [cl.key], query: `*${cl.value}*`}}]}};\n      } else {\n        tmpObj1.bool.should[0].match[cl.key] = cl.value;\n        tmpObj = tmpObj1;\n      }\n      this.colFilterQuery.push(tmpObj);\n    }\n    this.getCollectionData();\n  }\n\n  drop(event: CdkDragDrop<string[]>): void {\n    moveItemInArray(this.displayedColumns, event.previousIndex, event.currentIndex);\n  }\n\n  ngOnInit(): void {\n    this.columnsList = [];\n    this.colHash = {};\n    for (const c of this.tOption.columns) {\n      this.columnsList.push(c.col);\n      this.colHash[c.col] = c;\n      if (c.colFilters && c.colFilters.hKey) {\n        this.cFields.push(c.col);\n      }\n    }\n    this.toption = JSON.parse(JSON.stringify(this.tOption));\n    this.tmpOption = {...this.tOption};\n    if (this.tOption.serverSide && this.tOption.serverSide.service) {\n      this.getCollectionData();\n    } else {\n      this.initiateTable(this.tOption.dataList);\n    }\n  }\n\n  getCollectionData(): void {\n    this.filterEnabled = false;\n    this.tOption.dataList = [];\n    this.loaderService.display(true, this.tOption.lMsg);\n    // tslint:disable-next-line:no-shadowed-variable\n    delete this.tmpOption.serverSide.q.query.bool.filter;\n    this.tmpOption.serverSide.q.query.bool.must.forEach((obj: any, index: number) => {\n      if (obj.bool && obj.bool.should && obj.bool.should[0].match) {\n        this.tmpOption.serverSide.q.query.bool.must.splice(index, 1);\n      } else if (obj.multi_match) {\n        this.tmpOption.serverSide.q.query.bool.must.splice(index, 1);\n      }\n    });\n    const query: any = this.tmpOption.serverSide.q;\n    if (this.filterQuery && this.filterQuery.multi_match) { // Global filter\n      query.query.bool.must.push(this.filterQuery);\n      this.filterEnabled = true;\n    }\n    if (this.colFilterQuery && this.colFilterQuery.length) { // Multi Column filter\n      query.query.bool.filter = []; this.filterEnabled = true;\n      this.colFilterQuery.forEach((obj: any) => {\n        if (obj.bool && obj.bool.should && obj.bool.should[0].match) {\n          if (obj.bool.should.length > 1) {\n            obj.bool.should.forEach((match: any) => {\n              query.query.bool.must.push(match);\n            });\n          } else {\n            query.query.bool.must.push(obj);\n          }\n        } else {\n          query.query.bool.filter.push(obj);\n        }\n      });\n    } else if (this.colFilterQuery && this.colFilterQuery.range) {\n      query.query.bool.filter = []; this.filterEnabled = true;\n      query.query.bool.filter.push(this.colFilterQuery);\n    } else if (this.colFilterQuery && this.colFilterQuery[0] && this.colFilterQuery[0].range) {\n      query.query.bool.filter = []; this.filterEnabled = true;\n      this.colFilterQuery.forEach((obj: any) => {\n        query.query.bool.filter.push(obj);\n      });\n    } else if (this.colFilterQuery && this.colFilterQuery.must_not) {\n      this.filterEnabled = true;\n      query.query.bool.must_not = this.colFilterQuery.must_not;\n    }\n    const q = JSON.stringify(query);\n    const skip = this.cpIndex;\n    const limit = this.tOption.pSize;\n    const sort = JSON.stringify(this.tOption.serverSide.sort);\n    this.tOption.loading = true; // @ts-ignore\n    this.masterService[this.tOption.serverSide.service][this.tOption.serverSide.fn]({q, skip, limit, sort})\n      .subscribe((result: any) => {\n        this.tOption.loading = false;\n        this.loaderService.display(false);\n        this.tOption.dataList = result.data;\n        this.tOption.pTotal = result.total;\n        this.initiateTable(result.data);\n      });\n  }\n\n  initiateTable(dataList: any): void {\n    const cols = dataList\n      // tslint:disable-next-line:no-shadowed-variable\n      .reduce((cols: any, row: {}) => {\n        return [...cols, ...Object.keys(row)];\n      }, [])\n      // tslint:disable-next-line:no-shadowed-variable\n      .reduce((cols: string | any[], column: any) => {\n        return cols.includes(column)\n          ? cols\n          : [...cols, column];\n      }, []);\n    // Describe the columns for <mat-table>.\n    /*this.columns = cols.map((column: string | number) => {\n      return {\n        columnDef: column,\n        header: (this.colHash[column]) ? this.colHash[column].header : column,\n        cell: (element: any) => `${element[column] ? element[column] : ``}`,\n        ...this.colHash[column]\n      };\n    });*/\n    this.displayedColumns = this.columnsList.slice();\n    if (this.tOption.showAction) { this.displayedColumns.push('action'); }\n    this.dataSource = new MatTableDataSource<any>(dataList);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    if (!this.filterEnabled) {\n      this.totalCallback.emit({value: this.tOption.pTotal, id: this.tOption.id});\n    }\n  }\n\n  applyFilter(filterValue: any): void {\n    if (this.tOption.gFilter && this.colFilters.length) {\n      this.tOption.gFilter = undefined;\n      this.colFilters = [];\n    }\n    if (this.tOption.serverSide && this.tOption.serverSide.service) {\n      this.filterQuery = (filterValue)\n        ? {multi_match: {query: filterValue, type: 'phrase_prefix', fields: this.cFields}}\n        : undefined;\n      this.getCollectionData();\n    } else {\n      this.dataSource.filter = filterValue.trim().toLowerCase();\n      if (this.dataSource.paginator) {\n        this.dataSource.paginator.firstPage();\n      }\n    }\n  }\n\n  applySorting(event: any): void {\n    if (!event.active) { return; }\n    let keyword = '';\n    this.tOption.columns.forEach((obj: any) => {\n      if (obj.col === event.active && obj.isKeyword) { keyword = '.keyword'; return; }\n      if (obj.col === event.active && obj.isKey) {keyword = '.name.keyword'; return; }\n    });\n    const value = event.active.replace(/^\\s+|\\s+$/g, '');\n    const newVal = value.split(' ').join('') + keyword;\n    if (this.tOption.serverSide && this.tOption.serverSide.service) {\n      this.tOption.serverSide.sort = [{[newVal]: {order: event.direction}}];\n    }\n    this.getCollectionData();\n  }\n\n  isBool(cell: any): boolean {\n    return (cell === 'true' || cell === '');\n  }\n\n  pageChanged(event: PageEvent): void {\n    this.isAChanged = true;\n    this.cpIndex = event.pageIndex;\n    this.tOption.pSize = event.pageSize;\n    this.getCollectionData();\n  }\n\n  refreshTableData(): void {\n    if (this.tOption.serverSide && this.tOption.serverSide.service) {\n      this.getCollectionData();\n    } else {\n      this.getCollectionData();\n    }\n  }\n\n  arrayToString(objArr: any, key: string): any {\n    return objArr.map((x: any) => x[key]);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.tOption = changes.tOption.currentValue;\n    if (this.tOption.gFilter) {\n      this.colFilterQuery = this.tOption.gFilter;\n      let ckey: any; let val: any;\n      if (this.tOption.gFilter && (this.tOption.gFilter.range || this.tOption.gFilter[0].range)) {\n        if (this.tOption.gFilter.range) {\n          ckey = Object.keys(this.tOption.gFilter.range)[0];\n          val =  JSON.stringify(this.tOption.gFilter.range[Object.keys(this.tOption.gFilter.range)[0]]);\n        } else {\n          ckey = Object.keys(this.tOption.gFilter[0].range)[0];\n          val =  JSON.stringify(this.tOption.gFilter[0].range[Object.keys(this.tOption.gFilter[0].range)[0]]);\n        }\n      } else if (this.tOption.gFilter && this.tOption.gFilter.must_not) {\n        ckey = 'must_not';\n        val =  JSON.stringify(this.tOption.gFilter.must_not);\n      } else if (this.tOption.gFilter && this.tOption.gFilter[0] && this.tOption.gFilter[0].bool &&\n        this.tOption.gFilter[0].bool.should && this.tOption.gFilter[0].bool.should[0] &&\n        this.tOption.gFilter[0].bool.should[0].exists) {\n        ckey = Object.keys(this.tOption.gFilter[0].bool.should[0].exists)[0];\n        val = this.tOption.gFilter[0].bool.should[0].exists[Object.keys(this.tOption.gFilter[0].bool.should[0].exists)[0]];\n      } else if (this.tOption.gFilter && this.tOption.gFilter[0] && this.tOption.gFilter[0].bool && this.tOption.gFilter[0].bool.must_not) {\n        ckey = 'must_not';\n        val = JSON.stringify(this.tOption.gFilter[0].bool.must_not[0]);\n      } else {\n        ckey = Object.keys(this.tOption.gFilter[0].bool.should[0].match)[0];\n        val = this.tOption.gFilter[0].bool.should[0].match[Object.keys(this.tOption.gFilter[0].bool.should[0].match)[0]];\n      }\n      this.colFilters = [{key: ckey, name: ckey, value: val, hKey: false}];\n      if ((!this.tOption.gFilter.range || !this.tOption.gFilter[0].range) && this.tOption.gFilter[0] && this.tOption.gFilter[0].bool &&\n        this.tOption.gFilter[0].bool.should && this.tOption.gFilter[0].bool.should.length > 1) {\n        this.colFilters = [];\n        this.tOption.gFilter[0].bool.should.forEach((obj: any) => {\n          this.colFilters.push({key: Object.keys(obj.match)[0], name: Object.keys(obj.match)[0],\n            value: obj.match[Object.keys(obj.match)[0]], hKey: false});\n        });\n      }\n      this.getCollectionData();\n    }\n  }\n\n  downloadAsXls(type: string): void {\n    if (!this.tOption.faClass) {\n      this.toast.sToast('error', 'Class name not added.');\n      return;\n    }\n    const dateStr = new Date().toLocaleDateString().replace(/\\//g, '_') + '_'\n      + new Date().toLocaleTimeString().replace(/\\:/g, '_');\n    const xlsxParam: any = {\n      query: '', classname: this.tOption.faClass, fieldmap: [],\n      filename: this.tOption.faClass + '_' + dateStr\n    };\n    for (const col of this.tOption.columns) {\n      // @ts-ignore\n      xlsxParam.fieldmap.push({field: col.col, renameas: col.header});\n    }\n    this.loaderService.display(true, 'Preparing xlsx file...');\n    // tslint:disable-next-line:no-shadowed-variable\n    let query: any = {};\n    delete this.tmpOption.serverSide.q.query.bool.filter;\n    this.tmpOption.serverSide.q.query.bool.must.forEach((obj: any, index: number) => {\n      if (obj.bool && obj.bool.should && obj.bool.should[0]?.match) {\n        this.tmpOption.serverSide.q.query.bool.must.splice(index, 1);\n      } else if (obj.multi_match) {\n        this.tmpOption.serverSide.q.query.bool.must.splice(index, 1);\n      }\n    });\n    query = {...this.tmpOption.serverSide.q};\n    if (this.filterQuery && this.filterQuery.multi_match) { // Global filter\n      query.query.bool.must.push(this.filterQuery);\n    }\n    if (this.colFilterQuery && this.colFilterQuery.length && type !== 'full') { // Multi Column filter\n      query.query.bool.filter = [];\n      this.colFilterQuery.forEach((obj: any) => {\n        if (obj.bool && obj.bool.should && obj.bool.should[0]?.match) {\n          query.query.bool.must.push(obj);\n        } else {\n          query.query.bool.filter.push(obj);\n        }\n      });\n    }\n    xlsxParam.query = JSON.stringify(query);\n    // this.companyService.companygetxlsxreportApiCompanyIdGetxlsxreportPost(\n    //   {id: this.commonService.currentCompany._id, body: xlsxParam}).subscribe((result: any) => {\n    //   this.loaderService.display(false);\n    //   if (result && result.length && result[0]) {\n    //     window.open(result[1], '_blank');\n    //   } else {\n    //     this.toast.sToast('error', result[1]);\n    //   }\n    // });\n  }\n\n  getEmptyColumns(): {[key: string]: boolean} {\n    const columns: any = {};\n    this.displayedColumns.forEach(col => {\n      columns[col] = this.dataSource.data.every(element => {\n        return !element[col];\n      });\n    });\n    return columns;\n  }\n\n  addTableRecord(): void {\n    this.addCallback.emit({});\n  }\n}\n","<mat-card class=\"table-card mb-2\">\n  <mat-toolbar class=\"table-tools\" role=\"heading\">\n    <div fxFlex fxLayout fxLayoutAlign=\"start\">\n      <span class=\"t-title fs1\">{{tOption.title}} <span class=\"fw3\" *ngIf=\"tOption.pTotal && tOption.pTotal > 0 && tOption.title\">\n      ({{tOption.pTotal | shortNumber}}) </span></span>\n      <button class=\"px-1 lh-25\" mat-stroked-button *ngIf=\"tOption.add\" type=\"button\"  matTooltip=\"Add New Record\"  color=\"primary\"\n          (click)=\"addTableRecord()\" id =\"addbtn{{tOption.title}}\">\n      <mat-icon class=\"mat-18 mb-1\">add</mat-icon> Add\n    </button>\n    </div>\n    <div fxFlex fxLayout fxLayoutAlign=\"end\">\n      <div fxLayout fxLayoutGap=\"15px\" class=\"navigation-items\">\n        <form fxLayout=\"row\" fxLayoutAlign=\"center center\">\n          <mat-form-field class=\"search-tool\" floatLabel=\"never\">\n            <input matInput name=\"valuesearch\" [id]=\"tOption.id\" [(ngModel)]=\"value\" (ngModelChange)=\"filterUpdate.next($event)\"\n                   placeholder=\"Search\" autocomplete=\"off\">\n            <button color=\"primary\" mat-button *ngIf=\"!value || value === ''\" aria-label=\"Search\"\n                    matSuffix mat-icon-button> <mat-icon>search</mat-icon>\n            </button>\n            <button color=\"primary\" mat-button *ngIf=\"value\" matSuffix mat-icon-button aria-label=\"Clear\"\n                    (click)=\"value=''; applyFilter('');\"> <mat-icon>close</mat-icon>\n            </button>\n          </mat-form-field>\n          <div fxFlex fxLayout fxLayoutAlign=\"end\" >\n            <button matSuffix mat-icon-button matTooltip=\"Reload Table Data\" (click)=\"refreshTableData();\"\n                    color=\"primary\" > <mat-icon id=\"rfrbtn{{tOption.title}}\">refresh</mat-icon>\n            </button>\n            <button mat-icon-button menuOpen=\"false\" matTooltip=\"Filter List\"\n                  *ngIf=\"tOption.cFilter\" color=\"primary\"\n                  [matMenuTriggerFor]=\"filterMenu\" #filterMenuTrigger=\"matMenuTrigger\">\n            <mat-icon class=\"\">filter_list</mat-icon></button>\n          <mat-menu #filterMenu=\"matMenu\" class=\"col-filters\">\n            <mat-card class=\"filter-card\" (click)=\"$event.stopPropagation();\">\n              <mat-card-header>\n                <mat-card-title>Filter</mat-card-title>\n              </mat-card-header>\n              <mat-card-content>\n                <form #filterForm=\"ngForm\" role=\"form\">\n                  <mat-form-field *ngIf=\"tOption.columns && tOption.columns.length\" class=\"w-100\" appearance=\"outline\">\n                    <mat-label>Choose filter column</mat-label>\n                    <mat-select placeholder=\"Choose filter column\" name=\"chooseFilter\" required [(ngModel)]=\"cFilter.selectedCol\">\n                      <mat-option value=\"\">Choose filter column</mat-option>\n                      <mat-option *ngFor=\"let val of tOption.columns\" [value]=\"val.col\" [id]=\"val.id\">{{val.header}}</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                  <mat-form-field *ngIf=\"cFilter.selectedCol\" class=\"w-100\" appearance=\"outline\">\n                    <mat-label>Search {{colHash[cFilter.selectedCol].header}}</mat-label>\n                    <input matInput type=\"text\" trim=\"blur\" *ngIf=\"colHash[cFilter.selectedCol].colFilters.type === 'text'\"\n                           placeholder=\"Search {{colHash[cFilter.selectedCol].header}}\" required\n                            name=\"{{colHash[cFilter.selectedCol].col}}s\" [(ngModel)]=\"colHash[cFilter.selectedCol].val\" >\n                    <mat-select placeholder=\"Search {{colHash[cFilter.selectedCol].header}}\" name=\"{{colHash[cFilter.selectedCol].col}}s\"\n                                *ngIf=\"colHash[cFilter.selectedCol].colFilters.type === 'select'\" required\n                                [(ngModel)]=\"colHash[cFilter.selectedCol].val\">\n                      <mat-option *ngFor=\"let val of colHash[cFilter.selectedCol].colFilters.options\" [value]=\"val.value\">{{val.name}}</mat-option>\n                    </mat-select>\n                    <ng-container *ngIf=\"colHash[cFilter.selectedCol].colFilters.type === 'range'\">\n                      <mat-date-range-input [rangePicker]=\"picker\">\n                        <input matStartDate name=\"startDate\" [(ngModel)]=\"colHash[cFilter.selectedCol].start\"\n                               placeholder=\"Start date\">\n                        <input matEndDate name=\"startDate\" [(ngModel)]=\"colHash[cFilter.selectedCol].end\"\n                               placeholder=\"End date\">\n                      </mat-date-range-input>\n                      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                      <mat-date-range-picker #picker></mat-date-range-picker>\n                    </ng-container>\n                  </mat-form-field>\n                  <button (click)=\"columnFilter(colHash[cFilter.selectedCol])\" [disabled]=\"!filterForm.form.valid\"\n                          color=\"primary\" mat-raised-button=\"\">Add Filter</button>\n                   <button class=\"ml-2\" (click)=\"cFilter.selectedCol = ''\"  mat-stroked-button=\"\">Clear</button>\n                </form>\n              </mat-card-content>\n            </mat-card>\n          </mat-menu>\n          <button id=\"gbtn{{tOption.title}}\" color=\"primary\" matSuffix mat-icon-button\n                  matTooltip=\"Download as XLSx\" [matMenuTriggerFor]=\"xlsMenu\"\n              aria-label=\"download xlsx menu\">\n            <mat-icon class=\"mat-24\">file_download</mat-icon>\n            </button>\n            <mat-menu #xlsMenu=\"matMenu\">\n              <button mat-menu-item id=\"currentSelection\" (click)=\"downloadAsXls('filtered')\">\n                <mat-icon class=\"mat-24\">filter_list</mat-icon>\n                <span>Filtered Data</span>\n              </button>\n              <button mat-menu-item id=\"fullData\" (click)=\"downloadAsXls('full')\">\n                <mat-icon class=\"mat-24\">file_download</mat-icon>\n                <span>Full Data</span>\n              </button>\n            </mat-menu>\n          </div>\n        </form>\n      </div>\n    </div>\n  </mat-toolbar>\n  <mat-toolbar class=\"select-tools\" *ngIf=\"selection.selected.length > 0\">\n    <span>{{selection.selected.length}} {{tOption.selectText}} selected.</span>\n    <div fxFlex fxLayout fxLayoutAlign=\"end\">\n      <ng-container *ngIf=\"!tOption.isHideGlobal\">\n        <button mat-flat-button color=\"primary\" id=\"gbtnSelction{{tOption.title}}\" mat-raised-button\n                [matMenuTriggerFor]=\"gactionSMenu\" [disabled]=\"selection.selected.length === 0\"\n                aria-label=\"global action with a menu\"> Global Actions\n        </button>\n        <mat-menu #gactionSMenu=\"matMenu\">\n          <ng-container *ngFor=\"let item of tOption.actionMenuItems\">\n            <a id=\"ganchsel{{item.text}}\" class=\"mat-primary\"\n               *ngIf=item.isGlobal mat-menu-item (click)=\"globalActionCall(selection.selected, item)\">\n              <mat-icon class=\"mat-18\" *ngIf=item.icon>{{item.icon}}</mat-icon>\n              <mat-icon class=\"mat-18\" *ngIf=!item.icon>arrow_forward_ios</mat-icon>\n              <span>{{ item.text }}</span>\n            </a>\n          </ng-container>\n        </mat-menu>\n      </ng-container>\n      <button class=\"gray\" matSuffix mat-icon-button (click)=\"clearSelection();\">\n        <mat-icon>close</mat-icon>\n      </button>\n    </div>\n  </mat-toolbar>\n  <mat-chip-list aria-label=\"Column Filters\" class=\"mb-2\">\n    <mat-chip class=\"ml-2 my-2\" *ngFor=\"let filter of colFilters\" (removed)=\"removeFilter(filter)\">\n      {{filter.name}} = *{{filter.value}}* <mat-icon matChipRemove>cancel</mat-icon>\n    </mat-chip>\n  </mat-chip-list>\n  <mat-card-content>\n    <mat-progress-bar mode=\"indeterminate\" *ngIf=\"tOption.loading\"></mat-progress-bar>\n    <div #MTABLEDIV class=\"overflow-auto\">\n      <table mat-table [dataSource]=\"dataSource\" cdkDropList cdkDropListOrientation=\"horizontal\"\n       (cdkDropListDropped)=\"drop($event)\" matSort (matSortChange)=\"applySorting($event)\" class=\"w-100 crud-table\" >\n        <ng-container matColumnDef=\"select\" *ngIf=\"tOption.rowSelection\" sticky>\n          <th mat-header-cell *matHeaderCellDef class=\"ww-break\">\n            <mat-checkbox color=\"primary\" (change)=\"$event ? masterToggle() : null\" id=\"_selectDeselectAll\"\n              [checked]=\"selection.hasValue() && isAllSelected()\"\n              [indeterminate]=\"selection.hasValue() && !isAllSelected()\"></mat-checkbox>\n          </th>\n          <td mat-cell *matCellDef=\"let row\" class=\"ww-break\">\n            <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\" [id]=\"row._id\"\n              (change)=\"$event ? rowToggle(row) : null\" [checked]=\"selection.isSelected(row)\"></mat-checkbox>\n          </td>\n        </ng-container>\n        <ng-container *ngFor=\"let column of tOption.columns; let i = index;\" [matColumnDef]=\"column.col\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header cdkDrag (click)=\"applySorting($event)\">\n            <span>{{ column.header }}</span>\n          </th>\n          <td mat-cell *matCellDef=\"let row\">\n            <ng-container *ngIf=\"column.hyperLinkCall\">\n              <a href=\"javascript:\" (click)=\"hyperLinkCall(row, column.col)\">\n                <ng-container *ngIf=\"column.hyperLinkCall.filter && column.hyperLinkCall.filter !== ''\">\n                  <span>{{ getProperty(row, column.col) | formatCell:column.hyperLinkCall.filter }} </span>\n                </ng-container>\n                <ng-container *ngIf=\"column.hyperLinkCall.isHtml\">\n                  <div [innerHTML]=\"getProperty(row, column.col) | safeHTML\"></div>\n                </ng-container>\n                <ng-container *ngIf=\"column.hyperLinkCall.noFilter\">\n                  <span>{{getProperty(row, column.col)}}</span>\n                </ng-container>\n              </a>\n            </ng-container>\n            <ng-container *ngIf=\"column.hyperLink\">\n              <ng-container *ngIf=\"getProperty(row, column.col)\">\n                <a *ngIf=\"getProperty(row, column.col).indexOf(column.hyperLink.match) > -1\"\n                   target=\"_blank\"\n                   [href]=\"column.hyperLink.hotLink + getProperty(row, column.col)\">\n                  <span>{{getProperty(row, column.col)}}</span>\n                </a>\n                <div *ngIf=\"getProperty(row, column.col).indexOf(column.hyperLink.match) === -1\">\n                  <span>{{getProperty(row, column.col)}}</span>\n                </div>\n              </ng-container>\n            </ng-container>\n            <ng-container *ngIf=\"column.htmlCols\">\n              <div *ngIf=\"getProperty(row, column.col) && column.htmlCols['_success']\"\n                   [innerHTML]=\"column.htmlCols['_success'] | safeHTML\"></div>\n              <div *ngIf=\"!getProperty(row, column.col) && column.htmlCols['_failure']\"\n                   [innerHTML]=\"column.htmlCols['_failure'] | safeHTML\"></div>\n              <div *ngIf=\"(getProperty(row, column.col) === undefined) && column.htmlCols['_undefined']\"\n                   [innerHTML]=\"column.htmlCols['_undefined'] | safeHTML\"></div>     \n              <div *ngIf=\"column.htmlCols[getProperty(row, column.col)]\"\n                   [innerHTML]=\"column.htmlCols[getProperty(row, column.col)] | safeHTML\"></div>\n            </ng-container>\n            <ng-container *ngIf=\"column.conditionalClass\">\n              <ng-container *ngFor=\"let cond of column.conditionalClass;\">\n                <div *ngIf=\"cond.operation === 'gt' && getProperty(row, column.col) > cond.value\">\n                  <span [ngClass]=\"cond.class\">{{getProperty(row, column.col)}}</span>\n                </div>\n                <div *ngIf=\"cond.operation === 'lt' && getProperty(row, column.col) < cond.value\">\n                  <span [ngClass]=\"cond.class\">{{getProperty(row, column.col)}}</span>\n                </div>\n              </ng-container>\n            </ng-container>\n            <ng-container *ngIf=\"column.arrayCols\">\n              <span>{{arrayToString(getProperty(row, column.col), column.arrayCols.key)}}</span>\n            </ng-container>\n            <ng-container *ngIf=\"column.filter && column.filter !== ''\">\n              <span [matTooltip]=\"getProperty(row, column.col) | formatCell:column.filter\" *ngIf=\"column.filter.indexOf('arrayToObjWithEllipsis') > -1\"> {{ getProperty(row, column.col) | formatCell:column.filter }} </span>\n              <span [matTooltip]=\"getProperty(row, column.col)\" *ngIf=\"column.filter.indexOf('arrayToObjWithEllipsis') === -1\"> {{ getProperty(row, column.col) | formatCell:column.filter }} </span>\n            </ng-container>\n            <ng-container *ngIf=\"column.isHtml\">\n              <div [innerHTML]=\"getProperty(row, column.col) | safeHTML\"></div>\n            </ng-container>\n            <ng-container *ngIf=\"column.noFilter\">\n              <span>{{getProperty(row, column.col)}}</span>\n            </ng-container>\n          </td>\n        </ng-container>\n        <!-- Star Column -->\n        <ng-container matColumnDef=\"star\" stickyEnd>\n          <th mat-header-cell *matHeaderCellDef></th>\n          <td mat-cell *matCellDef=\"let element\">\n            <mat-icon>more_vert</mat-icon>\n          </td>\n        </ng-container>\n        <ng-container matColumnDef=\"action\" *ngIf=\"tOption.showAction\" stickyEnd>\n          <th mat-header-cell *matHeaderCellDef class=\"wwbreak\"\n            [ngClass]=\"tOption.showAction ? 'color1' : 'color2' \">Action\n            <mat-menu #gactionMenu=\"matMenu\">\n              <ng-container *ngFor=\"let item of tOption.actionMenuItems\">\n                <a id=\"ganch{{item.text}}\" *ngIf=item.isGlobal mat-menu-item (click)=\"globalActionCall(selection.selected, item)\">\n                  <mat-icon class=\"mat-18\" *ngIf=item.icon>{{item.icon}}</mat-icon>\n                  <mat-icon class=\"mat-18\" *ngIf=!item.icon>arrow_forward_ios</mat-icon>\n                  <span>{{ item.text }}</span>\n                </a>\n              </ng-container>\n            </mat-menu>\n          </th>\n          <td mat-cell *matCellDef=\"let element\" class=\"wwbreak\"\n            [ngClass]=\"tOption.showAction ? 'color1' : 'color2' \">\n            <button id=\"btn{{tOption.title}}\" mat-icon-button  color=\"primary\" [matMenuTriggerFor]=\"actionMenu\" aria-label=\"row action with a menu\"\n              [disabled]=\"selection.selected.length > 0\">\n              <mat-icon>more_vert</mat-icon>\n            </button>\n            <mat-menu #actionMenu=\"matMenu\">\n              <ng-container *ngFor=\"let item of tOption.actionMenuItems\">\n                <a  id=\"anch{{item.text}}\" *ngIf=\"item.callback && !item.hideLocal\" mat-menu-item (click)=\"actionCall(element, item)\">\n                  <mat-icon *ngIf=item.icon>{{item.icon}}</mat-icon>\n                  <mat-icon *ngIf=!item.icon>arrow_forward_ios</mat-icon>\n                  <span>{{ item.text }}</span>\n                </a>\n              </ng-container>\n            </mat-menu>\n          </td>\n        </ng-container>\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n      <p class=\"ml-3 mt-2\" *ngIf=\"!dataSource || !dataSource.data || !dataSource.data.length\">\n        <span *ngIf=\"tOption.loading\">Please wait!</span>\n        <span *ngIf=\"!tOption.loading && tOption.pTotal === 0 && !tOption.nomsg\">\n          No data available!\n        </span>\n        <span *ngIf=\"!tOption.loading && tOption.pTotal === 0 && tOption.nomsg\">\n         {{tOption.nomsg}}\n        </span>\n      </p>\n      <mat-paginator class=\"mr20 t-paginator\" *ngIf=\"tOption.pagination && tOption.pTotal < 10000\"\n                     [pageSize]=\"tOption.pSize\" showFirstLastButtons\n                     [length]=\"tOption.pTotal\" #paginator [pageSizeOptions]=\"tOption.pList\"\n                     (page)=\"pageChanged($event)\"></mat-paginator>\n      <mat-paginator class=\"mr20 t-paginator\" *ngIf=\"tOption.pagination && tOption.pTotal > 9999\"\n                     [pageSize]=\"tOption.pSize\"\n                     [length]=\"tOption.pTotal\" #paginator [pageSizeOptions]=\"tOption.pList\"\n                     (page)=\"pageChanged($event)\"></mat-paginator>\n    </div>\n  </mat-card-content>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-s-shimmer',\n  templateUrl: './s-shimmer.component.html',\n  styleUrls: ['./s-shimmer.component.scss']\n})\nexport class SShimmerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<main>\n  <ul class=\"\">\n    <li class=\"o-loading\">\n      <div class=\"\">\n        <span class=\"shimmer-box\" style=\"width:30px;height:30px; border-radius: 50%\"></span>\n      </div>\n      <div class=\"o-loading__body\">\n        <p>\n          <span class=\"shimmer-box\" style=\"width:80%;\"></span>\n          <span class=\"shimmer-box\" style=\"width:80%;\"></span>\n          </p>\n          <p>\n            <span class=\"shimmer-box\" style=\"width:50px;\"></span>\n          </p>\n      </div>\n    </li>\n  </ul>\n</main>\n","import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: []\n})\nexport class CoreModule {\n  constructor(\n    @Optional()\n    @SkipSelf()\n    core: CoreModule\n  ) {\n    if (core) {\n      throw new Error('Core Module can only be imported to AppModule.');\n    }\n  }\n}\n","import {Location} from '@angular/common';\nimport {Injectable} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {BehaviorSubject, Subject} from 'rxjs';\nimport {BaseRequestService} from './base.service';\nimport {CommonService} from './common.services';\nimport {UserIdleService} from 'angular-user-idle';\nimport {LoaderService} from './loader.service';\nimport {MyToastrService} from './toastr.service';\n\ninterface User {\n  email: string;\n  family_name: string;\n  given_name: string;\n  permissions: any;\n  isNewSetup: boolean;\n  isWLB: boolean;\n  isMSP: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class AuthenticationService {\n  timeoutSec: any; targetTimeout: any;\n  sessionUpdated: Subject<object> = new Subject<object>();\n  sessionLoader = new BehaviorSubject<boolean>(false);\n  sessionTimeout$ = this.sessionLoader.asObservable();\n  isAuthenticated = true;\n  currentUser: User | undefined;\n  resultOut: any;\n  tmpData: any;\n  cspChange: Subject<object> = new Subject<object>();\n  resultOutChange: Subject<any> = new Subject<any>();\n  tfaOutChange: Subject<any> = new Subject<any>();\n  currentUserChange: Subject<object> = new Subject<object>();\n  companyHashMap: any = {};\n  logoutWindow: any;\n  constructor(\n    readonly router: Router,\n    public baseRequestService: BaseRequestService,\n    private commonService: CommonService,\n    readonly location: Location,\n    private userIdle: UserIdleService,\n    private loaderService: LoaderService,\n    private toast: MyToastrService,\n  ) {\n    this.isAuthenticated = false;\n    this.currentUser = undefined;\n    this.resultOut = undefined;\n    this.currentUserChange.next(this.currentUser);\n    this.resultOutChange.next(this.resultOut);\n  }\n\n  setCSP(): void {\n    this.cspChange.next({csp: true});\n  }\n\n  isBase64(str: string): boolean {\n    try {\n      return atob(btoa(str)) === str;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  hasPermission(cname: string, action: string): boolean {\n    /* permissions: {me: [\"read\"], company: [\"read\", \"update\"]} */\n    return !!(this.currentUser && this.currentUser.permissions[cname]\n      && this.currentUser.permissions[cname].includes(action.toLowerCase()));\n  }\n\n  getSessionSettings(): void {\n    console.log('Session settings... ');\n    this.loaderService.display(true, 'Getting session data...');\n    this.baseRequestService.doRequest('/api/cyberutils/imaws/getSessionTimeoutSettings',\n      'post', {}).subscribe((res: any) => {\n        this.loaderService.display(false);\n        if (res) {\n          console.log('Got session data' + JSON.stringify(res));\n          this.setSession(res);\n        }\n    });\n  }\n\n  setSession(session: any): void {\n    console.log('Got session data' + JSON.stringify(session));\n    this.userIdle.stopWatching();\n    this.userIdle.setConfigValues({idle: session.idle, timeout: session.timeout, ping: session.ping});\n    // Start watching for user inactivity.\n    this.userIdle.startWatching();\n    console.log('Start session data' + JSON.stringify(session));\n    // Start watching when user idle is starting.\n    this.userIdle.onTimerStart().subscribe(count => {\n      if (!count) { return; }\n      if (!this.timeoutSec) {\n        this.targetTimeout = Math.floor(new Date().getTime() / 1000.0) + (session.timeout);\n      }\n      const currentTime = Math.floor(new Date().getTime() / 1000.0);\n      this.timeoutSec = this.targetTimeout - currentTime;\n      if (this.targetTimeout < currentTime) {\n        this.timeoutSec = 1;\n        this.logout();\n      }\n      console.log(this.timeoutSec); this.sessionLoader.next(true);\n    });\n    // Start watch when time is up.\n    this.userIdle.onTimeout().subscribe(() => {\n      this.sessionLoader.next(false);\n      this.logout();\n    });\n    this.userIdle.ping$.subscribe(() => this.keepalive());\n  }\n\n  resetSession(): void {\n    this.timeoutSec = undefined;\n    this.sessionLoader.next(false);\n    this.sessionUpdated.next({value: true});\n    this.userIdle.resetTimer();\n  }\n\n  login(loginData: any): void {\n    this.loaderService.display(true);\n    this.baseRequestService.doRequest('/usermgmt/api/auth', 'post', loginData)\n      .subscribe((result: any) => {\n        if (result.status === 'error') {\n          this.resultOutChange.next(result);\n          this.loaderService.display(false);\n        } else {\n          this.resultOut = result;\n          //  console.log(result);\n          localStorage.setItem('uasaeara', btoa(loginData.email));\n          if (this.resultOut) {\n\n            // Start watching for user inactivity.\n            this.userIdle.startWatching();\n\n            // Start watching when user idle is starting.\n            this.userIdle.onTimerStart().subscribe(count => {\n              console.log(count); this.sessionLoader.next(true);\n            });\n\n            // Start watch when time is up.\n            this.userIdle.onTimeout().subscribe(() => this.logout());\n            this.userIdle.ping$.subscribe(() => this.keepalive());\n\n            if (this.resultOut.location) {\n              window.location = this.resultOut.location;\n              this.companyHashCall();\n              this.loaderService.display(false);\n            } else if (this.resultOut.requiredMFA) {\n              this.tfaOutChange.next({mfa: true});\n            } else {\n              this.afterLogin(this.resultOut, false);\n            }\n          } else {\n            this.loaderService.display(false);\n            this.afterLogout();\n          }\n        }\n      });\n  }\n\n  logout(): void {\n    this.baseRequestService.doRequest('/api/logout', 'get').subscribe((re: any) => {\n      // this.logoutWindow = window.open(re.url, 'CCNS Logout', 'width=200, height=100');\n      // setTimeout(() => { window.location.href = `/`; this.logoutWindow.close(); }, 5000);\n      // this.afterLogout();\n      window.location.href = `${re.url}`\n    } , (err: any) => {\n      // this.logoutWindow = window.open(err.error.url, 'CCNS Logout', 'width=200, height=100');\n      // setTimeout(() => { window.location.href = `/`; this.logoutWindow.close(); }, 5000);\n      // this.afterLogout();\n      window.location.href = `${err.error.url}`\n    });\n  }\n\n  checkSession(): void {\n    this.loaderService.display(true);\n    this.baseRequestService.doRequest(`/api/company/`, 'get').subscribe(\n      (result: any) => {\n        this.loaderService.display(false);\n        this.tmpData = result.msg;\n        if (this.tmpData === 'Already logged in' || result) {\n          const shouldCheckPath = (!this.tmpData.isNewSetup);\n          this.afterLogin(this.tmpData, shouldCheckPath);\n        } else {\n          this.afterLogout();\n        }\n      }, (error: any) => {\n        if (error.ok === false) {\n          if (error.status === 401) {\n            if (!error.error.url) {\n              this.toast.sToast('error', 'Redirect URL not found. Contact Admin.');\n            } else {\n              const path = this.location.path();\n              if (path === '' || path === '/' || path === '/login') {\n                window.location = error.error.url;\n              }\n            }\n            this.isAuthenticated = false;\n            this.currentUser = undefined;\n          } else {\n            // this.afterLogout();\n            console.log('Check Session error came..');\n          }\n        } else {\n          this.afterLogout();\n          console.log('Check Session error came..');\n        }\n      }\n    );\n  }\n\n  keepalive(): void {\n    this.baseRequestService.doRequest(`/api/me`, 'get').subscribe(() => {});\n  }\n\n  companyHashCall(): void {\n    this.companyHashMap = {};\n    this.loaderService.display(true);\n    this.baseRequestService.doRequest(`/api/company/`, 'get', 'null',\n      {\n        query: {},\n        skip: 0,\n        limit: 1000\n      })\n      .subscribe((result: any) => {\n        this.loaderService.display(false);\n        if (result) {\n          if (result.data.length === 0) {\n            this.router.navigateByUrl('/companies/onboarding').then(() => console.log('redirected to on-boarding'));\n          } else {\n            result.data.forEach((obj: { _id: string | number; name: any; }) => {\n              this.companyHashMap[obj._id] = obj.name;\n            });\n          }\n        }\n      });\n  }\n\n  private afterLogin(result: User, shouldCheckPath: boolean): void {\n    this.companyHashCall();\n    this.isAuthenticated = true;\n    this.currentUser = result;\n    this.loaderService.display(true);\n    const path: string | null = localStorage.getItem('path');\n    const pathLocation = (path && (result && result.permissions &&\n      (result.permissions.includes === '' && result.permissions.includes === '*'))) ? path : '';\n    this.getSessionSettings();\n    this.loaderService.display(false);\n    if (!shouldCheckPath || this.location.path() === '' || this.location.path() === '/') {\n      this.router.navigateByUrl('/companies').then(() => console.log('redirecting to company'));\n    } else if (this.location.path() === '/login' && pathLocation !== '') {\n      this.router.navigateByUrl(pathLocation).then(() => console.log('redirected to stored path'));\n    } else {\n      this.router.navigateByUrl('/companies').then(() => console.log('redirecting to company'));\n    }\n  }\n\n  afterLogout(): void {\n    this.isAuthenticated = false;\n    this.currentUser = undefined;\n    localStorage.clear();\n    if (this.router.url.indexOf('resetpassword') > -1) {\n      console.log('showing reset password. no redirect');\n    } else {\n      setTimeout(() => {\n        this.router.navigateByUrl('/login').then(() => console.log('redirected to login'));\n      }, 500);\n    }\n  }\n}\n","import {Component, ElementRef, Input, OnInit, OnDestroy} from '@angular/core';\nimport {ModalService} from '../_services/modal.service';\nimport {LoaderService} from '../_services/loader.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 's-modal',\n  template:\n    `<div class=\"s-modal\" [ngStyle]=\"{'width' : width}\">\n        <div class=\"s-modal-body\">\n          <div *ngIf=\"showModelLoader\" class=\"loader-class\">\n            <img src=\"/assets/images/loading.gif\" width=\"30\" alt=\"Loading\">\n            <p>Loading... </p>\n            <p class=\"m0\">{{contentText}}</p>\n          </div>\n          <ng-content></ng-content>\n        </div>\n      </div>\n      <div class=\"s-modal-background\"></div>`,\n  styles: [\n    `.loader-class {\n      z-index: 10000;\n      position: fixed;\n      width: 50%;\n      top: 40%;\n      left: 25%;\n      right: 40%;\n      bottom: 40%;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      background-color: #000000ba;\n      color: white;\n      border-radius: 10px;\n      height: 150px\n    }\n    .s-modal {\n      border-radius: 10px;\n    }\n    .custom-class p {\n      color: white;\n      word-break: break-all;\n      padding: 0 10px;\n      margin-bottom: 8px;\n    }\n\n    .custom-class p span {\n      font-size: 14px\n    }`\n  ]\n})\nexport class ModalComponent implements OnInit, OnDestroy {\n  showModelLoader = false;\n  contentText: any;\n  result: any;\n  @Input()\n  id!: string;\n  @Input() width: any;\n  private readonly element: any;\n\n  constructor(private modalService: ModalService, private el: ElementRef, private loaderService: LoaderService) {\n    this.element = el.nativeElement;\n  }\n\n  ngOnInit(): void {\n    this.loaderService.ModelStatus.subscribe((val: boolean, text: string) => {\n      this.result = val;\n      this.showModelLoader = this.result.value;\n      this.contentText = this.result.text;\n    });\n    const modal = this;\n    // ensure id attribute exists\n    if (!this.id) {\n      console.error('modal must have an id');\n      return;\n    }\n    // move element to bottom of page (just before </body>) so it can be displayed above everything else\n    document.body.appendChild(this.element);\n\n    // close modal on background click\n    this.element.addEventListener('click', (e: any) => {\n      if (e.target.className === 's-modal') {\n        modal.close();\n      }\n    });\n    // add self (this modal instance) to the modal service so it's accessible from controllers\n    this.modalService.add(this);\n  }\n\n  // remove self from modal service when directive is destroyed\n  ngOnDestroy(): void {\n    this.modalService.remove(this.id);\n    this.element.remove();\n  }\n\n  // open modal\n  open(): void {\n    this.element.style.display = 'block';\n    document.body.classList.add('s-modal-open');\n  }\n\n  // close modal\n  close(): void {\n    this.element.style.display = 'none';\n    document.body.classList.remove('s-modal-open');\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {AuthGuard} from './core/auth.guard';\nimport {PnfComponent} from './shared/pnf/pnf.component';\nimport {UnauthorizedComponent} from './shared/unauthorized/unauthorized.component';\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    loadChildren: () => import('./login/login.module').then(m => m.LoginModule)\n  },\n  {\n    path: 'oauth2/auth',\n    loadChildren: () => import('./login/login.module').then(m => m.LoginModule)\n  },\n  {\n    path: 'unauthorized',\n    component: UnauthorizedComponent\n  },\n  {\n    path: '',\n    loadChildren: () => import('./admin/admin.module').then(m => m.AdminModule),\n    canActivate: [AuthGuard]\n  },\n  {\n    path: '**',\n    component: PnfComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CdkStepperModule } from '@angular/cdk/stepper';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nconst AllMaterialModules = [\n  A11yModule,\n  ClipboardModule,\n  OverlayModule,\n  DragDropModule,\n  CdkStepperModule,\n  PortalModule,\n  ScrollingModule,\n  MatAutocompleteModule,\n  MatCheckboxModule,\n  MatDatepickerModule,\n  MatNativeDateModule,\n  MatFormFieldModule,\n  MatInputModule,\n  CdkTreeModule,\n  MatRadioModule,\n  CdkTableModule,\n  MatSelectModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatMenuModule,\n  MatSidenavModule,\n  MatToolbarModule,\n  MatCardModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatListModule,\n  MatStepperModule,\n  MatTabsModule,\n  MatTreeModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatBadgeModule,\n  MatChipsModule,\n  MatIconModule,\n  MatProgressSpinnerModule,\n  MatProgressBarModule,\n  MatRippleModule,\n  MatBottomSheetModule,\n  MatDialogModule,\n  MatSnackBarModule,\n  MatTooltipModule,\n  MatPaginatorModule,\n  MatSortModule,\n  MatTableModule,\n];\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, AllMaterialModules],\n  exports: [AllMaterialModules],\n})\n\nexport class MaterialModule { }\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { ContentDataService } from '../api/services';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class MasterService {\n  addCategory = new EventEmitter();\n  contentEVE = new EventEmitter();\n  reasonEVE = new EventEmitter();\n  constructor(\n    public contentService: ContentDataService\n    \n  ) { \n  }\n  reasonData(value: any): void {\n    this.reasonEVE.next(value);\n  }\n\n  addCategoryData(): void {\n    this.addCategory.next({});\n  }\n  contentId(value: any): void {\n    this.contentEVE.next(value);\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { BaseService } from '../base-service';\nimport { ApiConfiguration } from '../api-configuration';\nimport { StrictHttpResponse } from '../strict-http-response';\nimport { RequestBuilder } from '../request-builder';\nimport { Observable } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\n\nimport { ContentData } from '../models/content-data';\nimport { ContentDataGetResp } from '../models/content-data-get-resp';\nimport { ContentEpisodesGetResp } from '../models/content-episodes-get-resp';\nimport { ContentPricingGetResp } from '../models/content-pricing-get-resp';\nimport { TrailerGetResp } from '../models/trailer-get-resp';\nimport { AddContentDescriptionParams } from '../models/add-content-description-params';\nimport { CreateLiveLearningParams } from '../models/create-live-learning-params';\nimport { CreateMasterClassParams } from '../models/create-master-class-params';\nimport { UpdatePricingParams } from '../models/update-pricing-params';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ContentDataService extends BaseService {\n  constructor(\n    config: ApiConfiguration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * Path part for operation getApiContentdataIdGet\n   */\n  static readonly GetApiContentdataIdGetPath = '/api/contentdata/{id}';\n\n  /**\n   * Get.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getApiContentdataIdGet()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getApiContentdataIdGet$Response(params: {\n    id: string;\n  }): Observable<StrictHttpResponse<ContentData>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ContentDataService.GetApiContentdataIdGetPath, 'get');\n    if (params) {\n      rb.path('id', params.id, {});\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<ContentData>;\n      })\n    );\n  }\n\n  /**\n   * Get.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getApiContentdataIdGet$Response()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getApiContentdataIdGet(params: {\n    id: string;\n  }): Observable<ContentData> {\n\n    return this.getApiContentdataIdGet$Response(params).pipe(\n      map((r: StrictHttpResponse<ContentData>) => r.body as ContentData)\n    );\n  }\n\n  /**\n   * Path part for operation getAllApiContentdataGet\n   */\n  static readonly GetAllApiContentdataGetPath = '/api/contentdata';\n\n  /**\n   * Get All.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getAllApiContentdataGet()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getAllApiContentdataGet$Response(params?: {\n\n    /**\n     * Filter query to be executed against database.\n     */\n    'q'?: string;\n    skip?: number;\n    limit?: number;\n    sort?: string;\n\n    /**\n     * Comma seperated list of fields to return.\n     */\n    fields?: string;\n  }): Observable<StrictHttpResponse<ContentDataGetResp>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ContentDataService.GetAllApiContentdataGetPath, 'get');\n    if (params) {\n      rb.query('q', params['q'], {});\n      rb.query('skip', params.skip, {});\n      rb.query('limit', params.limit, {});\n      rb.query('sort', params.sort, {});\n      rb.query('fields', params.fields, {});\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<ContentDataGetResp>;\n      })\n    );\n  }\n\n  /**\n   * Get All.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getAllApiContentdataGet$Response()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getAllApiContentdataGet(params?: {\n\n    /**\n     * Filter query to be executed against database.\n     */\n    'q'?: string;\n    skip?: number;\n    limit?: number;\n    sort?: string;\n\n    /**\n     * Comma seperated list of fields to return.\n     */\n    fields?: string;\n  }): Observable<ContentDataGetResp> {\n\n    return this.getAllApiContentdataGet$Response(params).pipe(\n      map((r: StrictHttpResponse<ContentDataGetResp>) => r.body as ContentDataGetResp)\n    );\n  }\n\n  /**\n   * Path part for operation getcontentpricingApiContentdataIdContentpricingGet\n   */\n  static readonly GetcontentpricingApiContentdataIdContentpricingGetPath = '/api/contentdata/{id}/contentpricing';\n\n  /**\n   * Get ContentPricing objects associated with ContentData.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getcontentpricingApiContentdataIdContentpricingGet()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getcontentpricingApiContentdataIdContentpricingGet$Response(params: {\n    id: string;\n  }): Observable<StrictHttpResponse<ContentPricingGetResp>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ContentDataService.GetcontentpricingApiContentdataIdContentpricingGetPath, 'get');\n    if (params) {\n      rb.path('id', params.id, {});\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<ContentPricingGetResp>;\n      })\n    );\n  }\n\n  /**\n   * Get ContentPricing objects associated with ContentData.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getcontentpricingApiContentdataIdContentpricingGet$Response()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getcontentpricingApiContentdataIdContentpricingGet(params: {\n    id: string;\n  }): Observable<ContentPricingGetResp> {\n\n    return this.getcontentpricingApiContentdataIdContentpricingGet$Response(params).pipe(\n      map((r: StrictHttpResponse<ContentPricingGetResp>) => r.body as ContentPricingGetResp)\n    );\n  }\n\n  /**\n   * Path part for operation gettrailerApiContentdataIdTrailerGet\n   */\n  static readonly GettrailerApiContentdataIdTrailerGetPath = '/api/contentdata/{id}/trailer';\n\n  /**\n   * Get Trailer objects associated with ContentData.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `gettrailerApiContentdataIdTrailerGet()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  gettrailerApiContentdataIdTrailerGet$Response(params: {\n    id: string;\n  }): Observable<StrictHttpResponse<TrailerGetResp>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ContentDataService.GettrailerApiContentdataIdTrailerGetPath, 'get');\n    if (params) {\n      rb.path('id', params.id, {});\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<TrailerGetResp>;\n      })\n    );\n  }\n\n  /**\n   * Get Trailer objects associated with ContentData.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `gettrailerApiContentdataIdTrailerGet$Response()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  gettrailerApiContentdataIdTrailerGet(params: {\n    id: string;\n  }): Observable<TrailerGetResp> {\n\n    return this.gettrailerApiContentdataIdTrailerGet$Response(params).pipe(\n      map((r: StrictHttpResponse<TrailerGetResp>) => r.body as TrailerGetResp)\n    );\n  }\n\n  /**\n   * Path part for operation getcontentepisodesApiContentdataIdContentepisodesGet\n   */\n  static readonly GetcontentepisodesApiContentdataIdContentepisodesGetPath = '/api/contentdata/{id}/contentepisodes';\n\n  /**\n   * Get ContentEpisodes objects associated with ContentData.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `getcontentepisodesApiContentdataIdContentepisodesGet()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getcontentepisodesApiContentdataIdContentepisodesGet$Response(params: {\n    id: string;\n  }): Observable<StrictHttpResponse<ContentEpisodesGetResp>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ContentDataService.GetcontentepisodesApiContentdataIdContentepisodesGetPath, 'get');\n    if (params) {\n      rb.path('id', params.id, {});\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<ContentEpisodesGetResp>;\n      })\n    );\n  }\n\n  /**\n   * Get ContentEpisodes objects associated with ContentData.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `getcontentepisodesApiContentdataIdContentepisodesGet$Response()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  getcontentepisodesApiContentdataIdContentepisodesGet(params: {\n    id: string;\n  }): Observable<ContentEpisodesGetResp> {\n\n    return this.getcontentepisodesApiContentdataIdContentepisodesGet$Response(params).pipe(\n      map((r: StrictHttpResponse<ContentEpisodesGetResp>) => r.body as ContentEpisodesGetResp)\n    );\n  }\n\n  /**\n   * Path part for operation contentDataupdatePricingApiContentdataUpdatePricingPost\n   */\n  static readonly ContentDataupdatePricingApiContentdataUpdatePricingPostPath = '/api/contentdata/updatePricing';\n\n  /**\n   * Contentdataupdatepricing.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `contentDataupdatePricingApiContentdataUpdatePricingPost()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  contentDataupdatePricingApiContentdataUpdatePricingPost$Response(params: {\n    body: UpdatePricingParams\n  }): Observable<StrictHttpResponse<any>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ContentDataService.ContentDataupdatePricingApiContentdataUpdatePricingPostPath, 'post');\n    if (params) {\n      rb.body(params.body, 'application/json');\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<any>;\n      })\n    );\n  }\n\n  /**\n   * Contentdataupdatepricing.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `contentDataupdatePricingApiContentdataUpdatePricingPost$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  contentDataupdatePricingApiContentdataUpdatePricingPost(params: {\n    body: UpdatePricingParams\n  }): Observable<any> {\n\n    return this.contentDataupdatePricingApiContentdataUpdatePricingPost$Response(params).pipe(\n      map((r: StrictHttpResponse<any>) => r.body as any)\n    );\n  }\n\n  /**\n   * Path part for operation contentDatacreateMasterClassApiContentdataCreateMasterClassPost\n   */\n  static readonly ContentDatacreateMasterClassApiContentdataCreateMasterClassPostPath = '/api/contentdata/createMasterClass';\n\n  /**\n   * Contentdatacreatemasterclass.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `contentDatacreateMasterClassApiContentdataCreateMasterClassPost()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  contentDatacreateMasterClassApiContentdataCreateMasterClassPost$Response(params: {\n    body: CreateMasterClassParams\n  }): Observable<StrictHttpResponse<any>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ContentDataService.ContentDatacreateMasterClassApiContentdataCreateMasterClassPostPath, 'post');\n    if (params) {\n      rb.body(params.body, 'application/json');\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<any>;\n      })\n    );\n  }\n\n  /**\n   * Contentdatacreatemasterclass.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `contentDatacreateMasterClassApiContentdataCreateMasterClassPost$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  contentDatacreateMasterClassApiContentdataCreateMasterClassPost(params: {\n    body: CreateMasterClassParams\n  }): Observable<any> {\n\n    return this.contentDatacreateMasterClassApiContentdataCreateMasterClassPost$Response(params).pipe(\n      map((r: StrictHttpResponse<any>) => r.body as any)\n    );\n  }\n\n  /**\n   * Path part for operation contentDataaddContentDescriptionApiContentdataAddContentDescriptionPost\n   */\n  static readonly ContentDataaddContentDescriptionApiContentdataAddContentDescriptionPostPath = '/api/contentdata/addContentDescription';\n\n  /**\n   * Contentdataaddcontentdescription.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `contentDataaddContentDescriptionApiContentdataAddContentDescriptionPost()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  contentDataaddContentDescriptionApiContentdataAddContentDescriptionPost$Response(params: {\n    body: AddContentDescriptionParams\n  }): Observable<StrictHttpResponse<any>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ContentDataService.ContentDataaddContentDescriptionApiContentdataAddContentDescriptionPostPath, 'post');\n    if (params) {\n      rb.body(params.body, 'application/json');\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<any>;\n      })\n    );\n  }\n\n  /**\n   * Contentdataaddcontentdescription.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `contentDataaddContentDescriptionApiContentdataAddContentDescriptionPost$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  contentDataaddContentDescriptionApiContentdataAddContentDescriptionPost(params: {\n    body: AddContentDescriptionParams\n  }): Observable<any> {\n\n    return this.contentDataaddContentDescriptionApiContentdataAddContentDescriptionPost$Response(params).pipe(\n      map((r: StrictHttpResponse<any>) => r.body as any)\n    );\n  }\n\n  /**\n   * Path part for operation contentDatacreateLiveLearningApiContentdataCreateLiveLearningPost\n   */\n  static readonly ContentDatacreateLiveLearningApiContentdataCreateLiveLearningPostPath = '/api/contentdata/createLiveLearning';\n\n  /**\n   * Contentdatacreatelivelearning.\n   *\n   *\n   *\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `contentDatacreateLiveLearningApiContentdataCreateLiveLearningPost()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  contentDatacreateLiveLearningApiContentdataCreateLiveLearningPost$Response(params: {\n    body: CreateLiveLearningParams\n  }): Observable<StrictHttpResponse<any>> {\n\n    const rb = new RequestBuilder(this.rootUrl, ContentDataService.ContentDatacreateLiveLearningApiContentdataCreateLiveLearningPostPath, 'post');\n    if (params) {\n      rb.body(params.body, 'application/json');\n    }\n\n    return this.http.request(rb.build({\n      responseType: 'json',\n      accept: 'application/json'\n    })).pipe(\n      filter((r: any) => r instanceof HttpResponse),\n      map((r: HttpResponse<any>) => {\n        return r as StrictHttpResponse<any>;\n      })\n    );\n  }\n\n  /**\n   * Contentdatacreatelivelearning.\n   *\n   *\n   *\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `contentDatacreateLiveLearningApiContentdataCreateLiveLearningPost$Response()` instead.\n   *\n   * This method sends `application/json` and handles request body of type `application/json`.\n   */\n  contentDatacreateLiveLearningApiContentdataCreateLiveLearningPost(params: {\n    body: CreateLiveLearningParams\n  }): Observable<any> {\n\n    return this.contentDatacreateLiveLearningApiContentdataCreateLiveLearningPost$Response(params).pipe(\n      map((r: StrictHttpResponse<any>) => r.body as any)\n    );\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}